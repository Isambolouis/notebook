(function () {
    'use strict';

    const processNotReady = "the process is not ready";
    class LeisError extends Error { }
    class LeisProcessNotReady extends Error { }
    class UniqueType extends Error { }

    const errors = {
        LeisError,
        LeisProcessNotReady,
        UniqueType
    };
    const typeError = {
        listenerError: {
            exe: (type) => `type of ${typeof type} is not a callback function`
        },
        processNotReady: {
            name: processNotReady
        },
        uniqueTypeError: {
            exe: (type) => `the ${type.split(',')[0]} must be unique, the key ${type.split(',')[1]} already exists`
        }

    };
    /**
     * 
     * @param {'LeisError'|"LeisProcessNotReady"|"UniqueType"} error 
         * @param {'listenerError'|"processNotReady"|'uniqueTypeError' } message 
     */
    function DisplayError(error, message, type) {
        throw new errors[error](typeError[message].exe(type))
    }

    /**
     * **EventEmitter** in Leistrap
     * 
     * The `EventEmitter` is a core utility in Leistrap designed to create unique, bidirectional communication channels.
     * It facilitates asynchronous and fluid information sharing between various UI components and elements within the application. 
     * Thanks to its core methods, **`handle`** and **`invoke`**, the EventEmitter enables seamless event-driven communication 
     * between objects, promoting better decoupling and reusability.
     * 
     * - **Key Features**:
     *   - **`handle`**: Define a channel and attach a listener to it.
     *   - **`invoke`**: Trigger a channel, executing its attached listener if it exists.
     *   - **`removeEvent`**: Remove a channel if it's removable.
     *   - **`hasEvent`**: Check if a channel exists.
     *   - **`eventsList`**: Get a list of all registered channels.
     *   - **`clear`**: Cleanup all registered channels and events.
     */
    const lsEmitter = function (obj) {

        let channels = {};
        let inWaitChannel = {};
        let data = null;
        let isDestroyed = false;

        const event_ = { send: (d) => { data = d; } };

        function validateChannelName(channel) {
            if (!channel || typeof channel !== "string" || channel.trim() === "") {
                throw new EventEmitterError(
                    "Invalid channel name: The channel name must be a non-empty string.",
                    "INVALID_CHANNEL_NAME"
                );
            }
         }
        

         function checkState(){
            if(isDestroyed){
                throw new EventEmitterError(
                    "Operation failed: The EventEmitter instance has been destroyed.\n " +
                    "No further actions can be performed on this instance.\n " +
                    "Ensure you are not referencing a cleared or invalid EventEmitter object.\n",
                    "EVENT_DESTROYED"
                );
            }
         }

        class EventEmitterError extends Error {
            constructor(message, code) {
                super(message);
                this.name = "EventEmitterError";
                this.code = code; 
            }
        }


            
        /**
         * **`invoke`**: Trigger a channel and execute its listener.
         * 
         * This method is used to invoke a channel. If the channel does not exist yet, it is added to a queue 
         * and invoked as soon as it is defined via **`handle`**.
         * 
         * @param {string} channel - The name of the channel to invoke.
         * @param {function|null} [listener=null] - A callback function to execute immediately after the channel's listener 
         *                                          is invoked. This callback receives data sent from the channel's listener 
         *                                          through **`event.send(data)`**. Can be `null` if no additional processing is needed.
         * @param {...any} args - Additional arguments to pass to the channel's listener. These can include strings, arrays, 
         *                        objects, or asynchronous callbacks.
         * 
         * **Note**: It is recommended to use asynchronous callbacks if you need to handle complex operations.
         * 
         * **Example Usage**:
         * ```javascript
         * eventEmitter.invoke("myChannel", (data) => {
         *     console.log("Response from listener:", data);
         * }, "arg1", { key: "value" });
         * ```
         */
        async function invoke(channel, listener, ...args) {

            validateChannelName(channel);
        
            async function exe() {
                if ( !isDestroyed  && channels[channel]) {
                    await channels[channel].listener(event_, ...args);
                }
                if ( !isDestroyed && listener) listener(data);
                data = null;
            }
        
            if (!isDestroyed && obj.has(channel, channels)) {
                obj.after(1, exe);
            } else {
                if(!inWaitChannel[channel]) inWaitChannel[channel] = [];
                inWaitChannel[channel].push(() => obj.after(1, exe));
            }
        }



         /**
         * **`handle`**: Define a new channel and attach a listener to it.
         * 
         * This method is used to create a channel and listen for invocations on it via **`invoke`**.
         * 
         * @param {string} channel - The name of the channel to create.
         * @param {function} listener - The handler function to be called when the channel is invoked. 
         *                              The first parameter of this function must always be **`event`**, 
         *                              which is used to send immediate data to the listener via **`event.send(data)`**.
         *                              Additional parameters can be passed through **`...args`**.
         * @param {boolean} [removable=true] - Indicates whether the channel can be removed later using **`removeEvent`**. 
         *                                     Default is `true`. If set to `false`, the channel cannot be removed.
         * @param {boolean} [writable=true] - Defines whether the channel can be overwritten. Default is `true`. 
         *                                    If set to `false`, the channel becomes immutable and cannot be modified.
         * 
         * **Example Usage**:
         * ```javascript
         * eventEmitter.handle("myChannel", (event, data) => {
         *     console.log("Data received:", data);
         *     event.send({ success: true });
         * }, true, true);
         * ```
         */
        async function handle(channel, listener, removable = true, writable = true) {
            checkState();
            validateChannelName(channel);
        
            if (obj.has(channel, channels) && !channels[channel].writable) {
                throw new EventEmitterError(
                    `Cannot redefine the channel "${channel}" because it is marked as non-writable.`,
                    "NON_WRITABLE_CHANNEL"
                );
            }
        
            if (obj.has(channel, inWaitChannel)) {
                inWaitChannel[channel].forEach(function(item){
                    item();
                });
                delete inWaitChannel[channel];
            }

            channels[channel] = { listener, removable, writable };
        }
        

        
        /**
         * **`removeEvent`**: Remove a registered channel.
         * 
         * This method removes a channel from the EventEmitter. If the channel is not marked as **`removable`**, 
         * it will throw an error.
         * 
         * @param {string} channel - The name of the channel to remove.
         * @throws {Error} If the channel is not removable.
         * 
         * **Example Usage**:
         * ```javascript
         * eventEmitter.removeEvent("myChannel");
         * ```
         */
        function removeChannel(channel) {
            checkState();
            validateChannelName(channel);
        
            if (!obj.has(channel, channels)) {
                throw new EventEmitterError(
                    `Cannot remove the channel "${channel}" because it does not exist.`,
                    "CHANNEL_NOT_FOUND"
                );
            }
        
            if (!channels[channel].removable) {
                throw new EventEmitterError(
                    `Cannot remove the channel "${channel}" because it is marked as non-removable.`,
                    "NON_REMOVABLE_CHANNEL"
                );
            }
        
            delete channels[channel];
        

            if (obj.has(channel, inWaitChannel)) {
                delete inWaitChannel[channel];
            }
        
            if (data && data.channel === channel) {
                data = null;
            }
            
        }
        
        /**
         * **`clear`**: Cleanup all registered channels and events.
         * 
         * This method removes all channels, listeners, and pending events from the EventEmitter. 
         * It ensures that no memory leaks occur and that the EventEmitter can be safely discarded.
         * 
         * **Example Usage**:
         * ```javascript
         * eventEmitter.clear();
         * ```
         */

        function clear() {
            checkState();
            Object.keys(channels).forEach(channel => {
                delete channels[channel];
            });
        
      
            Object.keys(inWaitChannel).forEach(channel => {
                delete inWaitChannel[channel];
            });
            
            Object.keys(EVENTS).forEach(meth => {
                EVENTS[meth] = checkState;
            });

            data = null;
            EVENTS = null;
            channels = null;
            inWaitChannel = null;
            isDestroyed = true;
            return true
        }
        
        
         /**
         * **`eventsList`**: Get a list of all registered channels.
         * 
         * This method returns an array containing the names of all currently registered channels.
         * 
         * @returns {string[]} - Array of channel names.
         * 
         * **Example Usage**:
         * ```javascript
         * console.log("Registered channels:", eventEmitter.eventsList());
         * ```
         */
        let  eventsList  = ()=> Object.keys(channels);


            /**
         * **`hasEvent`**: Check if a channel exists.
         * 
         * This method verifies whether a channel is registered in the EventEmitter.
         * 
         * @param {string} channel - The name of the channel to check.
         * @returns {boolean} - Returns `true` if the channel exists, otherwise `false`.
         * 
         * **Example Usage**:
         * ```javascript
         * if (eventEmitter.hasEvent("myChannel")) {
         *     console.log("Channel exists!");
         * }
         * ```
         */
        let  hasEvent = (channel) => obj.has(channel, channels);


        let EVENTS =  {
            invoke,
            handle,
            removeEvent: removeChannel,
            removeChannel,
            hasEvent,
            eventsList,
            clear
        };

        return EVENTS
    };

    // maths operators

    function generateId(min = 0, max = 1) {
        const sy = "dh5263ayLogl";
        const num = "0123456789";
        const letters = "abcdefghijklmnopqrstuvwxyz";
        const lettUpc = letters.toLocaleUpperCase();
        const allItem = [sy, num, letters, lettUpc];
        let [res, i, y] = ["", 0, 0];
        const len = randint(min, max);

        while (y < len) {
            for (i = 0; i < allItem.length; i++) {
                let _c = allItem[Math.floor(Math.random() * allItem.length)];
                res += _c[Math.floor(Math.random() * _c.length)];
            }
            y++;
        }
        return res
    }

    function choice(obj) {

        if (typeof obj === "object") {
            const _bj = Object.keys(obj);
            return (obj[_bj[Math.floor(Math.random() * _bj.length)]]);
        }
        else if (
            typeof obj === "function"
            || typeof obj === "boolean"
            || typeof obj === "undefined"
            || typeof obj === "symbol"
        ) {
            throw new Error(`can not execute a ${typeof obj}`)
        }
        else if (typeof obj === "number") {
            const _n = [];
            for (let i = 0; i < obj; i++) { _n.push(i); }
            return _n[Math.floor(Math.random() * _n.length)]
        }
        else if (typeof obj === "string") {
            return obj[Math.floor(Math.random() * obj.length)]
        }
    }

    function randint(min, max) {

        if (typeof min === "number" && typeof max === "number") {
            const _p = [];
            for (let _x = min; _x < max; _x++) {
                _p.push(_x);
            }
            return choice(_p)

        }
        else {
            throw new Error(`can not execute ${typeof min !== "number" ? typeof min : typeof max}`)
        }
    }

    function rangeList(num, offset = 0, step = 1) {
        const result = [];
        for (let x = offset; x < num; x++) {
            if (x % step == 0) result.push(x);
        }
        return result
    }


    function isArray(obj) {
        return obj.constructor.toString().indexOf("Array") > -1
    }
    function isObject(obj) {
        return obj.constructor.toString().indexOf("Object") > -1;
    }

    function isString(obj) {
        if (typeof obj === "string") {
            return true
        }
        return obj instanceof String
    }

    function isFunction(obj) {
        return typeof obj === "function";
    }

    function isEmpty(obj) {
        return obj.length === 0 || Object.keys(obj).length === 0
    }

    function has(prop, obj) {
        return obj.indexOf ? obj.indexOf(prop) > -1 : obj.hasOwnProperty(prop)
    }
    function isTypeOf(prop, obj) {
        return prop instanceof obj
    }

    function copyObject(obj, target, overwrite = false, ...exp) {
        if (!target) { target = {}; }    if (!obj) { obj = {}; }    Object.keys(obj).forEach(item => {
            if (!(has(item, target) && !overwrite)) {
                if (!has(item, exp)) {
                    target[item] = obj[item];
                    if (isArray(target)) { target[item] = obj[item]; }
                }
            }
        });
        return target
    }

    function after(s, func, ...args) {
        return setTimeout(func, s, args)
    }


    function loopObject(obj, callback = (value, key, index, finished) => value) {
        const result = [];
        if (obj) {
            let c = 0; let f = false;
            for (var x in obj) {
                c++;
                c === Object.keys(obj).length ? f = true :
                    f = false;
                callback(obj[x], x, c - 1, f);
                result.push(obj[x]);
            }
        }
        return result
    }


    function _EventEmitter(){
        return lsEmitter({ has, after, copyObject })
    }

    /**
     * 
     * @param {HTMLElement} parent 
     * @param {BaseElement} element 
     */
    function Render(parent, element) {

        setTimeout(function () {
            parent.append(element.render());
        }, 300);

    }

    const hooks = {

        // these hooks will be executed when an instance of leistrap is created
        useInit: [],
        // these hooks  will be executed when  we pass options to the new leistrap
        // instance just created
        useOption: [],
        // hooks which will be executed before an element rending
        useRender: [],
        /**
         * call a hook
         * @param { "useInit" |"useOption"|"useRender"} name 
         */
        callHook: function (name, DisplayError, ...argv) {
            this[name].forEach(hook => {
                if (isFunction(hook)) hook(...argv);
                else { DisplayError("LeisError", "listenerError", hook); }
            });
        }
    };

    function SetOptions(element, options, getObjectByIndexName) {
        if (!options.data) options.data = {};

        // get all eventType , all properties which begin with on
        const exp = ["data", "text", "content", "parent", "id", "autoClick"];
        loopObject(copyObject(options, false, false, ...exp), function (value, key) {
            if (key.startsWith("on") && typeof value == "function") {
                // split the key for getting the eventName and options passed
                let eventType = key.slice(2, key.length).split("$");
                element.addEvent(eventType[0], value, eventType[1], eventType[2]);
            }
            else {
                // now let assign all html properties not method
                // let begin we the string type, for example id, className etc...
                if (typeof element._conf[key] != "function") {
                    element._conf[key] = value;
                }
                
                //call a native function
                else {
                    if(typeof value == "object"){
                        if(isArray(value)) element._conf[key](...value);
                    }
                    else {element._conf[key](value);}
                }
                // get all css styles definition an other html properties require object as value
                if (isObject(value)) {
                    loopObject(value, (v, k) => element._conf[key][k] = v);
                }
            }
        });
        // const copyOptions = copyObject(options, false, false, '')
        if (options.content) {
            element.content = options.content;
            options.content.forEach((item, index) => item.parent = element);
        }

        if (options.parent) {
            if (isString(options.parent)) {
                getObjectByIndexName(options.parent,
                    true, parent => parent.add(element));
            }
            else { options.parent.add(element); }
        }

        if (options.text) element.setText(options.text);

        if (options.data.id) element.data.id = options.data.id;
        if(options.autoClick) element._conf.click();

        // clear all options  and save space
        setTimeout(() => {
            loopObject(options, function (value, key, i, end) {
                try {
                    delete options[key];
                } catch (error) {
                }

            });
        }, 2000);

    }

    var leistrapCss = "\r\n\r\n:root {\r\n\r\n    --leis-baseColor: #28a745;\r\n    --leis-chat-card-bg-cl: #f4eff8;\r\n    --leis-body-cl: #f8f8f8;\r\n      \r\n    --leis-sideNav-cl: hsla(0, 0%, 100%, 0.942);\r\n    --leis-sideNav-bx-sh: 0 2px 9px rgba(0, 0, 0, .16);\r\n    \r\n    --leis-highlight-cl: var(--leis-body-cl);\r\n    \r\n    --leis-txt-cl: hsla(0, 0%, 0%, 0.962);\r\n    --leis-txt-z-size : var(--leis-font-size);\r\n\r\n    \r\n    --leis-line-separator-cl: #d4d4da;\r\n    \r\n    --leis-default-cl: #f8f7fc;\r\n    --leis-default-selector: #f6f6f6;\r\n    \r\n    --leis-img-cd-cl: #f1f1f1;\r\n    --leis-subtitle-cl: rgb(152, 150, 150);\r\n    --leis-img-outline-cl: #aeaeae;\r\n\r\n    --leis-nav-cl: #fcfbfbcf;\r\n    --leis-nav-bx-sh: rgba(0, 0, 0, .16) 0px 1px 4px;\r\n\r\n  \r\n    \r\n    \r\n    --leis-effect-img: contrast(1.5) brightness(1.02) saturate(108%);\r\n    --leis-border-width: 1.2px;\r\n    --leis-border : var(--leis-border-width) solid #ddd; \r\n    --leis-heading-color: inherit;\r\n    --leis-font-sans-serif: system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Noto Sans\", \"Liberation Sans\", Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\r\n    --leis-font-monospace: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\r\n    --leis-font-size: 1rem;\r\n    --leis-resize-cl: var(--leis-primary-cl);\r\n    --leis-select-cl: #f6f3f3a3;\r\n\r\n    --leis-title-cl : var(--leis-heading-color);\r\n    --leis-title-font-family : var(--leis-font-sans-serif);\r\n}\r\n\r\n\r\n/* reset padding and marging */\r\n.leis::before,\r\n.leisie::before,\r\n.leis::after,\r\n.leisie::after,\r\n.ls::after,\r\n.ls::before,\r\n.leis,\r\n.leisie,\r\n\r\n.ls {\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n    margin: 0;\r\n    font-family: inherit;\r\n    font-size: inherit;\r\n    line-height: inherit\r\n}\r\n\r\nbutton,\r\nselect {\r\n    text-transform: none\r\n}\r\n\r\nhr {\r\n    margin: 1rem 0;\r\n    color: inherit;\r\n    border: 0;\r\n    border-top: var(--leis-border-width) solid;\r\n    opacity: .25\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6,\r\nth {\r\n    margin-top: 0;\r\n    margin-bottom: .5rem;\r\n    font-weight: 500;\r\n    line-height: 1.2;\r\n    font-family: var(--leis-title-font-family);\r\n    color: var(--leis-title-cl)\r\n}\r\n\r\nth {\r\n    padding: 0 10px;\r\n}\r\n\r\n*,\r\n::after,\r\n::before {\r\n    box-sizing: border-box\r\n}\r\n\r\n* {\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n}\r\n/* *::-webkit-scrollbar {\r\n    height: 4px;\r\n    width: 10px;\r\n    cursor: default !important;\r\n\r\n} */\r\n/* *::-webkit-scrollbar-button{\r\n    background-color: var(--leis-baseColor);\r\n    width: 7px;\r\n    width: 7px;\r\n} */\r\n/* *::-webkit-scrollbar-thumb {\r\n    background-color: rgba(222, 217, 217, 0.541);\r\n    background-color: var(--leis-baseColor);\r\n} */\r\n\r\n\r\n\r\nbody {\r\n    color: var(--leis-txt-cl);\r\n    background-color: var(--leis-body-cl);\r\n    font-family: var(--leis-font-sans-serif);\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    font-size: var(--leis-font-size);\r\n    -webkit-text-size-adjust: 100%;\r\n    text-size-adjust: 100%;\r\n    -webkit-tap-highlight-color: transparent;\r\n\r\n}\r\n\r\n[type=search] {\r\n    outline-offset: -2px;\r\n    -webkit-appearance: textfield\r\n}\r\n\r\n::-webkit-search-decoration {\r\n    -webkit-appearance: none\r\n}\r\n\r\n::-webkit-color-swatch-wrapper {\r\n    padding: 0\r\n}\r\n\r\n::-webkit-file-upload-button {\r\n    font: inherit;\r\n    -webkit-appearance: button\r\n}\r\n\r\nhtml {\r\n    scroll-behavior: smooth;\r\n}\r\n\r\n/* layout*/\r\n\r\n.leis-layout {\r\n    min-width: 100%;\r\n    min-height: 100%;\r\n\r\n}\r\n\r\n\r\n.leis-hbox-item {\r\n    position: relative;\r\n    font-size: inherit;\r\n    text-align: inherit;\r\n    min-height: 100%;\r\n}\r\n\r\n.leis-vbox-item {\r\n    position: relative;\r\n    min-width: 100%;\r\n    font-size: inherit;\r\n}\r\n\r\n/* flexbox */\r\n\r\n.leis-flex {\r\n    position: relative;\r\n    display: -webkit-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-box-direction: normal;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n    min-width: 0;\r\n    word-wrap: break-word;\r\n    background-clip: border-box;\r\n    margin-bottom: 0.5em;\r\n\r\n}\r\n\r\n.leis-flex.leis-row,\r\n.leis-row {\r\n    -webkit-box-orient: horizontal;\r\n    -ms-flex-direction: row;\r\n    flex-direction: row;\r\n}\r\n\r\n.leis-flex.leis-column,\r\n.leis-colunm {\r\n    -webkit-box-orient: vertical;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n}\r\n\r\n.l-g-s {\r\n    gap: 0.5rem;\r\n}\r\n\r\n.l-g-n {\r\n    gap: 1rem;\r\n}\r\n\r\n.l-g-n {\r\n    gap: 1.5rem;\r\n}\r\n\r\n\r\n\r\n/* lines */\r\n\r\n.leis-line-h {\r\n    height: 0.5px;\r\n    outline: none;\r\n    border: none;\r\n    background-color: var(--leis-line-separator-cl);\r\n}\r\n\r\n/* cards */\r\n\r\n.leis-card,\r\n.leis-card-sms,\r\n.leis-dropdown,\r\n.leis-dropdown-content,\r\n.leis-alert-card,\r\n.leis-slideshow-container {\r\n    position: relative;\r\n    display: -webkit-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-box-direction: normal;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n    min-width: 0;\r\n    word-wrap: break-word;\r\n    background-clip: border-box;\r\n    border: var(--leis-card-bd);\r\n    border-radius: 6px;\r\n    -webkit-box-shadow: var(--leis-card-bx-sh);\r\n    box-shadow: var(--leis-card-bx-sh);\r\n    margin-bottom: 0.5em;\r\n}\r\n\r\n\r\n\r\n/* calendar*/\r\n.leis-calendar-container {\r\n    position: relative;\r\n    width: 350px;\r\n    min-height: 350px;\r\n\r\n    padding: 0.5rem 0.5rem;\r\n    padding-top: 1rem;\r\n    margin: 0;\r\n    outline: none;\r\n    border: 1px solid #ddd;\r\n    background-color: #fff;\r\n    border-radius: 6px;\r\n    -webkit-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\r\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.leis-calendar {\r\n    position: relative;\r\n    left: -2px;\r\n    width: 100%;\r\n    padding: 0;\r\n\r\n}\r\n\r\n.leis-date {\r\n    text-align: center;\r\n    font-size: inherit;\r\n\r\n}\r\n\r\n.leis-date p {\r\n    width: 40px;\r\n    padding: 0.5rem 0;\r\n    border-radius: 5px;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n}\r\n\r\n.leis-date p.active {\r\n    background-color: #b9d6fcb2;\r\n}\r\n\r\n.leis-date p:hover {\r\n    background-color: #7f8d9e4d\r\n}\r\n\r\n.leis-date.active {\r\n    background-color: transparent;\r\n    color: inherit;\r\n}\r\n\r\n.leis-date.active.today p {\r\n    background-color: transparent;\r\n    color: inherit;\r\n    border: 2px solid rgba(255, 46, 46, 0.743);\r\n}\r\n\r\n.leis-calendar-day {\r\n    font-weight: 400;\r\n    text-align: left;\r\n}\r\n\r\n.leis-year-info {\r\n    position: relative;\r\n    margin-bottom: 1.5rem;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: flex-start;\r\n    gap: 0.5rem;\r\n    font-weight: 500;\r\n}\r\n\r\n.leis-date.today p {\r\n    background-color: rgba(255, 46, 46, 0.743);\r\n    color: #fff;\r\n    border-radius: 6px;\r\n}\r\n\r\n.calendar-next,\r\n.calendar-prev {\r\n    position: absolute;\r\n    top: 5px;\r\n    z-index: 1;\r\n    font-weight: 500;\r\n    outline: none;\r\n    border: none;\r\n    background-color: inherit;\r\n    color: inherit;\r\n    padding: 0.2rem 0.5rem;\r\n    cursor: pointer;\r\n}\r\n\r\n.calendar-next:hover,\r\n.calendar-prev:hover {\r\n    color: #0062cc;\r\n}\r\n\r\n.calendar-next {\r\n    right: 6px;\r\n}\r\n\r\n.calendar-prev {\r\n    left: 6px;\r\n}\r\n\r\n.leis-calendar-cover {\r\n    position: relative;\r\n    width: -moz-fit-content;\r\n    width: fit-content;\r\n    overflow: hidden;\r\n\r\n}\r\n\r\n/*\r\ncustom calendar\r\n*/\r\n\r\n.custom-calendar-container {\r\n    position: relative;\r\n    width: 320px;\r\n    height: auto;\r\n    overflow: hidden;\r\n    border: none;\r\n    outline: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n\r\n    background-color: inherit;\r\n\r\n}\r\n\r\n.custom-calendar-card {\r\n    position: relative;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    border: 1px solid #ccc;\r\n    border-radius: 6px;\r\n    background-color: #fff;\r\n    padding: 1rem 0.5rem;\r\n}\r\n\r\n\r\n\r\n.custom-Date,\r\n.daysOff,\r\n.custom-header Div {\r\n    border: none;\r\n    outline: none;\r\n    width: 50px;\r\n    padding: 8px 5px;\r\n    border-radius: 5px;\r\n    font-weight: 500;\r\n    color: inherit;\r\n}\r\n\r\n.custom-Date {\r\n    cursor: pointer;\r\n}\r\n\r\n.custom-Date.active-date {\r\n    background-color: #287be9;\r\n    color: #fff;\r\n}\r\n\r\n.custom-Date:hover {\r\n    background-color: #abc9f0a4;\r\n}\r\n\r\n.custom-Date,\r\n.daysOff {\r\n    background-color: #ffffffa8;\r\n}\r\n\r\n.daysOff {\r\n    pointer-events: none;\r\n    color: #a39999;\r\n    opacity: 0.5;\r\n}\r\n\r\n.custom-body {\r\n    padding: 0;\r\n    width: 100%;\r\n    gap: 3px;\r\n    overflow: hidden;\r\n}\r\n\r\n.custom-row,\r\n.custom-header {\r\n    padding: 0;\r\n    margin: 0;\r\n    gap: 3px;\r\n\r\n}\r\n\r\n.custom-header Div {\r\n    font-weight: 400;\r\n}\r\n\r\n.custom-yearinfo {\r\n    width: 100%;\r\n    gap: 0.5rem;\r\n    justify-content: center;\r\n    font-weight: 500;\r\n}\r\n\r\n\r\n/* inputs*/\r\n\r\n\r\n\r\n/* leis group button*/\r\n\r\n.leis-groupBtn-container {\r\n    width: -moz-fit-content;\r\n    width: fit-content;\r\n    position: relative;\r\n}\r\n\r\n.leis-groupBtn-card,\r\n.leis-groupBtn-card.dark-group {\r\n    width: 100%;\r\n    padding: 5px 5px;\r\n    background-color: #2b3a49dc;\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    gap: 0.255rem;\r\n    color: rgb(235, 225, 225);\r\n    border-radius: 6px;\r\n}\r\n\r\n.leis-groupBtn-item {\r\n    border-radius: none;\r\n    padding: 0 8px;\r\n    background-color: inherit;\r\n    font-size: inherit;\r\n    color: inherit;\r\n    outline: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    white-space: nowrap;\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n    transition: .3s ease;\r\n}\r\n\r\n.leis-groupBtn-item:hover,\r\n.leis-groupBtn-item.dark-group .leis-groupBtn-item:hover {\r\n    background-color: #6e6d6d;\r\n}\r\n\r\n.leis-groupBtn-item:focus,\r\n.leis-groupBtn-item.dark-group .leis-groupBtn-item:focus {\r\n    background-color: #fff;\r\n    background-color: #969292;\r\n    box-shadow: 0 0px 0px 2px rgba(0, 0, 0, 0.136);\r\n}\r\n\r\n.leis-groupBtn-card.light-group {\r\n    background-color: var(--leis-light-cl);\r\n    color: #000;\r\n    border: 1px solid #ddddddb5;\r\n}\r\n\r\n.leis-groupBtn-card.light-group .leis-groupBtn-item:not(:last-child) {\r\n    border-right: 1px solid #ddddddad;\r\n}\r\n\r\n.leis-groupBtn-card.light-group .leis-groupBtn-item:hover {\r\n    background-color: #e1dadaca;\r\n}\r\n\r\n.leis-groupBtn-card.light-group .leis-groupBtn-item:focus {\r\n    background-color: #e1dadab9;\r\n    box-shadow: 0 0px 0px 2px rgba(0, 0, 0, 0.136);\r\n}\r\n\r\n\r\n\r\n.leis-groupBtn-card.secondary-group {\r\n    background-color: var(--leis-secondary-hover-cl);\r\n    color: rgb(235, 225, 225);\r\n    border: 1px solid #ddddddb5;\r\n}\r\n\r\n.leis-groupBtn-card.secondary-group .leis-groupBtn-item:not(:last-child) {\r\n    border-right: 1px solid #bebcbcdf;\r\n}\r\n\r\n.leis-groupBtn-card.secondary-group .leis-groupBtn-item:hover {\r\n    background-color: rgb(183, 179, 179);\r\n    color: #fff;\r\n}\r\n\r\n.leis-groupBtn-card.secondary-group .leis-groupBtn-item:focus {\r\n    background-color: rgb(183, 179, 179);\r\n    color: #fff;\r\n    box-shadow: 0 0px 0px 2px rgba(0, 0, 0, 0.136);\r\n}\r\n\r\n\r\n\r\n.leis-groupBtn-card.primary-group {\r\n    background-color: var(--leis-primary-hover-cl);\r\n    color: rgb(235, 225, 225);\r\n    border: 1px solid #ddddddb5;\r\n}\r\n\r\n.leis-groupBtn-card.primary-group .leis-groupBtn-item:not(:last-child) {\r\n    border-right: 1px solid #bebcbcdf;\r\n}\r\n\r\n.leis-groupBtn-card.primary-group .leis-groupBtn-item:hover {\r\n    background-color: #4f8dd0;\r\n    color: #fff;\r\n}\r\n\r\n.leis-groupBtn-card.primary-group .leis-groupBtn-item:focus {\r\n    background-color: #4f8dd0;\r\n    color: #fff;\r\n    box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.136);\r\n}\r\n\r\n.leis-groupBtn-card.success-group {\r\n    background-color: var(--leis-success-hover-cl);\r\n    color: #fff;\r\n    border: 1px solid #70d988;\r\n}\r\n\r\n.leis-groupBtn-card.success-group .leis-groupBtn-item:not(:last-child) {\r\n    border-right: 1px solid #70d988;\r\n}\r\n\r\n.leis-groupBtn-card.success-group .leis-groupBtn-item:hover {\r\n    background-color: #8deba2c4;\r\n    color: #000;\r\n}\r\n\r\n.leis-groupBtn-card.success-group .leis-groupBtn-item:focus {\r\n    background-color: #8deba2c4;\r\n    color: #000;\r\n    box-shadow: 0 0px 0px 2px rgba(0, 0, 0, 0.136);\r\n}\r\n\r\n\r\n.leis-groupBtn-card.warning-group {\r\n    background-color: hsla(45, 95%, 66%, 0.939);\r\n    color: #000;\r\n    border: 1px solid hsla(45, 95%, 66%, 0.939);\r\n}\r\n\r\n.leis-groupBtn-card.warning-group .leis-groupBtn-item:not(:last-child) {\r\n    border-right: 1px solid hsl(45, 64%, 82%);\r\n}\r\n\r\n.leis-groupBtn-card.warning-group .leis-groupBtn-item:hover {\r\n    background-color: hsla(45, 84%, 42%, 0.939);\r\n    color: #fff;\r\n}\r\n\r\n.leis-groupBtn-card.warning-group .leis-groupBtn-item:focus {\r\n    background-color: hsla(45, 84%, 42%, 0.939);\r\n    color: #fff;\r\n    box-shadow: 0 0px 0px 2px rgba(0, 0, 0, 0.136);\r\n}\r\n\r\n.leis-groupBtn-card.info-group {\r\n    background-color: #a6eaf5e9;\r\n    color: #000;\r\n    border: 1px solid #a6eaf5e9;\r\n}\r\n\r\n.leis-groupBtn-card.info-group .leis-groupBtn-item:not(:last-child) {\r\n    border-right: 1px solid #a6eaf5e9;\r\n}\r\n\r\n.leis-groupBtn-card.info-group .leis-groupBtn-item:hover {\r\n    background-color: #589faad1;\r\n    color: #fff;\r\n}\r\n\r\n.leis-groupBtn-card.info-group .leis-groupBtn-item:focus {\r\n    background-color: #589faad1;\r\n    color: #fff;\r\n    box-shadow: 0 0px 0px 2px rgba(0, 0, 0, 0.136);\r\n}\r\n\r\n\r\n.leis-groupBtn-card.danger-group {\r\n    background-color: #cf5662db;\r\n    color: #fff;\r\n    border: 1px solid #cf5662db;\r\n}\r\n\r\n.leis-groupBtn-card.danger-group .leis-groupBtn-item:not(:last-child) {\r\n    border-right: 1px solid #ddb2b6;\r\n}\r\n\r\n.leis-groupBtn-card.danger-group .leis-groupBtn-item:hover {\r\n    background-color: #a6464edb;\r\n    color: #fff;\r\n}\r\n\r\n.leis-groupBtn-card.danger-group .leis-groupBtn-item:focus {\r\n    background-color: #a6464edb;\r\n    color: #fff;\r\n    box-shadow: 0 0px 0px 2px rgba(0, 0, 0, 0.136);\r\n}\r\n\r\n/* Modal */\r\n\r\n.leis-modal-container {\r\n    display: none;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: hsla(0, 2%, 8%, 0.372);\r\n    overflow-x: hidden;\r\n    outline: 0;\r\n    z-index: 1000;\r\n}\r\n\r\n.leis-modal-dialog {\r\n    position: absolute;\r\n    top: 25%;\r\n    left: 50%;\r\n    padding: 0.5rem;\r\n    background-clip: padding-box;\r\n    background-color: #fff;\r\n    /* background-color: var(--leis-card-cl); */\r\n    border: 1px solid rgba(255, 255, 255, 0.15);\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n    outline: none;\r\n    animation: modal-zoom-out .3s ease;\r\n    width: 500px;\r\n    min-height: 250px;\r\n    max-height: 100vh;\r\n    height: 250px;\r\n}\r\n\r\n\r\n.modal-transform {\r\n    transform: translate(-50%, -25%);\r\n}\r\n\r\n.leis-modal-content {\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 10px 0;\r\n    position: relative;\r\n    background-color: inherit;\r\n\r\n}\r\n\r\n.leis-modal-container.show .leis-modal-dialog {\r\n    top: 25%;\r\n    transition: 1s ease;\r\n}\r\n\r\n.leis-modal-header {\r\n    display: flex;\r\n    flex-shrink: 0;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid var(--leis-line-separator-cl);\r\n}\r\n\r\n.leis-modal-header .leis-modal-title {\r\n    padding: 5px 10px;\r\n}\r\n\r\n.leis-modal-header .leis-btn-close {\r\n    border: none;\r\n    font-size: 2rem;\r\n    top: -0.5rem;\r\n    left: -5px;\r\n    color: #999;\r\n    cursor: pointer;\r\n}\r\n\r\n.leis-modal-header .leis-btn-close:hover {\r\n    color: #000;\r\n}\r\n\r\n.leis-modal-body {\r\n    position: relative;\r\n    margin-left: 7px;\r\n    width: 100%;\r\n    height: calc(100% - 6rem - 4px);\r\n    position: relative;\r\n    overflow: hidden;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n}\r\n\r\n.leis-modal-footer {\r\n    padding: 10px;\r\n    width: 100%;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    padding: 0;\r\n}\r\n\r\n.leis-modal-footer-card {\r\n    position: relative;\r\n\r\n    display: flex;\r\n    flex-shrink: 0;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    padding: 0.6rem 1rem;\r\n    border-top: 1px solid var(--leis-line-separator-cl);\r\n    gap: 0.5rem;\r\n\r\n\r\n}\r\n\r\n.leis-modal-dafault {\r\n    padding: 3% 8%;\r\n}\r\n\r\n.leis-modal-dafault .leis-tooltip.bottom {\r\n    top: 80%;\r\n    left: 10%;\r\n}\r\n\r\n.nod {\r\n    animation: modal-nod 1s ease;\r\n}\r\n\r\n@keyframes modal {\r\n    from {\r\n        opacity: 0.1;\r\n        top: -320px;\r\n\r\n\r\n    }\r\n\r\n    top {\r\n        opacity: 1;\r\n        top: 25%;\r\n    }\r\n}\r\n\r\n@keyframes modal-zoom-in {\r\n    from {\r\n        opacity: 0.1;\r\n        transform: scale(2.5);\r\n    }\r\n\r\n    top {\r\n        opacity: 1;\r\n        transform: scale(1);\r\n    }\r\n}\r\n\r\n@keyframes modal-zoom-out {\r\n    from {\r\n        opacity: 0.1;\r\n        transform: scale(0.2);\r\n\r\n    }\r\n\r\n    top {\r\n        opacity: 1;\r\n        transform: scale(1);\r\n    }\r\n}\r\n\r\n@keyframes modal-nod {\r\n    from {\r\n        opacity: 0.1;\r\n        \r\n\r\n    }\r\n\r\n    top {\r\n        opacity: 1;\r\n       \r\n    }\r\n}\r\n\r\n@media screen and (max-width : 800px) {\r\n    .leis-modal-dialog{\r\n        width: 95vw !important;\r\n        \r\n    }\r\n}\r\n/* slider*/\r\n\r\n.leis-slider-container {\r\n    position: relative;\r\n    background-color: var(--leis-dark-cl);\r\n    color: #fff;\r\n    height: 100vh;\r\n    width: 200px;\r\n}\r\n\r\n.leis-slider-content {\r\n    width: 100%;\r\n}\r\n\r\n.leis-slider-slider {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    background-color: inherit;\r\n    height: inherit;\r\n    width: 8px;\r\n    cursor: w-resize;\r\n    transition: background-color 1s ease;\r\n}\r\n\r\n.leis-slider-slider:hover {\r\n    background-color: #0069d9;\r\n\r\n}\r\n\r\n/* alerts*/\r\n\r\n.leis-alert-card {\r\n    position: relative;\r\n    box-shadow: none;\r\n    padding-right: 25px;\r\n}\r\n\r\n.leis-alert-card a {\r\n    white-space: nowrap;\r\n}\r\n\r\n.leis-alert-card .leis-btn-close {\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 0px;\r\n    font-size: 2.5rem;\r\n    background-color: transparent;\r\n    border: none !important;\r\n}\r\n\r\n.leis-alert-card.leis-alert-primary {\r\n    background-color: #9ec8ff64;\r\n    border: 1.5px solid #74b0ff;\r\n\r\n\r\n}\r\n\r\n.leis-alert-card.leis-alert-success {\r\n    background-color: #96fbae6a;\r\n    border: 1.5px solid #51ff7abf;\r\n}\r\n\r\n.leis-alert-card.leis-alert-danger {\r\n    background-color: #fa919b77;\r\n    border: 1.5px solid #ff485ab2;\r\n}\r\n\r\n.leis-alert-card.leis-alert-info {\r\n    background-color: #a6f1fcae;\r\n    border: 1.5px solid #51a6b3a7;\r\n}\r\n\r\n.leis-alert-card.leis-alert-warning {\r\n    background-color: #ffdd7781;\r\n    border: 1.5px solid #ffce3ad5;\r\n}\r\n\r\n.leis-alert-card.leis-alert-dark {\r\n    background-color: #3f41437e;\r\n    color: rgb(250, 245, 245);\r\n}\r\n\r\n.leis-alert-card.leis-alert-light {\r\n    background-color: #fefeffb1;\r\n}\r\n\r\n.leis-alert-card.leis-alert-secondary {\r\n    background-color: #a0a1a25c;\r\n}\r\n\r\n.leis-alert-card .leis-alert-text {\r\n    padding: 16px;\r\n\r\n}\r\n\r\n/* groups */\r\n\r\n.leis-list-group,\r\n.leis-group,\r\n.leis-accordion-card {\r\n    display: -webkit-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-box-direction: normal;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n    padding-left: 0;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.leis-list-group {\r\n    list-style: none;\r\n}\r\n\r\n.leis-child-group {\r\n    padding: 2.5px 5px;\r\n    position: relative;\r\n\r\n}\r\n\r\n.leis-child-group:not(:last-child) {\r\n    border-bottom: 0.5px solid rgb(216, 212, 212);\r\n}\r\n\r\n.leis-group-head {\r\n    background-color: rgba(230, 227, 227, 0.744);\r\n    border-top-left-radius: 2px;\r\n    border-top-right-radius: 2px;\r\n}\r\n\r\n.leis-img-group-left {\r\n    display: block;\r\n    float: left;\r\n    width: 40px;\r\n    height: 40px;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n}\r\n\r\n.leis-img-group-left>.leis-img {\r\n    display: block;\r\n    width: 100%;\r\n    height: auto;\r\n    min-height: 40px !important;\r\n    border: none;\r\n    outline: none;\r\n    filter: var(--leis-effect-img);\r\n}\r\n\r\n.leis-img-group-left~.leis-group-txt {\r\n    padding: 12px 14px;\r\n    margin-left: 2.5rem;\r\n}\r\n\r\n/* -------------------------- badge---------------------------- */\r\n.leis-bg-primary {\r\n    background-color: var(--leis-primary-cl);\r\n}\r\n\r\n.leis-bg-secondary {\r\n    background-color: var(--leis-secondary-cl);\r\n}\r\n\r\n.leis-bg-succes {\r\n    background-color: var(--leis-success-cl);\r\n}\r\n\r\n.leis-bg-danger {\r\n    background-color: var(--leis-danger-cl);\r\n}\r\n\r\n.leis-bg-warning {\r\n    background-color: var(--leis-warning-cl);\r\n}\r\n\r\n.leis-bg-info {\r\n    background-color: var(--leis-info-cl);\r\n}\r\n\r\n.leis-bg-light {\r\n    background-color: var(--leis-light-cl);\r\n}\r\n\r\n.leis-bg-dark {\r\n    background-color: var(--leis-dark-cl);\r\n}\r\n\r\n\r\n/* web elements */\r\n\r\n\r\n\r\n\r\n.leis-accordion-btn::after,\r\n.leis-btn-controler::before,\r\n.leis-arrow-down::after {\r\n    position: relative;\r\n    content: \"\";\r\n    width: 10px;\r\n    height: 10px;\r\n    float: right;\r\n    top: 5px;\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    border-bottom: 1.8px solid;\r\n    border-left: 1.8px solid;\r\n    transform: rotateY(180deg) rotateZ(-40deg);\r\n    transition: .16s;\r\n}\r\n\r\n.leis-btn-controler {\r\n    color: #0069d9 !important;\r\n    position: absolute;\r\n    top: 8px;\r\n    left: 8px;\r\n    border: none;\r\n    z-index: 1;\r\n    background-color: inherit;\r\n}\r\n\r\n.leis-btn-controler.hide {\r\n    display: none;\r\n}\r\n\r\n.DA-close-modal {\r\n    position: absolute;\r\n    top: 15px;\r\n    left: 15px;\r\n    font-size: 1.5rem;\r\n    border-radius: 50%;\r\n}\r\n\r\n.DA-close-modal:hover {\r\n    background-color: #d31b2d;\r\n}\r\n\r\n.leis-btn-controler::before {\r\n    position: relative;\r\n    top: -1px;\r\n    border-bottom: 2.8px solid;\r\n    border-left: 2.8px solid;\r\n    transform: rotateY(180deg) rotateZ(-140deg);\r\n}\r\n\r\n.leis-accordion-btn.active::after,\r\n.leis-dropBtn.activeD .leis-arrow-down::after {\r\n    transform: rotateY(180deg) rotateZ(138deg);\r\n}\r\n\r\n.leis-accordion-btn:hover,\r\n.leis-accordion-btn.active {\r\n    background-color: var(--leis-light-hover-cl);\r\n}\r\n\r\n.leis-accordion-btn.active {\r\n    font-size: 18px;\r\n}\r\n\r\n\r\n.leis-accordion-btn:not(:last-child) {\r\n    border-bottom: 1.2px solid var(--leis-line-separator-cl);\r\n}\r\n\r\n\r\n.leis-accordion-panel {\r\n    position: relative;\r\n    background-color: inherit;\r\n    max-height: 0;\r\n    overflow: hidden;\r\n    transition: max-height 1s ease-in-out;\r\n}\r\n\r\n.leis-accordion-txt {\r\n    padding: 5px 14px;\r\n}\r\n\r\n.leis-accordion-panel.active {\r\n    max-height: 200vh;\r\n    overflow: visible;\r\n    background-color: #fff;\r\n}\r\n\r\n.leis-accordion-head {\r\n    width: 100%;\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: block;\r\n    font-weight: 500;\r\n    background-color: var(--leis-accordion-head-cl);\r\n    padding: 12px 14px;\r\n    border-bottom: 1.5px solid var(--leis-line-separator-cl);\r\n    border-radius: 5px 5px 0px 0px;\r\n    color: var(--leis-accordion-head-txt-cl);\r\n}\r\n\r\n.leis-accordion-footer {\r\n    width: 100%;\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: block;\r\n    padding: 5px 6px;\r\n    font-weight: 500;\r\n    border-radius: 0px 0px 5px 5px;\r\n    color: #000;\r\n    text-align: center;\r\n    -webkit-box-shadow: var(--leis-accordion-footer-bx-sh);\r\n    box-shadow: var(--leis-accordion-footer-bx-sh);\r\n    background-color: var(--leis-accordion-footer-cl);\r\n}\r\n\r\n/* collapsible*/\r\n\r\n.leis-collapsing-container {\r\n    position: relative;\r\n    border: none;\r\n    margin: 0;\r\n\r\n}\r\n\r\n.leis-collapse-btn {\r\n    border: none;\r\n    font-weight: 500;\r\n    text-align: left;\r\n    padding: 0;\r\n}\r\n\r\n.leis-collapse-btn::before {\r\n    position: absolute;\r\n    left: -15px;\r\n    top: 8px;\r\n    content: \"\";\r\n    width: 10px;\r\n    height: 10px;\r\n    border-bottom: 2px solid;\r\n    border-left: 2px solid;\r\n    transform: rotateY(-180deg) rotateZ(40deg);\r\n    transition: .16s;\r\n}\r\n\r\n.leis-collapsing {\r\n    max-height: 0;\r\n    overflow: hidden;\r\n    transition: max-height .45s ease\r\n}\r\n\r\n.leis-collapsing.callo-show {\r\n    max-height: 100%;\r\n\r\n}\r\n\r\n.leis-collapse-btn.colla-btn-show::before {\r\n    transform: rotateY(-180deg) rotateZ(-40deg);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*ToolTip*/\r\n.leis-tooltip {\r\n    visibility: hidden;\r\n    position: absolute;\r\n    border-radius: 8px;\r\n    opacity: 0;\r\n    padding: 10px;\r\n    border: 1px solid #ddd;\r\n    background-color: var(--leis-body-cl);\r\n    width: -moz-fit-content;\r\n    width: fit-content;\r\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\r\n    transition: opacity .3s ease;\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n}\r\n\r\n.leis-tooltip::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 12px;\r\n    height: 12px;\r\n    background-color: inherit;\r\n    top: 100%;\r\n    left: 50%;\r\n    margin-top: -5px;\r\n    border-left: inherit;\r\n    border-top: inherit;\r\n    transform: rotateY(180deg) rotateZ(-140deg);\r\n}\r\n\r\n.leis-tooltip.top {\r\n    bottom: calc(100% + 10px);\r\n    left: 50%;\r\n}\r\n\r\n.leis-tooltip.bottom {\r\n    top: calc(100% + 10px);\r\n    left: calc(100% - 60%);\r\n}\r\n\r\n.leis-tooltip.bottom::after {\r\n    top: -3px;\r\n    left: calc(100% - 60%);\r\n    width: 15px;\r\n    height: 15px;\r\n    transform: rotateY(180deg) rotateZ(40deg);\r\n}\r\n\r\n.leis-tooltip.right {\r\n    bottom: calc(50% - 10px);\r\n    left: calc(100% + 10px);\r\n    min-width: 140px;\r\n}\r\n\r\n.leis-tooltip.right::after {\r\n    top: 50%;\r\n    left: -8px;\r\n    width: 14px;\r\n    transform: rotateY(180deg) rotateZ(130deg);\r\n}\r\n\r\n.leis-tooltip.left {\r\n    bottom: calc(50% - 10px);\r\n    right: calc(100% + 10px);\r\n    min-width: 140px;\r\n}\r\n\r\n.leis-tooltip.left::after {\r\n    top: 50%;\r\n    left: 100%;\r\n    margin-left: -5px;\r\n    transform: rotateY(180deg) rotateZ(-50deg);\r\n}\r\n\r\n.leis-tooltip .leis-tooltip-content {\r\n    max-width: 350px;\r\n    max-height: 50vh;\r\n    overflow: hidden;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n}\r\n\r\n.leis-tooltip * {\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n\r\n\r\n/*search Bar*/\r\n\r\n.leis-searchBar,\r\n.leis-textinput {\r\n    width: 100%;\r\n    outline: none;\r\n    border: 1px solid #ddd;\r\n    padding: 3px 12px;\r\n    border-radius: 6px;\r\n\r\n}\r\n\r\n.leis-searchBar:focus,\r\n.leis-textinput:focus {\r\n    -webkit-box-shadow: 0 0 0 .25rem rgba(13, 110, 253, .25);\r\n    box-shadow: 0 0 0 .25rem rgba(13, 110, 253, .25);\r\n    filter: brightness(100%);\r\n}\r\n\r\n\r\n/*autocomplate*/\r\n\r\n.leis-autoComplate,\r\n.leis-textbox-container {\r\n    width: -moz-fit-content;            \r\n    width: fit-content;\r\n    padding: none;\r\n    margin: 0;\r\n}\r\n\r\n.leis-autoComplate .leis-group * {\r\n    border: none;\r\n    padding: 0;\r\n}\r\n\r\n.leis-autoComplate .leis-group .leis-child-group {\r\n    padding: 6px 10px;\r\n    cursor: pointer;\r\n    border: 1px solid #f6f3f3a3;\r\n    display: flex;\r\n    gap: 10px;\r\n}\r\n\r\n.aut-item-subTitle {\r\n    color: var(--leis-subtitle-cl);\r\n    font-size: calc(var(--leis-font-size) - 1px);\r\n}\r\n\r\n.leis-autoComplate .leis-group .leis-child-group:hover {\r\n    background-color: var(--leis-select-cl)\r\n}\r\n\r\n.leis-autoComplateCard {\r\n    visibility: hidden;\r\n}\r\n\r\n\r\n.leis-autoComplateCard.clicked:hover {\r\n    visibility: visible;\r\n}\r\n\r\n.leis-autoComplateCard.empty {\r\n    padding: 0;\r\n    border: 0;\r\n    margin: 0;\r\n}\r\n\r\n.leis-searchBar:focus+.leis-autoComplateCard,\r\n.leis-autoInput:focus+.leis-autoComplateCard {\r\n    visibility: visible;\r\n}\r\n\r\n.leis-autComplate-container {\r\n    width: 100%;\r\n    position: absolute;\r\n    border: 1px solid #ddd;\r\n    background-color: #fff;\r\n    border-radius: 6px;\r\n    z-index: 1000;\r\n    -webkit-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\r\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15)\r\n}\r\n\r\n/* TopNav */\r\n.leis-icon-menu {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 20px;\r\n    height: 2.5px;\r\n    left: -0.5px;\r\n    padding: 0;\r\n    margin: 0;\r\n    background-color: var(--leis-txt-cl);\r\n    transition: .5s ease-in;\r\n}\r\n\r\n.leis-icon-menu::after {\r\n    position: absolute;\r\n    top: -4px;\r\n    left: -0px;\r\n    margin-left: -0.5px;\r\n    display: inline-block;\r\n    content: \"\";\r\n    width: inherit;\r\n    height: inherit;\r\n    margin-bottom: 0.5px;\r\n    background-color: inherit;\r\n}\r\n\r\n.leis-icon-menu::before {\r\n    position: absolute;\r\n    display: inline-block;\r\n    top: -8px;\r\n    left: -0.5px;\r\n    content: \"\";\r\n    width: inherit;\r\n    height: inherit;\r\n    margin-bottom: 0.5px;\r\n    background-color: inherit;\r\n}\r\n\r\n.leis-icon-menu.clicked {\r\n    transform: rotateZ(-150deg);\r\n}\r\n\r\n.leis-icon-menu.clicked::after {\r\n    transform: rotateZ(90deg);\r\n    top: 0px;\r\n    left: 0.5px;\r\n}\r\n\r\n.leis-icon-menu.clicked::before {\r\n    transform: rotateZ(40deg);\r\n    background-color: transparent;\r\n}\r\n\r\n.leis-topnav {\r\n    position: relative;\r\n    font-size: 18px;\r\n    width: 100%;\r\n    height: 50px;\r\n    border-bottom: 1px solid #eee;\r\n    -webkit-box-shadow: var(--leis-nav-bx-sh);\r\n    box-shadow: var(--leis-nav-bx-sh);\r\n    margin: 0;\r\n}\r\n\r\n\r\n.leis-topnav.primary,\r\n.leis-topnav.primary .leis-dropBtn {\r\n    background-color: var(--leis-primary-hover-cl);\r\n    color: rgba(230, 227, 227, 0.991) !important;\r\n}\r\n\r\n\r\n\r\n.leis-topnav .leis-dropBtn,\r\n.leis-topnav .leis-dropBtn.activeD {\r\n    width: auto;\r\n    border: none;\r\n    outline: none;\r\n    box-shadow: none;\r\n    font-size: 18px;\r\n    text-align: left;\r\n    padding: 0;\r\n    margin: 0;\r\n    display: inline-block;\r\n    padding-top: 4px;\r\n    font-weight: 300;\r\n}\r\n\r\n.leis-topnav .leis-dropdown-content.show {\r\n    z-index: 1000;\r\n    min-width: 200px;\r\n    color: #000 !important;\r\n}\r\n\r\n.leis-topnav .leis-dropBtn {\r\n    display: flex;\r\n    gap: 10px;\r\n}\r\n\r\n.leis-topnav .leis-dropBtn.activeD .leis-arrow-down::after {\r\n    left: 10px;\r\n}\r\n\r\n.leis-topnav .leis-dropBtn .leis-arrow-down::after {\r\n    height: 6px;\r\n    width: 6px;\r\n\r\n}\r\n\r\n.leis-topnav.primary .leis-child-group:hover,\r\n.leis-topnav.primary .leis-dropBtn:hover {\r\n    color: #fff !important\r\n}\r\n\r\n.leis-topnav.secondary,\r\n.leis-topnav.secondary .leis-dropBtn {\r\n    background-color: var(--leis-secondary-cl);\r\n    color: rgba(230, 227, 227, 0.991) !important;\r\n}\r\n\r\n.leis-topnav.secondary .leis-child-group:hover,\r\n.leis-topnav.secondary .leis-dropBtn {\r\n    color: #fff !important\r\n}\r\n\r\n.leis-topnav.warning,\r\n.leis-topnav.warning .leis-dropBtn {\r\n    background-color: var(--leis-warning-cl);\r\n    color: #221e1e !important\r\n}\r\n\r\n.leis-topnav.warning .leis-child-group:hover,\r\n.leis-topnav.warning .leis-dropBtn:hover {\r\n    color: #000 !important\r\n}\r\n\r\n.leis-topnav.dark,\r\n.leis-topnav.dark .leis-dropBtn {\r\n    background-color: var(--leis-dark-cl);\r\n    color: rgb(216, 212, 212) !important\r\n}\r\n\r\n.leis-topnav.dark .leis-child-group:hover,\r\n.leis-topnav.dark .leis-dropBtn:hover {\r\n    color: #fff !important\r\n}\r\n\r\n\r\n.leis-topnav.light,\r\n.leis-topnav.light .leis-dropBtn {\r\n    background-color: var(--leis-light-cl);\r\n    color: #3c3939 !important\r\n}\r\n\r\n.leis-topnav.light .leis-child-group:hover,\r\n.leis-topnav.light .leis-dropBtn:hover {\r\n    color: var(--leis-primary-cl) !important\r\n}\r\n\r\n\r\n.leis-topnav.success,\r\n.leis-topnav.success .leis-dropBtn {\r\n    background-color: var(--leis-success-cl);\r\n    color: rgb(216, 212, 212) !important\r\n}\r\n\r\n.leis-topnav.success .leis-child-group:hover,\r\n.leis-topnav.success .leis-dropBtn:hover {\r\n    color: #fff\r\n}\r\n\r\n.leis-topnav.danger,\r\n.leis-topnav.danger .leis-dropBtn {\r\n    background-color: var(--leis-danger-cl);\r\n    color: rgb(216, 212, 212) !important\r\n}\r\n\r\n.leis-topnav.danger .leis-child-group:hover,\r\n.leis-topnav.danger .leis-dropBtn:hover {\r\n    color: #fff\r\n}\r\n\r\n.leis-topnav.info,\r\n.leis-topnav.info .leis-dropBtn {\r\n    background-color: var(--leis-info-cl);\r\n    color: #333 !important\r\n}\r\n\r\n.leis-topnav.info .leis-child-group:hover,\r\n.leis-topnav.info .leis-dropBtn:hover {\r\n    color: #000 !important\r\n}\r\n\r\n.leis-topnav-cd-profil-right {\r\n    display: block;\r\n    float: right;\r\n}\r\n\r\n.leis-topnav .leis-list-group {\r\n    display: inline-block;\r\n    padding: 10px 16px;\r\n    margin: 0;\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 0.8rem;\r\n}\r\n\r\n.leis-topnav .leis-list-group .leis-img-group-left {\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 30px;\r\n    margin: 5 auto;\r\n}\r\n\r\n.leis-topnav .leis-group .leis-dropdown {\r\n    background-color: red;\r\n}\r\n\r\n\r\n\r\n.profil {\r\n    padding: 0 !important;\r\n    margin: 0 !important;\r\n}\r\n\r\n.leis-topnav .leis-list-group .leis-img-group-left img {\r\n    min-height: 30px;\r\n}\r\n\r\n.leis-topnav .leis-list-group .leis-child-group {\r\n    margin: 0;\r\n    border: none;\r\n    outline: none;\r\n    padding: 2.5px 2.5px 0 0;\r\n}\r\n\r\n.leis-topnav .leis-list-group .leis-child-group * {\r\n    text-decoration: none;\r\n    color: inherit;\r\n\r\n}\r\n\r\n@media screen and (max-width:600px) {\r\n\r\n    .leis-topnav a:not(:first-child) {\r\n        display: none;\r\n    }\r\n\r\n    .leis-topnav a.icon {\r\n        float: right;\r\n        display: block;\r\n\r\n    }\r\n\r\n    .leis-topnav.responsive a.icon {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n    }\r\n\r\n    .leis-topnav.responsive a {\r\n        float: none;\r\n        display: block;\r\n        text-align: left;\r\n    }\r\n}\r\n\r\n/* SideNav */\r\n.leis-sideNav {\r\n    padding: 10px;\r\n    height: 100%;\r\n    width: 250px;\r\n    position: fixed;\r\n    overflow: hidden;\r\n    z-index: 100;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: var(--leis-dark-cl);\r\n    overflow-x: hidden;\r\n    transition: 0.5s;\r\n    -webkit-box-shadow: var(--leis-sideNav-bx-sh);\r\n    box-shadow: var(--leis-sideNav-bx-sh);\r\n    border-right: 1.8px solid var(--leis-default-cl);\r\n}\r\n\r\n.leis-sideNav .leis-collapsing-container * {\r\n    color: inherit;\r\n}\r\n\r\n.leis-sideNav .leis-list-group * {\r\n    font-weight: 400;\r\n}\r\n\r\n.leis-sideNav .leis-collapsing-container .leis-collapse-btn {\r\n    padding-left: 20px;\r\n    font-size: inherit;\r\n    font-weight: inherit;\r\n}\r\n\r\n.leis-sideNav .leis-collapsing-container .leis-collapse-btn::before {\r\n    left: 0;\r\n}\r\n\r\n.leis-sideNav .leis-collapsing-container .leis-collapse-btn.colla-btn-show {\r\n    font-weight: 400;\r\n    color: #dad6d6e8;\r\n}\r\n\r\n.leis-sideNav .leis-collapsing-container .leis-collapse-btn:hover {\r\n    color: #ede7e7;\r\n}\r\n\r\n.leis-sideNav a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n    font-size: inherit;\r\n    font-family: inherit;\r\n}\r\n\r\n.leis-sideNav .leis-list-group.links {\r\n    max-height: 75vh;\r\n    overflow: hidden;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n}\r\n\r\n.leis-sideNav .leis-list-group::-webkit-scrollbar {\r\n    height: 4px;\r\n    width: 8px;\r\n    cursor: default !important;\r\n\r\n}\r\n\r\n.leis-sideNav .leis-list-group::-webkit-scrollbar-thumb {\r\n    background-color: rgba(222, 217, 217, 0.541);\r\n}\r\n\r\n.leis-sideNav .leis-list-group .leis-child-group {\r\n    padding: 8.5px 6px;\r\n    font-size: 1.1rem;\r\n    font-family: inherit;\r\n    border-radius: 8px;\r\n    border: none;\r\n    color: rgb(216, 212, 212);\r\n    cursor: pointer;\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n    display: flex;\r\n    justify-content: start;\r\n    gap: 13px;\r\n}\r\n\r\n.leis-sideNav .leis-list-group .leis-child-group.active {\r\n    background-color: inherit;\r\n\r\n}\r\n\r\n.leis-sideNav .leis-collapsing-container .leis-list-group .leis-child-group {\r\n    padding: 3px 1.5px;\r\n}\r\n\r\n.leis-sideNav .leis-collapsing-container .leis-list-group {\r\n    padding-left: 15px;\r\n}\r\n\r\n.leis-sideNav .sideNavHeader {\r\n    padding: 5px 5px;\r\n    color: #fff;\r\n    font-size: 1.5rem;\r\n    margin-bottom: 1rem;\r\n    padding-bottom: 1.5rem;\r\n    border-bottom: 1.5px solid #6860609f;\r\n}\r\n\r\n.leis-sideNav .sideNavFooter {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    padding: 10px 10px;\r\n    color: #fff;\r\n    font-size: 1.5rem;\r\n    padding-top: 1rem;\r\n    border-top: 1.5px solid #6860609f;\r\n\r\n}\r\n\r\n\r\n\r\n.leis-sideNav .leis-list-group .leis-child-group:not(.colla-item):hover {\r\n    background-color: #98c3f16b;\r\n}\r\n\r\n.leis-sideNav .leis-list-group .leis-child-group.sideItemActive {\r\n    background-color: #0069d9;\r\n    color: #fff;\r\n}\r\n\r\n\r\n.leis-sideNav a:hover {\r\n    background-color: var(--leis-light-hover-cl);\r\n}\r\n\r\n.leis-sideNav .leis-close-btn {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    font-size: 35px;\r\n    margin-left: 50px;\r\n}\r\n\r\n\r\n.leis-openSide,\r\n.leis-Closeside {\r\n    position: relative;\r\n    display: inline-block\r\n}\r\n\r\n@media screen and(max-height:450px) {\r\n    .leis-sideNav {\r\n        padding: 15px;\r\n    }\r\n\r\n    .leis-sideNav a {\r\n        font-size: 18px;\r\n    }\r\n}\r\n\r\n/* dropdown btn */\r\n\r\n\r\n.leis-dropdown,\r\n.leis-slideshow-container {\r\n    position: relative;\r\n    border: none;\r\n    outline: none;\r\n    box-shadow: none;\r\n}\r\n\r\n.leis-dropdown {\r\n    display: inline-block;\r\n}\r\n\r\n.leis-dropdown-content {\r\n    display: none;\r\n    position: absolute;\r\n    top: -8px;\r\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, .2) !important;\r\n    z-index: 1;\r\n    animation: fade .16s ease-in;\r\n}\r\n\r\n.leis-dropdwn-content-card {\r\n    position: relative;\r\n    max-height: 350px;\r\n    min-width: 100px;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n}\r\n\r\n.leis-content {\r\n    width: 100%;\r\n    position: relative;\r\n}\r\n\r\n.leis-content>.leis-dropdown-content {\r\n    width: 100%;\r\n}\r\n\r\n.leis-dropdown-content a {\r\n    color: black;\r\n    padding: 12px 16px;\r\n    display: block;\r\n}\r\n\r\n.leis-dropdwn-content-card>* {\r\n    display: block;\r\n}\r\n\r\n.hide {\r\n    display: none;\r\n}\r\n\r\n.show {\r\n    display: block;\r\n}\r\n\r\n/* Page */\r\n\r\n.leis-mainPage {\r\n    position: relative;\r\n    padding-top: 30px;\r\n    min-width: 100%;\r\n}\r\n\r\n.leis-page-content {\r\n    position: relative;\r\n    display: none;\r\n    animation: fr .4s ease-in-out\r\n}\r\n\r\n@keyframes fr {\r\n    from {\r\n        transform: scale(0.5);\r\n        opacity: 0;\r\n    }\r\n\r\n    to {\r\n        transform: scale(1);\r\n        opacity: 1;\r\n    }\r\n}\r\n\r\n.leis-page-legende {\r\n    cursor: pointer;\r\n}\r\n\r\n/* slideshow/ carousel */\r\n\r\n.leis-slideshow-container {\r\n    padding: 0;\r\n    margin: 0;\r\n    max-width: 1000px;\r\n    margin: auto;\r\n    overflow: hidden;\r\n}\r\n\r\n.leis-slideshow-container .leis-img-card {\r\n    width: 100%;\r\n    height: inherit;\r\n    padding: 0;\r\n    margin: 0;\r\n    position: relative;\r\n    display: none;\r\n\r\n}\r\n\r\n.leis-slideshow-container .leis-img-card .leis-img {\r\n    width: 100%;\r\n    height: auto;\r\n    max-height: calc(100%);\r\n}\r\n\r\n.leis-slideshow-prev-btn,\r\n.leis-slideshow-next-btn {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 50%;\r\n    padding: 10px;\r\n    color: white;\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n    transition: 0.6s ease;\r\n    border-radius: 0 3px 3px 0;\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n    z-index: 1;\r\n}\r\n\r\n.leis-slideshow-prev-btn {\r\n    left: 0;\r\n}\r\n\r\n.leis-slideshow-next-btn {\r\n    right: 0;\r\n    border-radius: 3px 0 0 3px;\r\n}\r\n\r\n.leis-slideshow-next-btn:hover,\r\n.leis-slideshow-prev-btn:hover {\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n}\r\n\r\n.leis-slideshow-txt {\r\n    color: #f2f2f2;\r\n    font-size: 18px;\r\n    position: absolute;\r\n    padding: 8px;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    text-align: center;\r\n    background-color: rgba(0, 0, 0, 0.479);\r\n    z-index: 1;\r\n}\r\n\r\n.leis-slideshowNumTxt {\r\n    position: absolute;\r\n    color: #f2f2f2;\r\n    font-size: 17px;\r\n    padding: 8px 12px;\r\n    top: 0;\r\n}\r\n\r\n.leis-slideshow-dot {\r\n    cursor: pointer;\r\n    height: 15px;\r\n    width: 15px;\r\n    margin: 0 2px;\r\n    background-color: #bbb;\r\n    border-radius: 50%;\r\n    display: inline-block;\r\n    transition: background-color 0.6s ease\r\n}\r\n\r\n.active,\r\n.leis-slideshow-dot:hover {\r\n    background-color: #717171;\r\n}\r\n\r\n.fade {\r\n    animation-name: fade;\r\n    animation-duration: 1.5s;\r\n}\r\n\r\n.leis-firstSlideShow {\r\n    word-wrap: break-word;\r\n}\r\n\r\n@keyframes fade {\r\n    from {\r\n        opacity: .4;\r\n    }\r\n\r\n    to {\r\n        opacity: 1;\r\n    }\r\n}\r\n\r\n\r\n/* slideshow gallery */\r\n/* ---------------------- */\r\n\r\n/* modal image */\r\n\r\n\r\n/* dispay */\r\n.leis-flex {\r\n    display: flex;\r\n}\r\n\r\n.leis-gap-5 {\r\n    gap: 5px;\r\n}\r\n\r\n*:hover>.leis-tooltip {\r\n    visibility: visible;\r\n    opacity: 1;\r\n    z-index: 1001;\r\n}";

    const leistrap = (function () {

        // checks if the document is created before to execute any code
        let state = false;

        // all extensions 
        let extensionMap = {};

        // all leistrap configurations
        let setting = {};

        //elements to hide when the window is click
        let hideWin = [];

        // the main leistrap  event channels
        const mainEvent = _EventEmitter();
        const indexedElementEvent = _EventEmitter();
        // contains all leistrap object 
        let leisElementMap = {};

        class BaseElement {
            constructor(element) {
                /*** @type {HTMLLinkElement}*/
                this._conf = element;

                // the unique leistrap object key
                this.key = generateId(5, 10);

                // contains all children
                /**@type{Array<BaseElement>}*/
                this.content = [];
                this.contentMap = {};
                /**
                 * thes element state
                 * @type {{
                 * rendered : boolean, 
                 * }}
                 */
                this.state = {visible: true};
                /**@type {BaseElement} */
                this.parent = null;
                this.eventMap = {};
                /** the local data  */
                this.data = {
                    indexName: null,
                    element: this,
                    get id() { return this.indexName },
                    set id(value) {
                        indexedElementEvent.handle(value, e => e.send(this.element), true, false)
                            .then(() => this.indexName = value);
                    }
                };
                // the object eventEmiter interface
                this.event = _EventEmitter();
                this.eventListeners = {};

                //handle all event 
                this.once = function (e, listener) {
                    if (!has(e, this.eventListeners)) this.eventListeners[e] = [];
                    this.eventListeners[e].push(listener);
                    return this
                };
                // associate the leistrap object to the htmlElement
                this._conf.currentElement = this;

                // call all useInit Hooks and pass the this as parameter
                hooks.callHook("useInit", DisplayError, this);

            }


            render() {

                if (!this.state.rendered) {
                    // render all children
                    this.content.forEach(child => {
                        if (child.parent.key === this.key) {
                            this.contentMap[child.key] = child;
                            this._conf.append(child.render());
                        }

                    });


                    //  execute all  useRender hoos
                    hooks.callHook("useRender", DisplayError, this);

                    // set the object key as id to the element 
                    this._conf.id = this.key;
                    this.state.rendered = true;

                    // call all render eventListeners
                    handleAllEvent("render", this.eventListeners, this);
               
                    
                }

                return this._conf
            }

            /**
             * 
             * @param {BaseElement} element 
             * @returns this
             */
            add(elementObject) {
                let element = getObjectByIndexName(elementObject, true, (e) => this.add(e));
                handleAllEvent("add", this.eventListeners, this, 10, element);
                if (isTypeOf(element, BaseElement)) {
                    element.parent = this;
                    this.contentMap[element.key] = element;
                    this._conf.append(element.render());
                    this.content.push(element);
                    return this
                }
                return this
            }

            // destroy the leistrap object and remove the element from the DOM
            destroy() {
                setTimeout(() => {

                    // call all destroy events listeners
                    handleAllEvent("destroy", this.eventListeners, this);

                    // check if the object has a indexedElementEvent channel and then
                    // remove this channel from the indexedElementEvent object 
                    if (this.data.id) indexedElementEvent.removeEvent(this.data.id);

                    // remove the object from leisElementMap object 
                    delete leisElementMap[this.key];

                    // remove the leistrap object from the parent object
                    if (has(this.key, this.parent.contentMap)) {
                        delete this.parent.contentMap[this.key];
                        this.parent.content = loopObject(this.parent.contentMap);

                        // remove the object from the DOM
                        this.parent._conf.removeChild(this._conf);

                        // clear the object and save memory
                        setTimeout(() => {
                            loopObject(this, (value, key) => { delete this[key]; });
                        }, 1000);
                    }
                }, 100);
                return this
            }

            /**
             * allows to remove a child object
             * @param {BaseElement} element 
             */
            remove(element) {
                if (isString(element)) {
                    getObjectByIndexName(element, true, child => child.destroy());
                }
                else { element.destroy(); }
                return this
            }

            removeAll(listener) {
                setTimeout(() => {
                    let counter = 0;
                   
                    let allElem = loopObject(this.contentMap || {});
                    let len = allElem.length;
                    let timer = setInterval(() => {
                        
                        if (counter >= len){
                            clearInterval(timer);
                            if(listener) listener();
                        } 
                        else {
                            if(allElem[counter])
                                allElem[counter].destroy();
                                
                            counter++;
                        }
                        
                    }, 100);

                }, 100);
                return this
            }
            addElements(...elements) {
                let counter = 0;
                let timer = setInterval(() => {
                    this.add(elements[counter++]);
                    if (counter === elements.length) clearInterval(timer);
                }, 100);

                return this
            }

            /**
             * 
             * @param {keyof WindowEventMap} eventType 
             * @param  {(e : Event)=> void} listener 
             * @param { string} eventName 
             * @param {*} options 
             */
            addEvent(eventType, listener, eventName, options) {

                const element = this;
                if (typeof listener === "function") {

                    const copyListener = listener;

                    function callback(target) {
                        // the target.currentElement represents the leistrap object 
                        // associated to the html target
                        copyListener.call(element, target);
                        // call any hooks here to fire and catch all events passed to
                        // an element ......
                    }

                    // verify iff the eventType already exists in the eventMap object
                    if (!this.eventMap[eventType]) { this.eventMap[eventType] = {}; }

                    // set a id to listener if the eventName is not set we generate an auto id
                    // and save it into the eventMap[eventType] object 
                    if (!eventName) eventName = !isEmpty(listener.name) ? listener.name : generateId(3, 8);

                    // the event listener id must be unique, let verify the eventName 
                    if (has(eventName, this.eventMap[eventType]))
                        DisplayError("UniqueType", "uniqueTypeError", "listenerName," + eventName);

                    // now let save the listener in to the eventMap[eventType] object
                    // this will helps to automatically remove a given eventType lister 
                    this.eventMap[eventType][eventName] = callback;

                    // finally, add an eventListener to the element
                    this._conf.addEventListener(eventType, callback, options);


                }
                return this
            }

            removeEvent(eventType, eventName, options) {
                if (!isEmpty(eventType) && !isEmpty(eventName) && this.eventMap[eventType]) {
                    if (this.eventMap[eventType][eventName]) {
                        this._conf.removeEventListener(eventType,
                            this.eventMap[eventType][eventName], options
                        );
                        delete this.eventMap[eventType][eventName];
                    }
                }
                return this
            }

            setStyleSheet(cssDefinition) {
                if (isString(cssDefinition)) this._conf.style = cssDefinition;
                if (isObject(cssDefinition)) loopObject(cssDefinition, (value, key) => {
                    this._conf.style[key] = value;
                });
                return this
            }

            setText(value) { this._conf.innerText = value; return this }
            getText() { return this._conf.textContent || this._conf.innerText }
            setClassName(classNames) {
                accessClassList(classNames, this._conf, "add");
                return this
            }
            removeClassName(classNames) {
                accessClassList(classNames, this._conf, "remove");
                return this
            }
            toggleClassName(classNames) {
                accessClassList(classNames, this._conf, "toggle");
                return this
            }
            replaceClassName(classNames, newClassNames) {
                accessClassList(classNames, this._conf, "replace", newClassNames);
                return this
            }
            addAttr(attrName, value) {
                if (isString(attrName) && isString(value)) {
                    this._conf.setAttribute(attrName, value);
                }
                else if (isObject(attrName)) {
                    loopObject(attrName, (value, key) => this._conf.setAttribute(key, value));
                }
                return this
            }

            getAttr(attrName) {
                if (isString(attrName)) return this._conf.getAttribute(attrName)

                if (isArray(attrName)) {
                    const result = {};
                    attrName.forEach(item => result[item] = this._conf.getAttribute(item));
                    return result
                }
                return null
            }

            removeAttr(attrName) {
                if (isString(attrName)) this._conf.removeAttribute(attrName);
                if (isArray(attrName)) {
                    attrName.forEach(item => this._conf.removeAttribute(item));
                }
                return this
            }
            hide() { this.addAttr('hidden', "true"); return this }
            show() { this.removeAttr('hidden'); }
        }

        // this function creates an htmlElement and you can  
        // pass some properties by the option parameter
        function create(TagName, options = {}) {
            const element = new BaseElement(document.createElement(TagName));
            SetOptions(element, options, getObjectByIndexName);
            hooks.callHook("useOption", DisplayError, element, options);
            leisElementMap[element.key] = element;
            setTimeout(() => options = null, 4000);
            return element

        }

        // the main parent!
        const main = new BaseElement(document.createElement("div"));
        main.data.id = "main";

        const win = new BaseElement(document.createElement("div"));
        win._conf = window;

        // set the default style
        document.head.append(
            new BaseElement(document.createElement("style")).setText(leistrapCss).render()
        );

        // executes and create our app once the DOM is loaded
        function whenReady(listener) {
            if (isFunction(listener)) {
                listener.call(main);
            }
            else { DisplayError("LeisError", "listenerError", listener); }

            state = true;
        }

        // indicate the HtmlElement's entry point of the application
        // defines where all elements will be added
        async function render(id) {
            setTimeout(function () {
                if (state) Render(document.getElementById(id), main);
                else { DisplayError("LeisProcessNotReady", "processNotReady"); }
            }, 500);
        }

        /**
         *  this function allows the definition of the extension 
         * note : the extension name must be unique otherwise an error will be thrown
         * the functionalities (hooks) tat an extension can access :
         *  1. setting : access all settings passed 
         *  2. leistrap : access the leistrap object
         *  3. hooks : access and add the new functionality which will added into the 
         *      the hook chosen
         */

        function defineExtension(extensionName, listener) {
            if (isFunction(listener)) {
                executeExtension(extensionName, listener);
            }
            else { DisplayError("LeisError", "listenerError", listener); }

        }
        function executeExtension(extensionName, listener) {
            if (!has(extensionName, extensionMap)) {
                const extensionResult = listener(setting, leistrap, hooks);
                if (extensionResult) leistrap[extensionName] = extensionResult;
                extensionMap[extensionName] = extensionName;
            }
            else { DisplayError("UniqueType", "uniqueTypeError", "extensionName," + extensionName); }
        }

        // allows to get the object indexed via the data.id property
        function getObjectByIndexName(indexName, waitFor, clb) {
            if (isString(indexName) && waitFor) {
                indexedElementEvent.invoke(indexName, clb);
            }
            return indexName
        }

        // adds an element to other by using localId syntax
        function addTo(parentId, child) {
            if (isString(parentId)) {
                getObjectByIndexName(parentId, true, function (parentElement) {
                    parentElement.add(child);
                });
            }
        }

        // find a leistrap object and apply some methods to it
        function getElement(name, method, ...args) {
            return new Promise(function (resolve, reject) {
                getObjectByIndexName(name, true, element => {
                    if (typeof element[method] == "function")
                        element[method](...args);
                    resolve(element);
                });
            })
        }

        function accessClassList(classNames, element, method, tokes) {
            if (tokes && method == "replace") {
                tokes = tokes.trim().split(String.fromCharCode(32));
                classNames.trim().split(String.fromCharCode(32))
                    .forEach((item, index) => {
                        if (!isEmpty(item) && tokes[index])
                            element.classList.replace(item, tokes[index]);
                    });
            }
            else {
                if (isString(classNames)) classNames.trim().split(String.fromCharCode(32))
                    .forEach((item, index) => { if (!isEmpty(item)) element.classList[method](item); });
            }
            return this
        }

        function addCss(cssDeclaration, force) {
            if (cssDeclaration || force) {
                const style = create("style", { text: cssDeclaration });
                document.head.append(style.render());
                return style
            }
            return null
        }
        function leistrap(configurations = copyObject(setting)) {
            setting = configurations;
        }

        function handleAllEvent(eventName, evObject, element, timeout, ...argv) {
            if (has(eventName, evObject)) {
                evObject[eventName].forEach(item => {
                    if (timeout) setTimeout(item, timeout, element, ...argv);
                    else { item(element, ...argv); }
                });
            }
        }

        leistrap.main = main;
        leistrap.win = win;
        leistrap.event = mainEvent;
        leistrap.create = create;
        leistrap.whenReady = whenReady;
        leistrap.render = render;
        leistrap.defineExtension = defineExtension;
        leistrap.event.handle("main", (e) => e.send(main));
        leistrap.addTo = addTo;
        leistrap.get = getElement;
        leistrap.addCss = addCss;
        leistrap.hideWhenWinClick = function (element) { hideWin.push(element); };
        leistrap.lorem = "    Lorem, ipsum dolor sit amet consectetur adipisicing elit. Culpa dolor aliquid quibusdam. Optio mollitia fugit nulla culpa, provident placeat unde iure eveniet earum nam, laborum hic autem? Rem, tenetur odio!";
        leistrap.Colors = ["primary", "secondary", "info", "dark", "danger", "light", "success", "warning"];
        leistrap.MLorem = function (num) { return rangeList(num).map(function (item) { return leistrap.lorem }).join(' ') };
        // init all default extensions, functionalities

        // hide all elements inside the hideWin Array

        window.addEventListener('click', function (event) {
            hideWin.forEach(item => item(event));
        });
        leistrap.map = leisElementMap;
      
        return leistrap
    })();

    var bsIcon = "\n .bi::before,[class*=\" bi-\"]::before,[class^=bi-]::before{display:inline-block;font-family:bootstrap-icons!important;font-style:normal;font-weight:400!important;font-variant:normal;text-transform:none;line-height:1;vertical-align:-.125em;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.bi-123::before{content:\"\\f67f\"}.bi-alarm-fill::before{content:\"\\f101\"}.bi-alarm::before{content:\"\\f102\"}.bi-align-bottom::before{content:\"\\f103\"}.bi-align-center::before{content:\"\\f104\"}.bi-align-end::before{content:\"\\f105\"}.bi-align-middle::before{content:\"\\f106\"}.bi-align-start::before{content:\"\\f107\"}.bi-align-top::before{content:\"\\f108\"}.bi-alt::before{content:\"\\f109\"}.bi-app-indicator::before{content:\"\\f10a\"}.bi-app::before{content:\"\\f10b\"}.bi-archive-fill::before{content:\"\\f10c\"}.bi-archive::before{content:\"\\f10d\"}.bi-arrow-90deg-down::before{content:\"\\f10e\"}.bi-arrow-90deg-left::before{content:\"\\f10f\"}.bi-arrow-90deg-right::before{content:\"\\f110\"}.bi-arrow-90deg-up::before{content:\"\\f111\"}.bi-arrow-bar-down::before{content:\"\\f112\"}.bi-arrow-bar-left::before{content:\"\\f113\"}.bi-arrow-bar-right::before{content:\"\\f114\"}.bi-arrow-bar-up::before{content:\"\\f115\"}.bi-arrow-clockwise::before{content:\"\\f116\"}.bi-arrow-counterclockwise::before{content:\"\\f117\"}.bi-arrow-down-circle-fill::before{content:\"\\f118\"}.bi-arrow-down-circle::before{content:\"\\f119\"}.bi-arrow-down-left-circle-fill::before{content:\"\\f11a\"}.bi-arrow-down-left-circle::before{content:\"\\f11b\"}.bi-arrow-down-left-square-fill::before{content:\"\\f11c\"}.bi-arrow-down-left-square::before{content:\"\\f11d\"}.bi-arrow-down-left::before{content:\"\\f11e\"}.bi-arrow-down-right-circle-fill::before{content:\"\\f11f\"}.bi-arrow-down-right-circle::before{content:\"\\f120\"}.bi-arrow-down-right-square-fill::before{content:\"\\f121\"}.bi-arrow-down-right-square::before{content:\"\\f122\"}.bi-arrow-down-right::before{content:\"\\f123\"}.bi-arrow-down-short::before{content:\"\\f124\"}.bi-arrow-down-square-fill::before{content:\"\\f125\"}.bi-arrow-down-square::before{content:\"\\f126\"}.bi-arrow-down-up::before{content:\"\\f127\"}.bi-arrow-down::before{content:\"\\f128\"}.bi-arrow-left-circle-fill::before{content:\"\\f129\"}.bi-arrow-left-circle::before{content:\"\\f12a\"}.bi-arrow-left-right::before{content:\"\\f12b\"}.bi-arrow-left-short::before{content:\"\\f12c\"}.bi-arrow-left-square-fill::before{content:\"\\f12d\"}.bi-arrow-left-square::before{content:\"\\f12e\"}.bi-arrow-left::before{content:\"\\f12f\"}.bi-arrow-repeat::before{content:\"\\f130\"}.bi-arrow-return-left::before{content:\"\\f131\"}.bi-arrow-return-right::before{content:\"\\f132\"}.bi-arrow-right-circle-fill::before{content:\"\\f133\"}.bi-arrow-right-circle::before{content:\"\\f134\"}.bi-arrow-right-short::before{content:\"\\f135\"}.bi-arrow-right-square-fill::before{content:\"\\f136\"}.bi-arrow-right-square::before{content:\"\\f137\"}.bi-arrow-right::before{content:\"\\f138\"}.bi-arrow-up-circle-fill::before{content:\"\\f139\"}.bi-arrow-up-circle::before{content:\"\\f13a\"}.bi-arrow-up-left-circle-fill::before{content:\"\\f13b\"}.bi-arrow-up-left-circle::before{content:\"\\f13c\"}.bi-arrow-up-left-square-fill::before{content:\"\\f13d\"}.bi-arrow-up-left-square::before{content:\"\\f13e\"}.bi-arrow-up-left::before{content:\"\\f13f\"}.bi-arrow-up-right-circle-fill::before{content:\"\\f140\"}.bi-arrow-up-right-circle::before{content:\"\\f141\"}.bi-arrow-up-right-square-fill::before{content:\"\\f142\"}.bi-arrow-up-right-square::before{content:\"\\f143\"}.bi-arrow-up-right::before{content:\"\\f144\"}.bi-arrow-up-short::before{content:\"\\f145\"}.bi-arrow-up-square-fill::before{content:\"\\f146\"}.bi-arrow-up-square::before{content:\"\\f147\"}.bi-arrow-up::before{content:\"\\f148\"}.bi-arrows-angle-contract::before{content:\"\\f149\"}.bi-arrows-angle-expand::before{content:\"\\f14a\"}.bi-arrows-collapse::before{content:\"\\f14b\"}.bi-arrows-expand::before{content:\"\\f14c\"}.bi-arrows-fullscreen::before{content:\"\\f14d\"}.bi-arrows-move::before{content:\"\\f14e\"}.bi-aspect-ratio-fill::before{content:\"\\f14f\"}.bi-aspect-ratio::before{content:\"\\f150\"}.bi-asterisk::before{content:\"\\f151\"}.bi-at::before{content:\"\\f152\"}.bi-award-fill::before{content:\"\\f153\"}.bi-award::before{content:\"\\f154\"}.bi-back::before{content:\"\\f155\"}.bi-backspace-fill::before{content:\"\\f156\"}.bi-backspace-reverse-fill::before{content:\"\\f157\"}.bi-backspace-reverse::before{content:\"\\f158\"}.bi-backspace::before{content:\"\\f159\"}.bi-badge-3d-fill::before{content:\"\\f15a\"}.bi-badge-3d::before{content:\"\\f15b\"}.bi-badge-4k-fill::before{content:\"\\f15c\"}.bi-badge-4k::before{content:\"\\f15d\"}.bi-badge-8k-fill::before{content:\"\\f15e\"}.bi-badge-8k::before{content:\"\\f15f\"}.bi-badge-ad-fill::before{content:\"\\f160\"}.bi-badge-ad::before{content:\"\\f161\"}.bi-badge-ar-fill::before{content:\"\\f162\"}.bi-badge-ar::before{content:\"\\f163\"}.bi-badge-cc-fill::before{content:\"\\f164\"}.bi-badge-cc::before{content:\"\\f165\"}.bi-badge-hd-fill::before{content:\"\\f166\"}.bi-badge-hd::before{content:\"\\f167\"}.bi-badge-tm-fill::before{content:\"\\f168\"}.bi-badge-tm::before{content:\"\\f169\"}.bi-badge-vo-fill::before{content:\"\\f16a\"}.bi-badge-vo::before{content:\"\\f16b\"}.bi-badge-vr-fill::before{content:\"\\f16c\"}.bi-badge-vr::before{content:\"\\f16d\"}.bi-badge-wc-fill::before{content:\"\\f16e\"}.bi-badge-wc::before{content:\"\\f16f\"}.bi-bag-check-fill::before{content:\"\\f170\"}.bi-bag-check::before{content:\"\\f171\"}.bi-bag-dash-fill::before{content:\"\\f172\"}.bi-bag-dash::before{content:\"\\f173\"}.bi-bag-fill::before{content:\"\\f174\"}.bi-bag-plus-fill::before{content:\"\\f175\"}.bi-bag-plus::before{content:\"\\f176\"}.bi-bag-x-fill::before{content:\"\\f177\"}.bi-bag-x::before{content:\"\\f178\"}.bi-bag::before{content:\"\\f179\"}.bi-bar-chart-fill::before{content:\"\\f17a\"}.bi-bar-chart-line-fill::before{content:\"\\f17b\"}.bi-bar-chart-line::before{content:\"\\f17c\"}.bi-bar-chart-steps::before{content:\"\\f17d\"}.bi-bar-chart::before{content:\"\\f17e\"}.bi-basket-fill::before{content:\"\\f17f\"}.bi-basket::before{content:\"\\f180\"}.bi-basket2-fill::before{content:\"\\f181\"}.bi-basket2::before{content:\"\\f182\"}.bi-basket3-fill::before{content:\"\\f183\"}.bi-basket3::before{content:\"\\f184\"}.bi-battery-charging::before{content:\"\\f185\"}.bi-battery-full::before{content:\"\\f186\"}.bi-battery-half::before{content:\"\\f187\"}.bi-battery::before{content:\"\\f188\"}.bi-bell-fill::before{content:\"\\f189\"}.bi-bell::before{content:\"\\f18a\"}.bi-bezier::before{content:\"\\f18b\"}.bi-bezier2::before{content:\"\\f18c\"}.bi-bicycle::before{content:\"\\f18d\"}.bi-binoculars-fill::before{content:\"\\f18e\"}.bi-binoculars::before{content:\"\\f18f\"}.bi-blockquote-left::before{content:\"\\f190\"}.bi-blockquote-right::before{content:\"\\f191\"}.bi-book-fill::before{content:\"\\f192\"}.bi-book-half::before{content:\"\\f193\"}.bi-book::before{content:\"\\f194\"}.bi-bookmark-check-fill::before{content:\"\\f195\"}.bi-bookmark-check::before{content:\"\\f196\"}.bi-bookmark-dash-fill::before{content:\"\\f197\"}.bi-bookmark-dash::before{content:\"\\f198\"}.bi-bookmark-fill::before{content:\"\\f199\"}.bi-bookmark-heart-fill::before{content:\"\\f19a\"}.bi-bookmark-heart::before{content:\"\\f19b\"}.bi-bookmark-plus-fill::before{content:\"\\f19c\"}.bi-bookmark-plus::before{content:\"\\f19d\"}.bi-bookmark-star-fill::before{content:\"\\f19e\"}.bi-bookmark-star::before{content:\"\\f19f\"}.bi-bookmark-x-fill::before{content:\"\\f1a0\"}.bi-bookmark-x::before{content:\"\\f1a1\"}.bi-bookmark::before{content:\"\\f1a2\"}.bi-bookmarks-fill::before{content:\"\\f1a3\"}.bi-bookmarks::before{content:\"\\f1a4\"}.bi-bookshelf::before{content:\"\\f1a5\"}.bi-bootstrap-fill::before{content:\"\\f1a6\"}.bi-bootstrap-reboot::before{content:\"\\f1a7\"}.bi-bootstrap::before{content:\"\\f1a8\"}.bi-border-all::before{content:\"\\f1a9\"}.bi-border-bottom::before{content:\"\\f1aa\"}.bi-border-center::before{content:\"\\f1ab\"}.bi-border-inner::before{content:\"\\f1ac\"}.bi-border-left::before{content:\"\\f1ad\"}.bi-border-middle::before{content:\"\\f1ae\"}.bi-border-outer::before{content:\"\\f1af\"}.bi-border-right::before{content:\"\\f1b0\"}.bi-border-style::before{content:\"\\f1b1\"}.bi-border-top::before{content:\"\\f1b2\"}.bi-border-width::before{content:\"\\f1b3\"}.bi-border::before{content:\"\\f1b4\"}.bi-bounding-box-circles::before{content:\"\\f1b5\"}.bi-bounding-box::before{content:\"\\f1b6\"}.bi-box-arrow-down-left::before{content:\"\\f1b7\"}.bi-box-arrow-down-right::before{content:\"\\f1b8\"}.bi-box-arrow-down::before{content:\"\\f1b9\"}.bi-box-arrow-in-down-left::before{content:\"\\f1ba\"}.bi-box-arrow-in-down-right::before{content:\"\\f1bb\"}.bi-box-arrow-in-down::before{content:\"\\f1bc\"}.bi-box-arrow-in-left::before{content:\"\\f1bd\"}.bi-box-arrow-in-right::before{content:\"\\f1be\"}.bi-box-arrow-in-up-left::before{content:\"\\f1bf\"}.bi-box-arrow-in-up-right::before{content:\"\\f1c0\"}.bi-box-arrow-in-up::before{content:\"\\f1c1\"}.bi-box-arrow-left::before{content:\"\\f1c2\"}.bi-box-arrow-right::before{content:\"\\f1c3\"}.bi-box-arrow-up-left::before{content:\"\\f1c4\"}.bi-box-arrow-up-right::before{content:\"\\f1c5\"}.bi-box-arrow-up::before{content:\"\\f1c6\"}.bi-box-seam::before{content:\"\\f1c7\"}.bi-box::before{content:\"\\f1c8\"}.bi-braces::before{content:\"\\f1c9\"}.bi-bricks::before{content:\"\\f1ca\"}.bi-briefcase-fill::before{content:\"\\f1cb\"}.bi-briefcase::before{content:\"\\f1cc\"}.bi-brightness-alt-high-fill::before{content:\"\\f1cd\"}.bi-brightness-alt-high::before{content:\"\\f1ce\"}.bi-brightness-alt-low-fill::before{content:\"\\f1cf\"}.bi-brightness-alt-low::before{content:\"\\f1d0\"}.bi-brightness-high-fill::before{content:\"\\f1d1\"}.bi-brightness-high::before{content:\"\\f1d2\"}.bi-brightness-low-fill::before{content:\"\\f1d3\"}.bi-brightness-low::before{content:\"\\f1d4\"}.bi-broadcast-pin::before{content:\"\\f1d5\"}.bi-broadcast::before{content:\"\\f1d6\"}.bi-brush-fill::before{content:\"\\f1d7\"}.bi-brush::before{content:\"\\f1d8\"}.bi-bucket-fill::before{content:\"\\f1d9\"}.bi-bucket::before{content:\"\\f1da\"}.bi-bug-fill::before{content:\"\\f1db\"}.bi-bug::before{content:\"\\f1dc\"}.bi-building::before{content:\"\\f1dd\"}.bi-bullseye::before{content:\"\\f1de\"}.bi-calculator-fill::before{content:\"\\f1df\"}.bi-calculator::before{content:\"\\f1e0\"}.bi-calendar-check-fill::before{content:\"\\f1e1\"}.bi-calendar-check::before{content:\"\\f1e2\"}.bi-calendar-date-fill::before{content:\"\\f1e3\"}.bi-calendar-date::before{content:\"\\f1e4\"}.bi-calendar-day-fill::before{content:\"\\f1e5\"}.bi-calendar-day::before{content:\"\\f1e6\"}.bi-calendar-event-fill::before{content:\"\\f1e7\"}.bi-calendar-event::before{content:\"\\f1e8\"}.bi-calendar-fill::before{content:\"\\f1e9\"}.bi-calendar-minus-fill::before{content:\"\\f1ea\"}.bi-calendar-minus::before{content:\"\\f1eb\"}.bi-calendar-month-fill::before{content:\"\\f1ec\"}.bi-calendar-month::before{content:\"\\f1ed\"}.bi-calendar-plus-fill::before{content:\"\\f1ee\"}.bi-calendar-plus::before{content:\"\\f1ef\"}.bi-calendar-range-fill::before{content:\"\\f1f0\"}.bi-calendar-range::before{content:\"\\f1f1\"}.bi-calendar-week-fill::before{content:\"\\f1f2\"}.bi-calendar-week::before{content:\"\\f1f3\"}.bi-calendar-x-fill::before{content:\"\\f1f4\"}.bi-calendar-x::before{content:\"\\f1f5\"}.bi-calendar::before{content:\"\\f1f6\"}.bi-calendar2-check-fill::before{content:\"\\f1f7\"}.bi-calendar2-check::before{content:\"\\f1f8\"}.bi-calendar2-date-fill::before{content:\"\\f1f9\"}.bi-calendar2-date::before{content:\"\\f1fa\"}.bi-calendar2-day-fill::before{content:\"\\f1fb\"}.bi-calendar2-day::before{content:\"\\f1fc\"}.bi-calendar2-event-fill::before{content:\"\\f1fd\"}.bi-calendar2-event::before{content:\"\\f1fe\"}.bi-calendar2-fill::before{content:\"\\f1ff\"}.bi-calendar2-minus-fill::before{content:\"\\f200\"}.bi-calendar2-minus::before{content:\"\\f201\"}.bi-calendar2-month-fill::before{content:\"\\f202\"}.bi-calendar2-month::before{content:\"\\f203\"}.bi-calendar2-plus-fill::before{content:\"\\f204\"}.bi-calendar2-plus::before{content:\"\\f205\"}.bi-calendar2-range-fill::before{content:\"\\f206\"}.bi-calendar2-range::before{content:\"\\f207\"}.bi-calendar2-week-fill::before{content:\"\\f208\"}.bi-calendar2-week::before{content:\"\\f209\"}.bi-calendar2-x-fill::before{content:\"\\f20a\"}.bi-calendar2-x::before{content:\"\\f20b\"}.bi-calendar2::before{content:\"\\f20c\"}.bi-calendar3-event-fill::before{content:\"\\f20d\"}.bi-calendar3-event::before{content:\"\\f20e\"}.bi-calendar3-fill::before{content:\"\\f20f\"}.bi-calendar3-range-fill::before{content:\"\\f210\"}.bi-calendar3-range::before{content:\"\\f211\"}.bi-calendar3-week-fill::before{content:\"\\f212\"}.bi-calendar3-week::before{content:\"\\f213\"}.bi-calendar3::before{content:\"\\f214\"}.bi-calendar4-event::before{content:\"\\f215\"}.bi-calendar4-range::before{content:\"\\f216\"}.bi-calendar4-week::before{content:\"\\f217\"}.bi-calendar4::before{content:\"\\f218\"}.bi-camera-fill::before{content:\"\\f219\"}.bi-camera-reels-fill::before{content:\"\\f21a\"}.bi-camera-reels::before{content:\"\\f21b\"}.bi-camera-video-fill::before{content:\"\\f21c\"}.bi-camera-video-off-fill::before{content:\"\\f21d\"}.bi-camera-video-off::before{content:\"\\f21e\"}.bi-camera-video::before{content:\"\\f21f\"}.bi-camera::before{content:\"\\f220\"}.bi-camera2::before{content:\"\\f221\"}.bi-capslock-fill::before{content:\"\\f222\"}.bi-capslock::before{content:\"\\f223\"}.bi-card-checklist::before{content:\"\\f224\"}.bi-card-heading::before{content:\"\\f225\"}.bi-card-image::before{content:\"\\f226\"}.bi-card-list::before{content:\"\\f227\"}.bi-card-text::before{content:\"\\f228\"}.bi-caret-down-fill::before{content:\"\\f229\"}.bi-caret-down-square-fill::before{content:\"\\f22a\"}.bi-caret-down-square::before{content:\"\\f22b\"}.bi-caret-down::before{content:\"\\f22c\"}.bi-caret-left-fill::before{content:\"\\f22d\"}.bi-caret-left-square-fill::before{content:\"\\f22e\"}.bi-caret-left-square::before{content:\"\\f22f\"}.bi-caret-left::before{content:\"\\f230\"}.bi-caret-right-fill::before{content:\"\\f231\"}.bi-caret-right-square-fill::before{content:\"\\f232\"}.bi-caret-right-square::before{content:\"\\f233\"}.bi-caret-right::before{content:\"\\f234\"}.bi-caret-up-fill::before{content:\"\\f235\"}.bi-caret-up-square-fill::before{content:\"\\f236\"}.bi-caret-up-square::before{content:\"\\f237\"}.bi-caret-up::before{content:\"\\f238\"}.bi-cart-check-fill::before{content:\"\\f239\"}.bi-cart-check::before{content:\"\\f23a\"}.bi-cart-dash-fill::before{content:\"\\f23b\"}.bi-cart-dash::before{content:\"\\f23c\"}.bi-cart-fill::before{content:\"\\f23d\"}.bi-cart-plus-fill::before{content:\"\\f23e\"}.bi-cart-plus::before{content:\"\\f23f\"}.bi-cart-x-fill::before{content:\"\\f240\"}.bi-cart-x::before{content:\"\\f241\"}.bi-cart::before{content:\"\\f242\"}.bi-cart2::before{content:\"\\f243\"}.bi-cart3::before{content:\"\\f244\"}.bi-cart4::before{content:\"\\f245\"}.bi-cash-stack::before{content:\"\\f246\"}.bi-cash::before{content:\"\\f247\"}.bi-cast::before{content:\"\\f248\"}.bi-chat-dots-fill::before{content:\"\\f249\"}.bi-chat-dots::before{content:\"\\f24a\"}.bi-chat-fill::before{content:\"\\f24b\"}.bi-chat-left-dots-fill::before{content:\"\\f24c\"}.bi-chat-left-dots::before{content:\"\\f24d\"}.bi-chat-left-fill::before{content:\"\\f24e\"}.bi-chat-left-quote-fill::before{content:\"\\f24f\"}.bi-chat-left-quote::before{content:\"\\f250\"}.bi-chat-left-text-fill::before{content:\"\\f251\"}.bi-chat-left-text::before{content:\"\\f252\"}.bi-chat-left::before{content:\"\\f253\"}.bi-chat-quote-fill::before{content:\"\\f254\"}.bi-chat-quote::before{content:\"\\f255\"}.bi-chat-right-dots-fill::before{content:\"\\f256\"}.bi-chat-right-dots::before{content:\"\\f257\"}.bi-chat-right-fill::before{content:\"\\f258\"}.bi-chat-right-quote-fill::before{content:\"\\f259\"}.bi-chat-right-quote::before{content:\"\\f25a\"}.bi-chat-right-text-fill::before{content:\"\\f25b\"}.bi-chat-right-text::before{content:\"\\f25c\"}.bi-chat-right::before{content:\"\\f25d\"}.bi-chat-square-dots-fill::before{content:\"\\f25e\"}.bi-chat-square-dots::before{content:\"\\f25f\"}.bi-chat-square-fill::before{content:\"\\f260\"}.bi-chat-square-quote-fill::before{content:\"\\f261\"}.bi-chat-square-quote::before{content:\"\\f262\"}.bi-chat-square-text-fill::before{content:\"\\f263\"}.bi-chat-square-text::before{content:\"\\f264\"}.bi-chat-square::before{content:\"\\f265\"}.bi-chat-text-fill::before{content:\"\\f266\"}.bi-chat-text::before{content:\"\\f267\"}.bi-chat::before{content:\"\\f268\"}.bi-check-all::before{content:\"\\f269\"}.bi-check-circle-fill::before{content:\"\\f26a\"}.bi-check-circle::before{content:\"\\f26b\"}.bi-check-square-fill::before{content:\"\\f26c\"}.bi-check-square::before{content:\"\\f26d\"}.bi-check::before{content:\"\\f26e\"}.bi-check2-all::before{content:\"\\f26f\"}.bi-check2-circle::before{content:\"\\f270\"}.bi-check2-square::before{content:\"\\f271\"}.bi-check2::before{content:\"\\f272\"}.bi-chevron-bar-contract::before{content:\"\\f273\"}.bi-chevron-bar-down::before{content:\"\\f274\"}.bi-chevron-bar-expand::before{content:\"\\f275\"}.bi-chevron-bar-left::before{content:\"\\f276\"}.bi-chevron-bar-right::before{content:\"\\f277\"}.bi-chevron-bar-up::before{content:\"\\f278\"}.bi-chevron-compact-down::before{content:\"\\f279\"}.bi-chevron-compact-left::before{content:\"\\f27a\"}.bi-chevron-compact-right::before{content:\"\\f27b\"}.bi-chevron-compact-up::before{content:\"\\f27c\"}.bi-chevron-contract::before{content:\"\\f27d\"}.bi-chevron-double-down::before{content:\"\\f27e\"}.bi-chevron-double-left::before{content:\"\\f27f\"}.bi-chevron-double-right::before{content:\"\\f280\"}.bi-chevron-double-up::before{content:\"\\f281\"}.bi-chevron-down::before{content:\"\\f282\"}.bi-chevron-expand::before{content:\"\\f283\"}.bi-chevron-left::before{content:\"\\f284\"}.bi-chevron-right::before{content:\"\\f285\"}.bi-chevron-up::before{content:\"\\f286\"}.bi-circle-fill::before{content:\"\\f287\"}.bi-circle-half::before{content:\"\\f288\"}.bi-circle-square::before{content:\"\\f289\"}.bi-circle::before{content:\"\\f28a\"}.bi-clipboard-check::before{content:\"\\f28b\"}.bi-clipboard-data::before{content:\"\\f28c\"}.bi-clipboard-minus::before{content:\"\\f28d\"}.bi-clipboard-plus::before{content:\"\\f28e\"}.bi-clipboard-x::before{content:\"\\f28f\"}.bi-clipboard::before{content:\"\\f290\"}.bi-clock-fill::before{content:\"\\f291\"}.bi-clock-history::before{content:\"\\f292\"}.bi-clock::before{content:\"\\f293\"}.bi-cloud-arrow-down-fill::before{content:\"\\f294\"}.bi-cloud-arrow-down::before{content:\"\\f295\"}.bi-cloud-arrow-up-fill::before{content:\"\\f296\"}.bi-cloud-arrow-up::before{content:\"\\f297\"}.bi-cloud-check-fill::before{content:\"\\f298\"}.bi-cloud-check::before{content:\"\\f299\"}.bi-cloud-download-fill::before{content:\"\\f29a\"}.bi-cloud-download::before{content:\"\\f29b\"}.bi-cloud-drizzle-fill::before{content:\"\\f29c\"}.bi-cloud-drizzle::before{content:\"\\f29d\"}.bi-cloud-fill::before{content:\"\\f29e\"}.bi-cloud-fog-fill::before{content:\"\\f29f\"}.bi-cloud-fog::before{content:\"\\f2a0\"}.bi-cloud-fog2-fill::before{content:\"\\f2a1\"}.bi-cloud-fog2::before{content:\"\\f2a2\"}.bi-cloud-hail-fill::before{content:\"\\f2a3\"}.bi-cloud-hail::before{content:\"\\f2a4\"}.bi-cloud-haze-fill::before{content:\"\\f2a6\"}.bi-cloud-haze::before{content:\"\\f2a7\"}.bi-cloud-haze2-fill::before{content:\"\\f2a8\"}.bi-cloud-lightning-fill::before{content:\"\\f2a9\"}.bi-cloud-lightning-rain-fill::before{content:\"\\f2aa\"}.bi-cloud-lightning-rain::before{content:\"\\f2ab\"}.bi-cloud-lightning::before{content:\"\\f2ac\"}.bi-cloud-minus-fill::before{content:\"\\f2ad\"}.bi-cloud-minus::before{content:\"\\f2ae\"}.bi-cloud-moon-fill::before{content:\"\\f2af\"}.bi-cloud-moon::before{content:\"\\f2b0\"}.bi-cloud-plus-fill::before{content:\"\\f2b1\"}.bi-cloud-plus::before{content:\"\\f2b2\"}.bi-cloud-rain-fill::before{content:\"\\f2b3\"}.bi-cloud-rain-heavy-fill::before{content:\"\\f2b4\"}.bi-cloud-rain-heavy::before{content:\"\\f2b5\"}.bi-cloud-rain::before{content:\"\\f2b6\"}.bi-cloud-slash-fill::before{content:\"\\f2b7\"}.bi-cloud-slash::before{content:\"\\f2b8\"}.bi-cloud-sleet-fill::before{content:\"\\f2b9\"}.bi-cloud-sleet::before{content:\"\\f2ba\"}.bi-cloud-snow-fill::before{content:\"\\f2bb\"}.bi-cloud-snow::before{content:\"\\f2bc\"}.bi-cloud-sun-fill::before{content:\"\\f2bd\"}.bi-cloud-sun::before{content:\"\\f2be\"}.bi-cloud-upload-fill::before{content:\"\\f2bf\"}.bi-cloud-upload::before{content:\"\\f2c0\"}.bi-cloud::before{content:\"\\f2c1\"}.bi-clouds-fill::before{content:\"\\f2c2\"}.bi-clouds::before{content:\"\\f2c3\"}.bi-cloudy-fill::before{content:\"\\f2c4\"}.bi-cloudy::before{content:\"\\f2c5\"}.bi-code-slash::before{content:\"\\f2c6\"}.bi-code-square::before{content:\"\\f2c7\"}.bi-code::before{content:\"\\f2c8\"}.bi-collection-fill::before{content:\"\\f2c9\"}.bi-collection-play-fill::before{content:\"\\f2ca\"}.bi-collection-play::before{content:\"\\f2cb\"}.bi-collection::before{content:\"\\f2cc\"}.bi-columns-gap::before{content:\"\\f2cd\"}.bi-columns::before{content:\"\\f2ce\"}.bi-command::before{content:\"\\f2cf\"}.bi-compass-fill::before{content:\"\\f2d0\"}.bi-compass::before{content:\"\\f2d1\"}.bi-cone-striped::before{content:\"\\f2d2\"}.bi-cone::before{content:\"\\f2d3\"}.bi-controller::before{content:\"\\f2d4\"}.bi-cpu-fill::before{content:\"\\f2d5\"}.bi-cpu::before{content:\"\\f2d6\"}.bi-credit-card-2-back-fill::before{content:\"\\f2d7\"}.bi-credit-card-2-back::before{content:\"\\f2d8\"}.bi-credit-card-2-front-fill::before{content:\"\\f2d9\"}.bi-credit-card-2-front::before{content:\"\\f2da\"}.bi-credit-card-fill::before{content:\"\\f2db\"}.bi-credit-card::before{content:\"\\f2dc\"}.bi-crop::before{content:\"\\f2dd\"}.bi-cup-fill::before{content:\"\\f2de\"}.bi-cup-straw::before{content:\"\\f2df\"}.bi-cup::before{content:\"\\f2e0\"}.bi-cursor-fill::before{content:\"\\f2e1\"}.bi-cursor-text::before{content:\"\\f2e2\"}.bi-cursor::before{content:\"\\f2e3\"}.bi-dash-circle-dotted::before{content:\"\\f2e4\"}.bi-dash-circle-fill::before{content:\"\\f2e5\"}.bi-dash-circle::before{content:\"\\f2e6\"}.bi-dash-square-dotted::before{content:\"\\f2e7\"}.bi-dash-square-fill::before{content:\"\\f2e8\"}.bi-dash-square::before{content:\"\\f2e9\"}.bi-dash::before{content:\"\\f2ea\"}.bi-diagram-2-fill::before{content:\"\\f2eb\"}.bi-diagram-2::before{content:\"\\f2ec\"}.bi-diagram-3-fill::before{content:\"\\f2ed\"}.bi-diagram-3::before{content:\"\\f2ee\"}.bi-diamond-fill::before{content:\"\\f2ef\"}.bi-diamond-half::before{content:\"\\f2f0\"}.bi-diamond::before{content:\"\\f2f1\"}.bi-dice-1-fill::before{content:\"\\f2f2\"}.bi-dice-1::before{content:\"\\f2f3\"}.bi-dice-2-fill::before{content:\"\\f2f4\"}.bi-dice-2::before{content:\"\\f2f5\"}.bi-dice-3-fill::before{content:\"\\f2f6\"}.bi-dice-3::before{content:\"\\f2f7\"}.bi-dice-4-fill::before{content:\"\\f2f8\"}.bi-dice-4::before{content:\"\\f2f9\"}.bi-dice-5-fill::before{content:\"\\f2fa\"}.bi-dice-5::before{content:\"\\f2fb\"}.bi-dice-6-fill::before{content:\"\\f2fc\"}.bi-dice-6::before{content:\"\\f2fd\"}.bi-disc-fill::before{content:\"\\f2fe\"}.bi-disc::before{content:\"\\f2ff\"}.bi-discord::before{content:\"\\f300\"}.bi-display-fill::before{content:\"\\f301\"}.bi-display::before{content:\"\\f302\"}.bi-distribute-horizontal::before{content:\"\\f303\"}.bi-distribute-vertical::before{content:\"\\f304\"}.bi-door-closed-fill::before{content:\"\\f305\"}.bi-door-closed::before{content:\"\\f306\"}.bi-door-open-fill::before{content:\"\\f307\"}.bi-door-open::before{content:\"\\f308\"}.bi-dot::before{content:\"\\f309\"}.bi-download::before{content:\"\\f30a\"}.bi-droplet-fill::before{content:\"\\f30b\"}.bi-droplet-half::before{content:\"\\f30c\"}.bi-droplet::before{content:\"\\f30d\"}.bi-earbuds::before{content:\"\\f30e\"}.bi-easel-fill::before{content:\"\\f30f\"}.bi-easel::before{content:\"\\f310\"}.bi-egg-fill::before{content:\"\\f311\"}.bi-egg-fried::before{content:\"\\f312\"}.bi-egg::before{content:\"\\f313\"}.bi-eject-fill::before{content:\"\\f314\"}.bi-eject::before{content:\"\\f315\"}.bi-emoji-angry-fill::before{content:\"\\f316\"}.bi-emoji-angry::before{content:\"\\f317\"}.bi-emoji-dizzy-fill::before{content:\"\\f318\"}.bi-emoji-dizzy::before{content:\"\\f319\"}.bi-emoji-expressionless-fill::before{content:\"\\f31a\"}.bi-emoji-expressionless::before{content:\"\\f31b\"}.bi-emoji-frown-fill::before{content:\"\\f31c\"}.bi-emoji-frown::before{content:\"\\f31d\"}.bi-emoji-heart-eyes-fill::before{content:\"\\f31e\"}.bi-emoji-heart-eyes::before{content:\"\\f31f\"}.bi-emoji-laughing-fill::before{content:\"\\f320\"}.bi-emoji-laughing::before{content:\"\\f321\"}.bi-emoji-neutral-fill::before{content:\"\\f322\"}.bi-emoji-neutral::before{content:\"\\f323\"}.bi-emoji-smile-fill::before{content:\"\\f324\"}.bi-emoji-smile-upside-down-fill::before{content:\"\\f325\"}.bi-emoji-smile-upside-down::before{content:\"\\f326\"}.bi-emoji-smile::before{content:\"\\f327\"}.bi-emoji-sunglasses-fill::before{content:\"\\f328\"}.bi-emoji-sunglasses::before{content:\"\\f329\"}.bi-emoji-wink-fill::before{content:\"\\f32a\"}.bi-emoji-wink::before{content:\"\\f32b\"}.bi-envelope-fill::before{content:\"\\f32c\"}.bi-envelope-open-fill::before{content:\"\\f32d\"}.bi-envelope-open::before{content:\"\\f32e\"}.bi-envelope::before{content:\"\\f32f\"}.bi-eraser-fill::before{content:\"\\f330\"}.bi-eraser::before{content:\"\\f331\"}.bi-exclamation-circle-fill::before{content:\"\\f332\"}.bi-exclamation-circle::before{content:\"\\f333\"}.bi-exclamation-diamond-fill::before{content:\"\\f334\"}.bi-exclamation-diamond::before{content:\"\\f335\"}.bi-exclamation-octagon-fill::before{content:\"\\f336\"}.bi-exclamation-octagon::before{content:\"\\f337\"}.bi-exclamation-square-fill::before{content:\"\\f338\"}.bi-exclamation-square::before{content:\"\\f339\"}.bi-exclamation-triangle-fill::before{content:\"\\f33a\"}.bi-exclamation-triangle::before{content:\"\\f33b\"}.bi-exclamation::before{content:\"\\f33c\"}.bi-exclude::before{content:\"\\f33d\"}.bi-eye-fill::before{content:\"\\f33e\"}.bi-eye-slash-fill::before{content:\"\\f33f\"}.bi-eye-slash::before{content:\"\\f340\"}.bi-eye::before{content:\"\\f341\"}.bi-eyedropper::before{content:\"\\f342\"}.bi-eyeglasses::before{content:\"\\f343\"}.bi-facebook::before{content:\"\\f344\"}.bi-file-arrow-down-fill::before{content:\"\\f345\"}.bi-file-arrow-down::before{content:\"\\f346\"}.bi-file-arrow-up-fill::before{content:\"\\f347\"}.bi-file-arrow-up::before{content:\"\\f348\"}.bi-file-bar-graph-fill::before{content:\"\\f349\"}.bi-file-bar-graph::before{content:\"\\f34a\"}.bi-file-binary-fill::before{content:\"\\f34b\"}.bi-file-binary::before{content:\"\\f34c\"}.bi-file-break-fill::before{content:\"\\f34d\"}.bi-file-break::before{content:\"\\f34e\"}.bi-file-check-fill::before{content:\"\\f34f\"}.bi-file-check::before{content:\"\\f350\"}.bi-file-code-fill::before{content:\"\\f351\"}.bi-file-code::before{content:\"\\f352\"}.bi-file-diff-fill::before{content:\"\\f353\"}.bi-file-diff::before{content:\"\\f354\"}.bi-file-earmark-arrow-down-fill::before{content:\"\\f355\"}.bi-file-earmark-arrow-down::before{content:\"\\f356\"}.bi-file-earmark-arrow-up-fill::before{content:\"\\f357\"}.bi-file-earmark-arrow-up::before{content:\"\\f358\"}.bi-file-earmark-bar-graph-fill::before{content:\"\\f359\"}.bi-file-earmark-bar-graph::before{content:\"\\f35a\"}.bi-file-earmark-binary-fill::before{content:\"\\f35b\"}.bi-file-earmark-binary::before{content:\"\\f35c\"}.bi-file-earmark-break-fill::before{content:\"\\f35d\"}.bi-file-earmark-break::before{content:\"\\f35e\"}.bi-file-earmark-check-fill::before{content:\"\\f35f\"}.bi-file-earmark-check::before{content:\"\\f360\"}.bi-file-earmark-code-fill::before{content:\"\\f361\"}.bi-file-earmark-code::before{content:\"\\f362\"}.bi-file-earmark-diff-fill::before{content:\"\\f363\"}.bi-file-earmark-diff::before{content:\"\\f364\"}.bi-file-earmark-easel-fill::before{content:\"\\f365\"}.bi-file-earmark-easel::before{content:\"\\f366\"}.bi-file-earmark-excel-fill::before{content:\"\\f367\"}.bi-file-earmark-excel::before{content:\"\\f368\"}.bi-file-earmark-fill::before{content:\"\\f369\"}.bi-file-earmark-font-fill::before{content:\"\\f36a\"}.bi-file-earmark-font::before{content:\"\\f36b\"}.bi-file-earmark-image-fill::before{content:\"\\f36c\"}.bi-file-earmark-image::before{content:\"\\f36d\"}.bi-file-earmark-lock-fill::before{content:\"\\f36e\"}.bi-file-earmark-lock::before{content:\"\\f36f\"}.bi-file-earmark-lock2-fill::before{content:\"\\f370\"}.bi-file-earmark-lock2::before{content:\"\\f371\"}.bi-file-earmark-medical-fill::before{content:\"\\f372\"}.bi-file-earmark-medical::before{content:\"\\f373\"}.bi-file-earmark-minus-fill::before{content:\"\\f374\"}.bi-file-earmark-minus::before{content:\"\\f375\"}.bi-file-earmark-music-fill::before{content:\"\\f376\"}.bi-file-earmark-music::before{content:\"\\f377\"}.bi-file-earmark-person-fill::before{content:\"\\f378\"}.bi-file-earmark-person::before{content:\"\\f379\"}.bi-file-earmark-play-fill::before{content:\"\\f37a\"}.bi-file-earmark-play::before{content:\"\\f37b\"}.bi-file-earmark-plus-fill::before{content:\"\\f37c\"}.bi-file-earmark-plus::before{content:\"\\f37d\"}.bi-file-earmark-post-fill::before{content:\"\\f37e\"}.bi-file-earmark-post::before{content:\"\\f37f\"}.bi-file-earmark-ppt-fill::before{content:\"\\f380\"}.bi-file-earmark-ppt::before{content:\"\\f381\"}.bi-file-earmark-richtext-fill::before{content:\"\\f382\"}.bi-file-earmark-richtext::before{content:\"\\f383\"}.bi-file-earmark-ruled-fill::before{content:\"\\f384\"}.bi-file-earmark-ruled::before{content:\"\\f385\"}.bi-file-earmark-slides-fill::before{content:\"\\f386\"}.bi-file-earmark-slides::before{content:\"\\f387\"}.bi-file-earmark-spreadsheet-fill::before{content:\"\\f388\"}.bi-file-earmark-spreadsheet::before{content:\"\\f389\"}.bi-file-earmark-text-fill::before{content:\"\\f38a\"}.bi-file-earmark-text::before{content:\"\\f38b\"}.bi-file-earmark-word-fill::before{content:\"\\f38c\"}.bi-file-earmark-word::before{content:\"\\f38d\"}.bi-file-earmark-x-fill::before{content:\"\\f38e\"}.bi-file-earmark-x::before{content:\"\\f38f\"}.bi-file-earmark-zip-fill::before{content:\"\\f390\"}.bi-file-earmark-zip::before{content:\"\\f391\"}.bi-file-earmark::before{content:\"\\f392\"}.bi-file-easel-fill::before{content:\"\\f393\"}.bi-file-easel::before{content:\"\\f394\"}.bi-file-excel-fill::before{content:\"\\f395\"}.bi-file-excel::before{content:\"\\f396\"}.bi-file-fill::before{content:\"\\f397\"}.bi-file-font-fill::before{content:\"\\f398\"}.bi-file-font::before{content:\"\\f399\"}.bi-file-image-fill::before{content:\"\\f39a\"}.bi-file-image::before{content:\"\\f39b\"}.bi-file-lock-fill::before{content:\"\\f39c\"}.bi-file-lock::before{content:\"\\f39d\"}.bi-file-lock2-fill::before{content:\"\\f39e\"}.bi-file-lock2::before{content:\"\\f39f\"}.bi-file-medical-fill::before{content:\"\\f3a0\"}.bi-file-medical::before{content:\"\\f3a1\"}.bi-file-minus-fill::before{content:\"\\f3a2\"}.bi-file-minus::before{content:\"\\f3a3\"}.bi-file-music-fill::before{content:\"\\f3a4\"}.bi-file-music::before{content:\"\\f3a5\"}.bi-file-person-fill::before{content:\"\\f3a6\"}.bi-file-person::before{content:\"\\f3a7\"}.bi-file-play-fill::before{content:\"\\f3a8\"}.bi-file-play::before{content:\"\\f3a9\"}.bi-file-plus-fill::before{content:\"\\f3aa\"}.bi-file-plus::before{content:\"\\f3ab\"}.bi-file-post-fill::before{content:\"\\f3ac\"}.bi-file-post::before{content:\"\\f3ad\"}.bi-file-ppt-fill::before{content:\"\\f3ae\"}.bi-file-ppt::before{content:\"\\f3af\"}.bi-file-richtext-fill::before{content:\"\\f3b0\"}.bi-file-richtext::before{content:\"\\f3b1\"}.bi-file-ruled-fill::before{content:\"\\f3b2\"}.bi-file-ruled::before{content:\"\\f3b3\"}.bi-file-slides-fill::before{content:\"\\f3b4\"}.bi-file-slides::before{content:\"\\f3b5\"}.bi-file-spreadsheet-fill::before{content:\"\\f3b6\"}.bi-file-spreadsheet::before{content:\"\\f3b7\"}.bi-file-text-fill::before{content:\"\\f3b8\"}.bi-file-text::before{content:\"\\f3b9\"}.bi-file-word-fill::before{content:\"\\f3ba\"}.bi-file-word::before{content:\"\\f3bb\"}.bi-file-x-fill::before{content:\"\\f3bc\"}.bi-file-x::before{content:\"\\f3bd\"}.bi-file-zip-fill::before{content:\"\\f3be\"}.bi-file-zip::before{content:\"\\f3bf\"}.bi-file::before{content:\"\\f3c0\"}.bi-files-alt::before{content:\"\\f3c1\"}.bi-files::before{content:\"\\f3c2\"}.bi-film::before{content:\"\\f3c3\"}.bi-filter-circle-fill::before{content:\"\\f3c4\"}.bi-filter-circle::before{content:\"\\f3c5\"}.bi-filter-left::before{content:\"\\f3c6\"}.bi-filter-right::before{content:\"\\f3c7\"}.bi-filter-square-fill::before{content:\"\\f3c8\"}.bi-filter-square::before{content:\"\\f3c9\"}.bi-filter::before{content:\"\\f3ca\"}.bi-flag-fill::before{content:\"\\f3cb\"}.bi-flag::before{content:\"\\f3cc\"}.bi-flower1::before{content:\"\\f3cd\"}.bi-flower2::before{content:\"\\f3ce\"}.bi-flower3::before{content:\"\\f3cf\"}.bi-folder-check::before{content:\"\\f3d0\"}.bi-folder-fill::before{content:\"\\f3d1\"}.bi-folder-minus::before{content:\"\\f3d2\"}.bi-folder-plus::before{content:\"\\f3d3\"}.bi-folder-symlink-fill::before{content:\"\\f3d4\"}.bi-folder-symlink::before{content:\"\\f3d5\"}.bi-folder-x::before{content:\"\\f3d6\"}.bi-folder::before{content:\"\\f3d7\"}.bi-folder2-open::before{content:\"\\f3d8\"}.bi-folder2::before{content:\"\\f3d9\"}.bi-fonts::before{content:\"\\f3da\"}.bi-forward-fill::before{content:\"\\f3db\"}.bi-forward::before{content:\"\\f3dc\"}.bi-front::before{content:\"\\f3dd\"}.bi-fullscreen-exit::before{content:\"\\f3de\"}.bi-fullscreen::before{content:\"\\f3df\"}.bi-funnel-fill::before{content:\"\\f3e0\"}.bi-funnel::before{content:\"\\f3e1\"}.bi-gear-fill::before{content:\"\\f3e2\"}.bi-gear-wide-connected::before{content:\"\\f3e3\"}.bi-gear-wide::before{content:\"\\f3e4\"}.bi-gear::before{content:\"\\f3e5\"}.bi-gem::before{content:\"\\f3e6\"}.bi-geo-alt-fill::before{content:\"\\f3e7\"}.bi-geo-alt::before{content:\"\\f3e8\"}.bi-geo-fill::before{content:\"\\f3e9\"}.bi-geo::before{content:\"\\f3ea\"}.bi-gift-fill::before{content:\"\\f3eb\"}.bi-gift::before{content:\"\\f3ec\"}.bi-github::before{content:\"\\f3ed\"}.bi-globe::before{content:\"\\f3ee\"}.bi-globe2::before{content:\"\\f3ef\"}.bi-google::before{content:\"\\f3f0\"}.bi-graph-down::before{content:\"\\f3f1\"}.bi-graph-up::before{content:\"\\f3f2\"}.bi-grid-1x2-fill::before{content:\"\\f3f3\"}.bi-grid-1x2::before{content:\"\\f3f4\"}.bi-grid-3x2-gap-fill::before{content:\"\\f3f5\"}.bi-grid-3x2-gap::before{content:\"\\f3f6\"}.bi-grid-3x2::before{content:\"\\f3f7\"}.bi-grid-3x3-gap-fill::before{content:\"\\f3f8\"}.bi-grid-3x3-gap::before{content:\"\\f3f9\"}.bi-grid-3x3::before{content:\"\\f3fa\"}.bi-grid-fill::before{content:\"\\f3fb\"}.bi-grid::before{content:\"\\f3fc\"}.bi-grip-horizontal::before{content:\"\\f3fd\"}.bi-grip-vertical::before{content:\"\\f3fe\"}.bi-hammer::before{content:\"\\f3ff\"}.bi-hand-index-fill::before{content:\"\\f400\"}.bi-hand-index-thumb-fill::before{content:\"\\f401\"}.bi-hand-index-thumb::before{content:\"\\f402\"}.bi-hand-index::before{content:\"\\f403\"}.bi-hand-thumbs-down-fill::before{content:\"\\f404\"}.bi-hand-thumbs-down::before{content:\"\\f405\"}.bi-hand-thumbs-up-fill::before{content:\"\\f406\"}.bi-hand-thumbs-up::before{content:\"\\f407\"}.bi-handbag-fill::before{content:\"\\f408\"}.bi-handbag::before{content:\"\\f409\"}.bi-hash::before{content:\"\\f40a\"}.bi-hdd-fill::before{content:\"\\f40b\"}.bi-hdd-network-fill::before{content:\"\\f40c\"}.bi-hdd-network::before{content:\"\\f40d\"}.bi-hdd-rack-fill::before{content:\"\\f40e\"}.bi-hdd-rack::before{content:\"\\f40f\"}.bi-hdd-stack-fill::before{content:\"\\f410\"}.bi-hdd-stack::before{content:\"\\f411\"}.bi-hdd::before{content:\"\\f412\"}.bi-headphones::before{content:\"\\f413\"}.bi-headset::before{content:\"\\f414\"}.bi-heart-fill::before{content:\"\\f415\"}.bi-heart-half::before{content:\"\\f416\"}.bi-heart::before{content:\"\\f417\"}.bi-heptagon-fill::before{content:\"\\f418\"}.bi-heptagon-half::before{content:\"\\f419\"}.bi-heptagon::before{content:\"\\f41a\"}.bi-hexagon-fill::before{content:\"\\f41b\"}.bi-hexagon-half::before{content:\"\\f41c\"}.bi-hexagon::before{content:\"\\f41d\"}.bi-hourglass-bottom::before{content:\"\\f41e\"}.bi-hourglass-split::before{content:\"\\f41f\"}.bi-hourglass-top::before{content:\"\\f420\"}.bi-hourglass::before{content:\"\\f421\"}.bi-house-door-fill::before{content:\"\\f422\"}.bi-house-door::before{content:\"\\f423\"}.bi-house-fill::before{content:\"\\f424\"}.bi-house::before{content:\"\\f425\"}.bi-hr::before{content:\"\\f426\"}.bi-hurricane::before{content:\"\\f427\"}.bi-image-alt::before{content:\"\\f428\"}.bi-image-fill::before{content:\"\\f429\"}.bi-image::before{content:\"\\f42a\"}.bi-images::before{content:\"\\f42b\"}.bi-inbox-fill::before{content:\"\\f42c\"}.bi-inbox::before{content:\"\\f42d\"}.bi-inboxes-fill::before{content:\"\\f42e\"}.bi-inboxes::before{content:\"\\f42f\"}.bi-info-circle-fill::before{content:\"\\f430\"}.bi-info-circle::before{content:\"\\f431\"}.bi-info-square-fill::before{content:\"\\f432\"}.bi-info-square::before{content:\"\\f433\"}.bi-info::before{content:\"\\f434\"}.bi-input-cursor-text::before{content:\"\\f435\"}.bi-input-cursor::before{content:\"\\f436\"}.bi-instagram::before{content:\"\\f437\"}.bi-intersect::before{content:\"\\f438\"}.bi-journal-album::before{content:\"\\f439\"}.bi-journal-arrow-down::before{content:\"\\f43a\"}.bi-journal-arrow-up::before{content:\"\\f43b\"}.bi-journal-bookmark-fill::before{content:\"\\f43c\"}.bi-journal-bookmark::before{content:\"\\f43d\"}.bi-journal-check::before{content:\"\\f43e\"}.bi-journal-code::before{content:\"\\f43f\"}.bi-journal-medical::before{content:\"\\f440\"}.bi-journal-minus::before{content:\"\\f441\"}.bi-journal-plus::before{content:\"\\f442\"}.bi-journal-richtext::before{content:\"\\f443\"}.bi-journal-text::before{content:\"\\f444\"}.bi-journal-x::before{content:\"\\f445\"}.bi-journal::before{content:\"\\f446\"}.bi-journals::before{content:\"\\f447\"}.bi-joystick::before{content:\"\\f448\"}.bi-justify-left::before{content:\"\\f449\"}.bi-justify-right::before{content:\"\\f44a\"}.bi-justify::before{content:\"\\f44b\"}.bi-kanban-fill::before{content:\"\\f44c\"}.bi-kanban::before{content:\"\\f44d\"}.bi-key-fill::before{content:\"\\f44e\"}.bi-key::before{content:\"\\f44f\"}.bi-keyboard-fill::before{content:\"\\f450\"}.bi-keyboard::before{content:\"\\f451\"}.bi-ladder::before{content:\"\\f452\"}.bi-lamp-fill::before{content:\"\\f453\"}.bi-lamp::before{content:\"\\f454\"}.bi-laptop-fill::before{content:\"\\f455\"}.bi-laptop::before{content:\"\\f456\"}.bi-layer-backward::before{content:\"\\f457\"}.bi-layer-forward::before{content:\"\\f458\"}.bi-layers-fill::before{content:\"\\f459\"}.bi-layers-half::before{content:\"\\f45a\"}.bi-layers::before{content:\"\\f45b\"}.bi-layout-sidebar-inset-reverse::before{content:\"\\f45c\"}.bi-layout-sidebar-inset::before{content:\"\\f45d\"}.bi-layout-sidebar-reverse::before{content:\"\\f45e\"}.bi-layout-sidebar::before{content:\"\\f45f\"}.bi-layout-split::before{content:\"\\f460\"}.bi-layout-text-sidebar-reverse::before{content:\"\\f461\"}.bi-layout-text-sidebar::before{content:\"\\f462\"}.bi-layout-text-window-reverse::before{content:\"\\f463\"}.bi-layout-text-window::before{content:\"\\f464\"}.bi-layout-three-columns::before{content:\"\\f465\"}.bi-layout-wtf::before{content:\"\\f466\"}.bi-life-preserver::before{content:\"\\f467\"}.bi-lightbulb-fill::before{content:\"\\f468\"}.bi-lightbulb-off-fill::before{content:\"\\f469\"}.bi-lightbulb-off::before{content:\"\\f46a\"}.bi-lightbulb::before{content:\"\\f46b\"}.bi-lightning-charge-fill::before{content:\"\\f46c\"}.bi-lightning-charge::before{content:\"\\f46d\"}.bi-lightning-fill::before{content:\"\\f46e\"}.bi-lightning::before{content:\"\\f46f\"}.bi-link-45deg::before{content:\"\\f470\"}.bi-link::before{content:\"\\f471\"}.bi-linkedin::before{content:\"\\f472\"}.bi-list-check::before{content:\"\\f473\"}.bi-list-nested::before{content:\"\\f474\"}.bi-list-ol::before{content:\"\\f475\"}.bi-list-stars::before{content:\"\\f476\"}.bi-list-task::before{content:\"\\f477\"}.bi-list-ul::before{content:\"\\f478\"}.bi-list::before{content:\"\\f479\"}.bi-lock-fill::before{content:\"\\f47a\"}.bi-lock::before{content:\"\\f47b\"}.bi-mailbox::before{content:\"\\f47c\"}.bi-mailbox2::before{content:\"\\f47d\"}.bi-map-fill::before{content:\"\\f47e\"}.bi-map::before{content:\"\\f47f\"}.bi-markdown-fill::before{content:\"\\f480\"}.bi-markdown::before{content:\"\\f481\"}.bi-mask::before{content:\"\\f482\"}.bi-megaphone-fill::before{content:\"\\f483\"}.bi-megaphone::before{content:\"\\f484\"}.bi-menu-app-fill::before{content:\"\\f485\"}.bi-menu-app::before{content:\"\\f486\"}.bi-menu-button-fill::before{content:\"\\f487\"}.bi-menu-button-wide-fill::before{content:\"\\f488\"}.bi-menu-button-wide::before{content:\"\\f489\"}.bi-menu-button::before{content:\"\\f48a\"}.bi-menu-down::before{content:\"\\f48b\"}.bi-menu-up::before{content:\"\\f48c\"}.bi-mic-fill::before{content:\"\\f48d\"}.bi-mic-mute-fill::before{content:\"\\f48e\"}.bi-mic-mute::before{content:\"\\f48f\"}.bi-mic::before{content:\"\\f490\"}.bi-minecart-loaded::before{content:\"\\f491\"}.bi-minecart::before{content:\"\\f492\"}.bi-moisture::before{content:\"\\f493\"}.bi-moon-fill::before{content:\"\\f494\"}.bi-moon-stars-fill::before{content:\"\\f495\"}.bi-moon-stars::before{content:\"\\f496\"}.bi-moon::before{content:\"\\f497\"}.bi-mouse-fill::before{content:\"\\f498\"}.bi-mouse::before{content:\"\\f499\"}.bi-mouse2-fill::before{content:\"\\f49a\"}.bi-mouse2::before{content:\"\\f49b\"}.bi-mouse3-fill::before{content:\"\\f49c\"}.bi-mouse3::before{content:\"\\f49d\"}.bi-music-note-beamed::before{content:\"\\f49e\"}.bi-music-note-list::before{content:\"\\f49f\"}.bi-music-note::before{content:\"\\f4a0\"}.bi-music-player-fill::before{content:\"\\f4a1\"}.bi-music-player::before{content:\"\\f4a2\"}.bi-newspaper::before{content:\"\\f4a3\"}.bi-node-minus-fill::before{content:\"\\f4a4\"}.bi-node-minus::before{content:\"\\f4a5\"}.bi-node-plus-fill::before{content:\"\\f4a6\"}.bi-node-plus::before{content:\"\\f4a7\"}.bi-nut-fill::before{content:\"\\f4a8\"}.bi-nut::before{content:\"\\f4a9\"}.bi-octagon-fill::before{content:\"\\f4aa\"}.bi-octagon-half::before{content:\"\\f4ab\"}.bi-octagon::before{content:\"\\f4ac\"}.bi-option::before{content:\"\\f4ad\"}.bi-outlet::before{content:\"\\f4ae\"}.bi-paint-bucket::before{content:\"\\f4af\"}.bi-palette-fill::before{content:\"\\f4b0\"}.bi-palette::before{content:\"\\f4b1\"}.bi-palette2::before{content:\"\\f4b2\"}.bi-paperclip::before{content:\"\\f4b3\"}.bi-paragraph::before{content:\"\\f4b4\"}.bi-patch-check-fill::before{content:\"\\f4b5\"}.bi-patch-check::before{content:\"\\f4b6\"}.bi-patch-exclamation-fill::before{content:\"\\f4b7\"}.bi-patch-exclamation::before{content:\"\\f4b8\"}.bi-patch-minus-fill::before{content:\"\\f4b9\"}.bi-patch-minus::before{content:\"\\f4ba\"}.bi-patch-plus-fill::before{content:\"\\f4bb\"}.bi-patch-plus::before{content:\"\\f4bc\"}.bi-patch-question-fill::before{content:\"\\f4bd\"}.bi-patch-question::before{content:\"\\f4be\"}.bi-pause-btn-fill::before{content:\"\\f4bf\"}.bi-pause-btn::before{content:\"\\f4c0\"}.bi-pause-circle-fill::before{content:\"\\f4c1\"}.bi-pause-circle::before{content:\"\\f4c2\"}.bi-pause-fill::before{content:\"\\f4c3\"}.bi-pause::before{content:\"\\f4c4\"}.bi-peace-fill::before{content:\"\\f4c5\"}.bi-peace::before{content:\"\\f4c6\"}.bi-pen-fill::before{content:\"\\f4c7\"}.bi-pen::before{content:\"\\f4c8\"}.bi-pencil-fill::before{content:\"\\f4c9\"}.bi-pencil-square::before{content:\"\\f4ca\"}.bi-pencil::before{content:\"\\f4cb\"}.bi-pentagon-fill::before{content:\"\\f4cc\"}.bi-pentagon-half::before{content:\"\\f4cd\"}.bi-pentagon::before{content:\"\\f4ce\"}.bi-people-fill::before{content:\"\\f4cf\"}.bi-people::before{content:\"\\f4d0\"}.bi-percent::before{content:\"\\f4d1\"}.bi-person-badge-fill::before{content:\"\\f4d2\"}.bi-person-badge::before{content:\"\\f4d3\"}.bi-person-bounding-box::before{content:\"\\f4d4\"}.bi-person-check-fill::before{content:\"\\f4d5\"}.bi-person-check::before{content:\"\\f4d6\"}.bi-person-circle::before{content:\"\\f4d7\"}.bi-person-dash-fill::before{content:\"\\f4d8\"}.bi-person-dash::before{content:\"\\f4d9\"}.bi-person-fill::before{content:\"\\f4da\"}.bi-person-lines-fill::before{content:\"\\f4db\"}.bi-person-plus-fill::before{content:\"\\f4dc\"}.bi-person-plus::before{content:\"\\f4dd\"}.bi-person-square::before{content:\"\\f4de\"}.bi-person-x-fill::before{content:\"\\f4df\"}.bi-person-x::before{content:\"\\f4e0\"}.bi-person::before{content:\"\\f4e1\"}.bi-phone-fill::before{content:\"\\f4e2\"}.bi-phone-landscape-fill::before{content:\"\\f4e3\"}.bi-phone-landscape::before{content:\"\\f4e4\"}.bi-phone-vibrate-fill::before{content:\"\\f4e5\"}.bi-phone-vibrate::before{content:\"\\f4e6\"}.bi-phone::before{content:\"\\f4e7\"}.bi-pie-chart-fill::before{content:\"\\f4e8\"}.bi-pie-chart::before{content:\"\\f4e9\"}.bi-pin-angle-fill::before{content:\"\\f4ea\"}.bi-pin-angle::before{content:\"\\f4eb\"}.bi-pin-fill::before{content:\"\\f4ec\"}.bi-pin::before{content:\"\\f4ed\"}.bi-pip-fill::before{content:\"\\f4ee\"}.bi-pip::before{content:\"\\f4ef\"}.bi-play-btn-fill::before{content:\"\\f4f0\"}.bi-play-btn::before{content:\"\\f4f1\"}.bi-play-circle-fill::before{content:\"\\f4f2\"}.bi-play-circle::before{content:\"\\f4f3\"}.bi-play-fill::before{content:\"\\f4f4\"}.bi-play::before{content:\"\\f4f5\"}.bi-plug-fill::before{content:\"\\f4f6\"}.bi-plug::before{content:\"\\f4f7\"}.bi-plus-circle-dotted::before{content:\"\\f4f8\"}.bi-plus-circle-fill::before{content:\"\\f4f9\"}.bi-plus-circle::before{content:\"\\f4fa\"}.bi-plus-square-dotted::before{content:\"\\f4fb\"}.bi-plus-square-fill::before{content:\"\\f4fc\"}.bi-plus-square::before{content:\"\\f4fd\"}.bi-plus::before{content:\"\\f4fe\"}.bi-power::before{content:\"\\f4ff\"}.bi-printer-fill::before{content:\"\\f500\"}.bi-printer::before{content:\"\\f501\"}.bi-puzzle-fill::before{content:\"\\f502\"}.bi-puzzle::before{content:\"\\f503\"}.bi-question-circle-fill::before{content:\"\\f504\"}.bi-question-circle::before{content:\"\\f505\"}.bi-question-diamond-fill::before{content:\"\\f506\"}.bi-question-diamond::before{content:\"\\f507\"}.bi-question-octagon-fill::before{content:\"\\f508\"}.bi-question-octagon::before{content:\"\\f509\"}.bi-question-square-fill::before{content:\"\\f50a\"}.bi-question-square::before{content:\"\\f50b\"}.bi-question::before{content:\"\\f50c\"}.bi-rainbow::before{content:\"\\f50d\"}.bi-receipt-cutoff::before{content:\"\\f50e\"}.bi-receipt::before{content:\"\\f50f\"}.bi-reception-0::before{content:\"\\f510\"}.bi-reception-1::before{content:\"\\f511\"}.bi-reception-2::before{content:\"\\f512\"}.bi-reception-3::before{content:\"\\f513\"}.bi-reception-4::before{content:\"\\f514\"}.bi-record-btn-fill::before{content:\"\\f515\"}.bi-record-btn::before{content:\"\\f516\"}.bi-record-circle-fill::before{content:\"\\f517\"}.bi-record-circle::before{content:\"\\f518\"}.bi-record-fill::before{content:\"\\f519\"}.bi-record::before{content:\"\\f51a\"}.bi-record2-fill::before{content:\"\\f51b\"}.bi-record2::before{content:\"\\f51c\"}.bi-reply-all-fill::before{content:\"\\f51d\"}.bi-reply-all::before{content:\"\\f51e\"}.bi-reply-fill::before{content:\"\\f51f\"}.bi-reply::before{content:\"\\f520\"}.bi-rss-fill::before{content:\"\\f521\"}.bi-rss::before{content:\"\\f522\"}.bi-rulers::before{content:\"\\f523\"}.bi-save-fill::before{content:\"\\f524\"}.bi-save::before{content:\"\\f525\"}.bi-save2-fill::before{content:\"\\f526\"}.bi-save2::before{content:\"\\f527\"}.bi-scissors::before{content:\"\\f528\"}.bi-screwdriver::before{content:\"\\f529\"}.bi-search::before{content:\"\\f52a\"}.bi-segmented-nav::before{content:\"\\f52b\"}.bi-server::before{content:\"\\f52c\"}.bi-share-fill::before{content:\"\\f52d\"}.bi-share::before{content:\"\\f52e\"}.bi-shield-check::before{content:\"\\f52f\"}.bi-shield-exclamation::before{content:\"\\f530\"}.bi-shield-fill-check::before{content:\"\\f531\"}.bi-shield-fill-exclamation::before{content:\"\\f532\"}.bi-shield-fill-minus::before{content:\"\\f533\"}.bi-shield-fill-plus::before{content:\"\\f534\"}.bi-shield-fill-x::before{content:\"\\f535\"}.bi-shield-fill::before{content:\"\\f536\"}.bi-shield-lock-fill::before{content:\"\\f537\"}.bi-shield-lock::before{content:\"\\f538\"}.bi-shield-minus::before{content:\"\\f539\"}.bi-shield-plus::before{content:\"\\f53a\"}.bi-shield-shaded::before{content:\"\\f53b\"}.bi-shield-slash-fill::before{content:\"\\f53c\"}.bi-shield-slash::before{content:\"\\f53d\"}.bi-shield-x::before{content:\"\\f53e\"}.bi-shield::before{content:\"\\f53f\"}.bi-shift-fill::before{content:\"\\f540\"}.bi-shift::before{content:\"\\f541\"}.bi-shop-window::before{content:\"\\f542\"}.bi-shop::before{content:\"\\f543\"}.bi-shuffle::before{content:\"\\f544\"}.bi-signpost-2-fill::before{content:\"\\f545\"}.bi-signpost-2::before{content:\"\\f546\"}.bi-signpost-fill::before{content:\"\\f547\"}.bi-signpost-split-fill::before{content:\"\\f548\"}.bi-signpost-split::before{content:\"\\f549\"}.bi-signpost::before{content:\"\\f54a\"}.bi-sim-fill::before{content:\"\\f54b\"}.bi-sim::before{content:\"\\f54c\"}.bi-skip-backward-btn-fill::before{content:\"\\f54d\"}.bi-skip-backward-btn::before{content:\"\\f54e\"}.bi-skip-backward-circle-fill::before{content:\"\\f54f\"}.bi-skip-backward-circle::before{content:\"\\f550\"}.bi-skip-backward-fill::before{content:\"\\f551\"}.bi-skip-backward::before{content:\"\\f552\"}.bi-skip-end-btn-fill::before{content:\"\\f553\"}.bi-skip-end-btn::before{content:\"\\f554\"}.bi-skip-end-circle-fill::before{content:\"\\f555\"}.bi-skip-end-circle::before{content:\"\\f556\"}.bi-skip-end-fill::before{content:\"\\f557\"}.bi-skip-end::before{content:\"\\f558\"}.bi-skip-forward-btn-fill::before{content:\"\\f559\"}.bi-skip-forward-btn::before{content:\"\\f55a\"}.bi-skip-forward-circle-fill::before{content:\"\\f55b\"}.bi-skip-forward-circle::before{content:\"\\f55c\"}.bi-skip-forward-fill::before{content:\"\\f55d\"}.bi-skip-forward::before{content:\"\\f55e\"}.bi-skip-start-btn-fill::before{content:\"\\f55f\"}.bi-skip-start-btn::before{content:\"\\f560\"}.bi-skip-start-circle-fill::before{content:\"\\f561\"}.bi-skip-start-circle::before{content:\"\\f562\"}.bi-skip-start-fill::before{content:\"\\f563\"}.bi-skip-start::before{content:\"\\f564\"}.bi-slack::before{content:\"\\f565\"}.bi-slash-circle-fill::before{content:\"\\f566\"}.bi-slash-circle::before{content:\"\\f567\"}.bi-slash-square-fill::before{content:\"\\f568\"}.bi-slash-square::before{content:\"\\f569\"}.bi-slash::before{content:\"\\f56a\"}.bi-sliders::before{content:\"\\f56b\"}.bi-smartwatch::before{content:\"\\f56c\"}.bi-snow::before{content:\"\\f56d\"}.bi-snow2::before{content:\"\\f56e\"}.bi-snow3::before{content:\"\\f56f\"}.bi-sort-alpha-down-alt::before{content:\"\\f570\"}.bi-sort-alpha-down::before{content:\"\\f571\"}.bi-sort-alpha-up-alt::before{content:\"\\f572\"}.bi-sort-alpha-up::before{content:\"\\f573\"}.bi-sort-down-alt::before{content:\"\\f574\"}.bi-sort-down::before{content:\"\\f575\"}.bi-sort-numeric-down-alt::before{content:\"\\f576\"}.bi-sort-numeric-down::before{content:\"\\f577\"}.bi-sort-numeric-up-alt::before{content:\"\\f578\"}.bi-sort-numeric-up::before{content:\"\\f579\"}.bi-sort-up-alt::before{content:\"\\f57a\"}.bi-sort-up::before{content:\"\\f57b\"}.bi-soundwave::before{content:\"\\f57c\"}.bi-speaker-fill::before{content:\"\\f57d\"}.bi-speaker::before{content:\"\\f57e\"}.bi-speedometer::before{content:\"\\f57f\"}.bi-speedometer2::before{content:\"\\f580\"}.bi-spellcheck::before{content:\"\\f581\"}.bi-square-fill::before{content:\"\\f582\"}.bi-square-half::before{content:\"\\f583\"}.bi-square::before{content:\"\\f584\"}.bi-stack::before{content:\"\\f585\"}.bi-star-fill::before{content:\"\\f586\"}.bi-star-half::before{content:\"\\f587\"}.bi-star::before{content:\"\\f588\"}.bi-stars::before{content:\"\\f589\"}.bi-stickies-fill::before{content:\"\\f58a\"}.bi-stickies::before{content:\"\\f58b\"}.bi-sticky-fill::before{content:\"\\f58c\"}.bi-sticky::before{content:\"\\f58d\"}.bi-stop-btn-fill::before{content:\"\\f58e\"}.bi-stop-btn::before{content:\"\\f58f\"}.bi-stop-circle-fill::before{content:\"\\f590\"}.bi-stop-circle::before{content:\"\\f591\"}.bi-stop-fill::before{content:\"\\f592\"}.bi-stop::before{content:\"\\f593\"}.bi-stoplights-fill::before{content:\"\\f594\"}.bi-stoplights::before{content:\"\\f595\"}.bi-stopwatch-fill::before{content:\"\\f596\"}.bi-stopwatch::before{content:\"\\f597\"}.bi-subtract::before{content:\"\\f598\"}.bi-suit-club-fill::before{content:\"\\f599\"}.bi-suit-club::before{content:\"\\f59a\"}.bi-suit-diamond-fill::before{content:\"\\f59b\"}.bi-suit-diamond::before{content:\"\\f59c\"}.bi-suit-heart-fill::before{content:\"\\f59d\"}.bi-suit-heart::before{content:\"\\f59e\"}.bi-suit-spade-fill::before{content:\"\\f59f\"}.bi-suit-spade::before{content:\"\\f5a0\"}.bi-sun-fill::before{content:\"\\f5a1\"}.bi-sun::before{content:\"\\f5a2\"}.bi-sunglasses::before{content:\"\\f5a3\"}.bi-sunrise-fill::before{content:\"\\f5a4\"}.bi-sunrise::before{content:\"\\f5a5\"}.bi-sunset-fill::before{content:\"\\f5a6\"}.bi-sunset::before{content:\"\\f5a7\"}.bi-symmetry-horizontal::before{content:\"\\f5a8\"}.bi-symmetry-vertical::before{content:\"\\f5a9\"}.bi-table::before{content:\"\\f5aa\"}.bi-tablet-fill::before{content:\"\\f5ab\"}.bi-tablet-landscape-fill::before{content:\"\\f5ac\"}.bi-tablet-landscape::before{content:\"\\f5ad\"}.bi-tablet::before{content:\"\\f5ae\"}.bi-tag-fill::before{content:\"\\f5af\"}.bi-tag::before{content:\"\\f5b0\"}.bi-tags-fill::before{content:\"\\f5b1\"}.bi-tags::before{content:\"\\f5b2\"}.bi-telegram::before{content:\"\\f5b3\"}.bi-telephone-fill::before{content:\"\\f5b4\"}.bi-telephone-forward-fill::before{content:\"\\f5b5\"}.bi-telephone-forward::before{content:\"\\f5b6\"}.bi-telephone-inbound-fill::before{content:\"\\f5b7\"}.bi-telephone-inbound::before{content:\"\\f5b8\"}.bi-telephone-minus-fill::before{content:\"\\f5b9\"}.bi-telephone-minus::before{content:\"\\f5ba\"}.bi-telephone-outbound-fill::before{content:\"\\f5bb\"}.bi-telephone-outbound::before{content:\"\\f5bc\"}.bi-telephone-plus-fill::before{content:\"\\f5bd\"}.bi-telephone-plus::before{content:\"\\f5be\"}.bi-telephone-x-fill::before{content:\"\\f5bf\"}.bi-telephone-x::before{content:\"\\f5c0\"}.bi-telephone::before{content:\"\\f5c1\"}.bi-terminal-fill::before{content:\"\\f5c2\"}.bi-terminal::before{content:\"\\f5c3\"}.bi-text-center::before{content:\"\\f5c4\"}.bi-text-indent-left::before{content:\"\\f5c5\"}.bi-text-indent-right::before{content:\"\\f5c6\"}.bi-text-left::before{content:\"\\f5c7\"}.bi-text-paragraph::before{content:\"\\f5c8\"}.bi-text-right::before{content:\"\\f5c9\"}.bi-textarea-resize::before{content:\"\\f5ca\"}.bi-textarea-t::before{content:\"\\f5cb\"}.bi-textarea::before{content:\"\\f5cc\"}.bi-thermometer-half::before{content:\"\\f5cd\"}.bi-thermometer-high::before{content:\"\\f5ce\"}.bi-thermometer-low::before{content:\"\\f5cf\"}.bi-thermometer-snow::before{content:\"\\f5d0\"}.bi-thermometer-sun::before{content:\"\\f5d1\"}.bi-thermometer::before{content:\"\\f5d2\"}.bi-three-dots-vertical::before{content:\"\\f5d3\"}.bi-three-dots::before{content:\"\\f5d4\"}.bi-toggle-off::before{content:\"\\f5d5\"}.bi-toggle-on::before{content:\"\\f5d6\"}.bi-toggle2-off::before{content:\"\\f5d7\"}.bi-toggle2-on::before{content:\"\\f5d8\"}.bi-toggles::before{content:\"\\f5d9\"}.bi-toggles2::before{content:\"\\f5da\"}.bi-tools::before{content:\"\\f5db\"}.bi-tornado::before{content:\"\\f5dc\"}.bi-trash-fill::before{content:\"\\f5dd\"}.bi-trash::before{content:\"\\f5de\"}.bi-trash2-fill::before{content:\"\\f5df\"}.bi-trash2::before{content:\"\\f5e0\"}.bi-tree-fill::before{content:\"\\f5e1\"}.bi-tree::before{content:\"\\f5e2\"}.bi-triangle-fill::before{content:\"\\f5e3\"}.bi-triangle-half::before{content:\"\\f5e4\"}.bi-triangle::before{content:\"\\f5e5\"}.bi-trophy-fill::before{content:\"\\f5e6\"}.bi-trophy::before{content:\"\\f5e7\"}.bi-tropical-storm::before{content:\"\\f5e8\"}.bi-truck-flatbed::before{content:\"\\f5e9\"}.bi-truck::before{content:\"\\f5ea\"}.bi-tsunami::before{content:\"\\f5eb\"}.bi-tv-fill::before{content:\"\\f5ec\"}.bi-tv::before{content:\"\\f5ed\"}.bi-twitch::before{content:\"\\f5ee\"}.bi-twitter::before{content:\"\\f5ef\"}.bi-type-bold::before{content:\"\\f5f0\"}.bi-type-h1::before{content:\"\\f5f1\"}.bi-type-h2::before{content:\"\\f5f2\"}.bi-type-h3::before{content:\"\\f5f3\"}.bi-type-italic::before{content:\"\\f5f4\"}.bi-type-strikethrough::before{content:\"\\f5f5\"}.bi-type-underline::before{content:\"\\f5f6\"}.bi-type::before{content:\"\\f5f7\"}.bi-ui-checks-grid::before{content:\"\\f5f8\"}.bi-ui-checks::before{content:\"\\f5f9\"}.bi-ui-radios-grid::before{content:\"\\f5fa\"}.bi-ui-radios::before{content:\"\\f5fb\"}.bi-umbrella-fill::before{content:\"\\f5fc\"}.bi-umbrella::before{content:\"\\f5fd\"}.bi-union::before{content:\"\\f5fe\"}.bi-unlock-fill::before{content:\"\\f5ff\"}.bi-unlock::before{content:\"\\f600\"}.bi-upc-scan::before{content:\"\\f601\"}.bi-upc::before{content:\"\\f602\"}.bi-upload::before{content:\"\\f603\"}.bi-vector-pen::before{content:\"\\f604\"}.bi-view-list::before{content:\"\\f605\"}.bi-view-stacked::before{content:\"\\f606\"}.bi-vinyl-fill::before{content:\"\\f607\"}.bi-vinyl::before{content:\"\\f608\"}.bi-voicemail::before{content:\"\\f609\"}.bi-volume-down-fill::before{content:\"\\f60a\"}.bi-volume-down::before{content:\"\\f60b\"}.bi-volume-mute-fill::before{content:\"\\f60c\"}.bi-volume-mute::before{content:\"\\f60d\"}.bi-volume-off-fill::before{content:\"\\f60e\"}.bi-volume-off::before{content:\"\\f60f\"}.bi-volume-up-fill::before{content:\"\\f610\"}.bi-volume-up::before{content:\"\\f611\"}.bi-vr::before{content:\"\\f612\"}.bi-wallet-fill::before{content:\"\\f613\"}.bi-wallet::before{content:\"\\f614\"}.bi-wallet2::before{content:\"\\f615\"}.bi-watch::before{content:\"\\f616\"}.bi-water::before{content:\"\\f617\"}.bi-whatsapp::before{content:\"\\f618\"}.bi-wifi-1::before{content:\"\\f619\"}.bi-wifi-2::before{content:\"\\f61a\"}.bi-wifi-off::before{content:\"\\f61b\"}.bi-wifi::before{content:\"\\f61c\"}.bi-wind::before{content:\"\\f61d\"}.bi-window-dock::before{content:\"\\f61e\"}.bi-window-sidebar::before{content:\"\\f61f\"}.bi-window::before{content:\"\\f620\"}.bi-wrench::before{content:\"\\f621\"}.bi-x-circle-fill::before{content:\"\\f622\"}.bi-x-circle::before{content:\"\\f623\"}.bi-x-diamond-fill::before{content:\"\\f624\"}.bi-x-diamond::before{content:\"\\f625\"}.bi-x-octagon-fill::before{content:\"\\f626\"}.bi-x-octagon::before{content:\"\\f627\"}.bi-x-square-fill::before{content:\"\\f628\"}.bi-x-square::before{content:\"\\f629\"}.bi-x::before{content:\"\\f62a\"}.bi-youtube::before{content:\"\\f62b\"}.bi-zoom-in::before{content:\"\\f62c\"}.bi-zoom-out::before{content:\"\\f62d\"}.bi-bank::before{content:\"\\f62e\"}.bi-bank2::before{content:\"\\f62f\"}.bi-bell-slash-fill::before{content:\"\\f630\"}.bi-bell-slash::before{content:\"\\f631\"}.bi-cash-coin::before{content:\"\\f632\"}.bi-check-lg::before{content:\"\\f633\"}.bi-coin::before{content:\"\\f634\"}.bi-currency-bitcoin::before{content:\"\\f635\"}.bi-currency-dollar::before{content:\"\\f636\"}.bi-currency-euro::before{content:\"\\f637\"}.bi-currency-exchange::before{content:\"\\f638\"}.bi-currency-pound::before{content:\"\\f639\"}.bi-currency-yen::before{content:\"\\f63a\"}.bi-dash-lg::before{content:\"\\f63b\"}.bi-exclamation-lg::before{content:\"\\f63c\"}.bi-file-earmark-pdf-fill::before{content:\"\\f63d\"}.bi-file-earmark-pdf::before{content:\"\\f63e\"}.bi-file-pdf-fill::before{content:\"\\f63f\"}.bi-file-pdf::before{content:\"\\f640\"}.bi-gender-ambiguous::before{content:\"\\f641\"}.bi-gender-female::before{content:\"\\f642\"}.bi-gender-male::before{content:\"\\f643\"}.bi-gender-trans::before{content:\"\\f644\"}.bi-headset-vr::before{content:\"\\f645\"}.bi-info-lg::before{content:\"\\f646\"}.bi-mastodon::before{content:\"\\f647\"}.bi-messenger::before{content:\"\\f648\"}.bi-piggy-bank-fill::before{content:\"\\f649\"}.bi-piggy-bank::before{content:\"\\f64a\"}.bi-pin-map-fill::before{content:\"\\f64b\"}.bi-pin-map::before{content:\"\\f64c\"}.bi-plus-lg::before{content:\"\\f64d\"}.bi-question-lg::before{content:\"\\f64e\"}.bi-recycle::before{content:\"\\f64f\"}.bi-reddit::before{content:\"\\f650\"}.bi-safe-fill::before{content:\"\\f651\"}.bi-safe2-fill::before{content:\"\\f652\"}.bi-safe2::before{content:\"\\f653\"}.bi-sd-card-fill::before{content:\"\\f654\"}.bi-sd-card::before{content:\"\\f655\"}.bi-skype::before{content:\"\\f656\"}.bi-slash-lg::before{content:\"\\f657\"}.bi-translate::before{content:\"\\f658\"}.bi-x-lg::before{content:\"\\f659\"}.bi-safe::before{content:\"\\f65a\"}.bi-apple::before{content:\"\\f65b\"}.bi-microsoft::before{content:\"\\f65d\"}.bi-windows::before{content:\"\\f65e\"}.bi-behance::before{content:\"\\f65c\"}.bi-dribbble::before{content:\"\\f65f\"}.bi-line::before{content:\"\\f660\"}.bi-medium::before{content:\"\\f661\"}.bi-paypal::before{content:\"\\f662\"}.bi-pinterest::before{content:\"\\f663\"}.bi-signal::before{content:\"\\f664\"}.bi-snapchat::before{content:\"\\f665\"}.bi-spotify::before{content:\"\\f666\"}.bi-stack-overflow::before{content:\"\\f667\"}.bi-strava::before{content:\"\\f668\"}.bi-wordpress::before{content:\"\\f669\"}.bi-vimeo::before{content:\"\\f66a\"}.bi-activity::before{content:\"\\f66b\"}.bi-easel2-fill::before{content:\"\\f66c\"}.bi-easel2::before{content:\"\\f66d\"}.bi-easel3-fill::before{content:\"\\f66e\"}.bi-easel3::before{content:\"\\f66f\"}.bi-fan::before{content:\"\\f670\"}.bi-fingerprint::before{content:\"\\f671\"}.bi-graph-down-arrow::before{content:\"\\f672\"}.bi-graph-up-arrow::before{content:\"\\f673\"}.bi-hypnotize::before{content:\"\\f674\"}.bi-magic::before{content:\"\\f675\"}.bi-person-rolodex::before{content:\"\\f676\"}.bi-person-video::before{content:\"\\f677\"}.bi-person-video2::before{content:\"\\f678\"}.bi-person-video3::before{content:\"\\f679\"}.bi-person-workspace::before{content:\"\\f67a\"}.bi-radioactive::before{content:\"\\f67b\"}.bi-webcam-fill::before{content:\"\\f67c\"}.bi-webcam::before{content:\"\\f67d\"}.bi-yin-yang::before{content:\"\\f67e\"}.bi-bandaid-fill::before{content:\"\\f680\"}.bi-bandaid::before{content:\"\\f681\"}.bi-bluetooth::before{content:\"\\f682\"}.bi-body-text::before{content:\"\\f683\"}.bi-boombox::before{content:\"\\f684\"}.bi-boxes::before{content:\"\\f685\"}.bi-dpad-fill::before{content:\"\\f686\"}.bi-dpad::before{content:\"\\f687\"}.bi-ear-fill::before{content:\"\\f688\"}.bi-ear::before{content:\"\\f689\"}.bi-envelope-check-fill::before{content:\"\\f68b\"}.bi-envelope-check::before{content:\"\\f68c\"}.bi-envelope-dash-fill::before{content:\"\\f68e\"}.bi-envelope-dash::before{content:\"\\f68f\"}.bi-envelope-exclamation-fill::before{content:\"\\f691\"}.bi-envelope-exclamation::before{content:\"\\f692\"}.bi-envelope-plus-fill::before{content:\"\\f693\"}.bi-envelope-plus::before{content:\"\\f694\"}.bi-envelope-slash-fill::before{content:\"\\f696\"}.bi-envelope-slash::before{content:\"\\f697\"}.bi-envelope-x-fill::before{content:\"\\f699\"}.bi-envelope-x::before{content:\"\\f69a\"}.bi-explicit-fill::before{content:\"\\f69b\"}.bi-explicit::before{content:\"\\f69c\"}.bi-git::before{content:\"\\f69d\"}.bi-infinity::before{content:\"\\f69e\"}.bi-list-columns-reverse::before{content:\"\\f69f\"}.bi-list-columns::before{content:\"\\f6a0\"}.bi-meta::before{content:\"\\f6a1\"}.bi-nintendo-switch::before{content:\"\\f6a4\"}.bi-pc-display-horizontal::before{content:\"\\f6a5\"}.bi-pc-display::before{content:\"\\f6a6\"}.bi-pc-horizontal::before{content:\"\\f6a7\"}.bi-pc::before{content:\"\\f6a8\"}.bi-playstation::before{content:\"\\f6a9\"}.bi-plus-slash-minus::before{content:\"\\f6aa\"}.bi-projector-fill::before{content:\"\\f6ab\"}.bi-projector::before{content:\"\\f6ac\"}.bi-qr-code-scan::before{content:\"\\f6ad\"}.bi-qr-code::before{content:\"\\f6ae\"}.bi-quora::before{content:\"\\f6af\"}.bi-quote::before{content:\"\\f6b0\"}.bi-robot::before{content:\"\\f6b1\"}.bi-send-check-fill::before{content:\"\\f6b2\"}.bi-send-check::before{content:\"\\f6b3\"}.bi-send-dash-fill::before{content:\"\\f6b4\"}.bi-send-dash::before{content:\"\\f6b5\"}.bi-send-exclamation-fill::before{content:\"\\f6b7\"}.bi-send-exclamation::before{content:\"\\f6b8\"}.bi-send-fill::before{content:\"\\f6b9\"}.bi-send-plus-fill::before{content:\"\\f6ba\"}.bi-send-plus::before{content:\"\\f6bb\"}.bi-send-slash-fill::before{content:\"\\f6bc\"}.bi-send-slash::before{content:\"\\f6bd\"}.bi-send-x-fill::before{content:\"\\f6be\"}.bi-send-x::before{content:\"\\f6bf\"}.bi-send::before{content:\"\\f6c0\"}.bi-steam::before{content:\"\\f6c1\"}.bi-terminal-dash::before{content:\"\\f6c3\"}.bi-terminal-plus::before{content:\"\\f6c4\"}.bi-terminal-split::before{content:\"\\f6c5\"}.bi-ticket-detailed-fill::before{content:\"\\f6c6\"}.bi-ticket-detailed::before{content:\"\\f6c7\"}.bi-ticket-fill::before{content:\"\\f6c8\"}.bi-ticket-perforated-fill::before{content:\"\\f6c9\"}.bi-ticket-perforated::before{content:\"\\f6ca\"}.bi-ticket::before{content:\"\\f6cb\"}.bi-tiktok::before{content:\"\\f6cc\"}.bi-window-dash::before{content:\"\\f6cd\"}.bi-window-desktop::before{content:\"\\f6ce\"}.bi-window-fullscreen::before{content:\"\\f6cf\"}.bi-window-plus::before{content:\"\\f6d0\"}.bi-window-split::before{content:\"\\f6d1\"}.bi-window-stack::before{content:\"\\f6d2\"}.bi-window-x::before{content:\"\\f6d3\"}.bi-xbox::before{content:\"\\f6d4\"}.bi-ethernet::before{content:\"\\f6d5\"}.bi-hdmi-fill::before{content:\"\\f6d6\"}.bi-hdmi::before{content:\"\\f6d7\"}.bi-usb-c-fill::before{content:\"\\f6d8\"}.bi-usb-c::before{content:\"\\f6d9\"}.bi-usb-fill::before{content:\"\\f6da\"}.bi-usb-plug-fill::before{content:\"\\f6db\"}.bi-usb-plug::before{content:\"\\f6dc\"}.bi-usb-symbol::before{content:\"\\f6dd\"}.bi-usb::before{content:\"\\f6de\"}.bi-boombox-fill::before{content:\"\\f6df\"}.bi-displayport::before{content:\"\\f6e1\"}.bi-gpu-card::before{content:\"\\f6e2\"}.bi-memory::before{content:\"\\f6e3\"}.bi-modem-fill::before{content:\"\\f6e4\"}.bi-modem::before{content:\"\\f6e5\"}.bi-motherboard-fill::before{content:\"\\f6e6\"}.bi-motherboard::before{content:\"\\f6e7\"}.bi-optical-audio-fill::before{content:\"\\f6e8\"}.bi-optical-audio::before{content:\"\\f6e9\"}.bi-pci-card::before{content:\"\\f6ea\"}.bi-router-fill::before{content:\"\\f6eb\"}.bi-router::before{content:\"\\f6ec\"}.bi-thunderbolt-fill::before{content:\"\\f6ef\"}.bi-thunderbolt::before{content:\"\\f6f0\"}.bi-usb-drive-fill::before{content:\"\\f6f1\"}.bi-usb-drive::before{content:\"\\f6f2\"}.bi-usb-micro-fill::before{content:\"\\f6f3\"}.bi-usb-micro::before{content:\"\\f6f4\"}.bi-usb-mini-fill::before{content:\"\\f6f5\"}.bi-usb-mini::before{content:\"\\f6f6\"}.bi-cloud-haze2::before{content:\"\\f6f7\"}.bi-device-hdd-fill::before{content:\"\\f6f8\"}.bi-device-hdd::before{content:\"\\f6f9\"}.bi-device-ssd-fill::before{content:\"\\f6fa\"}.bi-device-ssd::before{content:\"\\f6fb\"}.bi-displayport-fill::before{content:\"\\f6fc\"}.bi-mortarboard-fill::before{content:\"\\f6fd\"}.bi-mortarboard::before{content:\"\\f6fe\"}.bi-terminal-x::before{content:\"\\f6ff\"}.bi-arrow-through-heart-fill::before{content:\"\\f700\"}.bi-arrow-through-heart::before{content:\"\\f701\"}.bi-badge-sd-fill::before{content:\"\\f702\"}.bi-badge-sd::before{content:\"\\f703\"}.bi-bag-heart-fill::before{content:\"\\f704\"}.bi-bag-heart::before{content:\"\\f705\"}.bi-balloon-fill::before{content:\"\\f706\"}.bi-balloon-heart-fill::before{content:\"\\f707\"}.bi-balloon-heart::before{content:\"\\f708\"}.bi-balloon::before{content:\"\\f709\"}.bi-box2-fill::before{content:\"\\f70a\"}.bi-box2-heart-fill::before{content:\"\\f70b\"}.bi-box2-heart::before{content:\"\\f70c\"}.bi-box2::before{content:\"\\f70d\"}.bi-braces-asterisk::before{content:\"\\f70e\"}.bi-calendar-heart-fill::before{content:\"\\f70f\"}.bi-calendar-heart::before{content:\"\\f710\"}.bi-calendar2-heart-fill::before{content:\"\\f711\"}.bi-calendar2-heart::before{content:\"\\f712\"}.bi-chat-heart-fill::before{content:\"\\f713\"}.bi-chat-heart::before{content:\"\\f714\"}.bi-chat-left-heart-fill::before{content:\"\\f715\"}.bi-chat-left-heart::before{content:\"\\f716\"}.bi-chat-right-heart-fill::before{content:\"\\f717\"}.bi-chat-right-heart::before{content:\"\\f718\"}.bi-chat-square-heart-fill::before{content:\"\\f719\"}.bi-chat-square-heart::before{content:\"\\f71a\"}.bi-clipboard-check-fill::before{content:\"\\f71b\"}.bi-clipboard-data-fill::before{content:\"\\f71c\"}.bi-clipboard-fill::before{content:\"\\f71d\"}.bi-clipboard-heart-fill::before{content:\"\\f71e\"}.bi-clipboard-heart::before{content:\"\\f71f\"}.bi-clipboard-minus-fill::before{content:\"\\f720\"}.bi-clipboard-plus-fill::before{content:\"\\f721\"}.bi-clipboard-pulse::before{content:\"\\f722\"}.bi-clipboard-x-fill::before{content:\"\\f723\"}.bi-clipboard2-check-fill::before{content:\"\\f724\"}.bi-clipboard2-check::before{content:\"\\f725\"}.bi-clipboard2-data-fill::before{content:\"\\f726\"}.bi-clipboard2-data::before{content:\"\\f727\"}.bi-clipboard2-fill::before{content:\"\\f728\"}.bi-clipboard2-heart-fill::before{content:\"\\f729\"}.bi-clipboard2-heart::before{content:\"\\f72a\"}.bi-clipboard2-minus-fill::before{content:\"\\f72b\"}.bi-clipboard2-minus::before{content:\"\\f72c\"}.bi-clipboard2-plus-fill::before{content:\"\\f72d\"}.bi-clipboard2-plus::before{content:\"\\f72e\"}.bi-clipboard2-pulse-fill::before{content:\"\\f72f\"}.bi-clipboard2-pulse::before{content:\"\\f730\"}.bi-clipboard2-x-fill::before{content:\"\\f731\"}.bi-clipboard2-x::before{content:\"\\f732\"}.bi-clipboard2::before{content:\"\\f733\"}.bi-emoji-kiss-fill::before{content:\"\\f734\"}.bi-emoji-kiss::before{content:\"\\f735\"}.bi-envelope-heart-fill::before{content:\"\\f736\"}.bi-envelope-heart::before{content:\"\\f737\"}.bi-envelope-open-heart-fill::before{content:\"\\f738\"}.bi-envelope-open-heart::before{content:\"\\f739\"}.bi-envelope-paper-fill::before{content:\"\\f73a\"}.bi-envelope-paper-heart-fill::before{content:\"\\f73b\"}.bi-envelope-paper-heart::before{content:\"\\f73c\"}.bi-envelope-paper::before{content:\"\\f73d\"}.bi-filetype-aac::before{content:\"\\f73e\"}.bi-filetype-ai::before{content:\"\\f73f\"}.bi-filetype-bmp::before{content:\"\\f740\"}.bi-filetype-cs::before{content:\"\\f741\"}.bi-filetype-css::before{content:\"\\f742\"}.bi-filetype-csv::before{content:\"\\f743\"}.bi-filetype-doc::before{content:\"\\f744\"}.bi-filetype-docx::before{content:\"\\f745\"}.bi-filetype-exe::before{content:\"\\f746\"}.bi-filetype-gif::before{content:\"\\f747\"}.bi-filetype-heic::before{content:\"\\f748\"}.bi-filetype-html::before{content:\"\\f749\"}.bi-filetype-java::before{content:\"\\f74a\"}.bi-filetype-jpg::before{content:\"\\f74b\"}.bi-filetype-js::before{content:\"\\f74c\"}.bi-filetype-jsx::before{content:\"\\f74d\"}.bi-filetype-key::before{content:\"\\f74e\"}.bi-filetype-m4p::before{content:\"\\f74f\"}.bi-filetype-md::before{content:\"\\f750\"}.bi-filetype-mdx::before{content:\"\\f751\"}.bi-filetype-mov::before{content:\"\\f752\"}.bi-filetype-mp3::before{content:\"\\f753\"}.bi-filetype-mp4::before{content:\"\\f754\"}.bi-filetype-otf::before{content:\"\\f755\"}.bi-filetype-pdf::before{content:\"\\f756\"}.bi-filetype-php::before{content:\"\\f757\"}.bi-filetype-png::before{content:\"\\f758\"}.bi-filetype-ppt::before{content:\"\\f75a\"}.bi-filetype-psd::before{content:\"\\f75b\"}.bi-filetype-py::before{content:\"\\f75c\"}.bi-filetype-raw::before{content:\"\\f75d\"}.bi-filetype-rb::before{content:\"\\f75e\"}.bi-filetype-sass::before{content:\"\\f75f\"}.bi-filetype-scss::before{content:\"\\f760\"}.bi-filetype-sh::before{content:\"\\f761\"}.bi-filetype-svg::before{content:\"\\f762\"}.bi-filetype-tiff::before{content:\"\\f763\"}.bi-filetype-tsx::before{content:\"\\f764\"}.bi-filetype-ttf::before{content:\"\\f765\"}.bi-filetype-txt::before{content:\"\\f766\"}.bi-filetype-wav::before{content:\"\\f767\"}.bi-filetype-woff::before{content:\"\\f768\"}.bi-filetype-xls::before{content:\"\\f76a\"}.bi-filetype-xml::before{content:\"\\f76b\"}.bi-filetype-yml::before{content:\"\\f76c\"}.bi-heart-arrow::before{content:\"\\f76d\"}.bi-heart-pulse-fill::before{content:\"\\f76e\"}.bi-heart-pulse::before{content:\"\\f76f\"}.bi-heartbreak-fill::before{content:\"\\f770\"}.bi-heartbreak::before{content:\"\\f771\"}.bi-hearts::before{content:\"\\f772\"}.bi-hospital-fill::before{content:\"\\f773\"}.bi-hospital::before{content:\"\\f774\"}.bi-house-heart-fill::before{content:\"\\f775\"}.bi-house-heart::before{content:\"\\f776\"}.bi-incognito::before{content:\"\\f777\"}.bi-magnet-fill::before{content:\"\\f778\"}.bi-magnet::before{content:\"\\f779\"}.bi-person-heart::before{content:\"\\f77a\"}.bi-person-hearts::before{content:\"\\f77b\"}.bi-phone-flip::before{content:\"\\f77c\"}.bi-plugin::before{content:\"\\f77d\"}.bi-postage-fill::before{content:\"\\f77e\"}.bi-postage-heart-fill::before{content:\"\\f77f\"}.bi-postage-heart::before{content:\"\\f780\"}.bi-postage::before{content:\"\\f781\"}.bi-postcard-fill::before{content:\"\\f782\"}.bi-postcard-heart-fill::before{content:\"\\f783\"}.bi-postcard-heart::before{content:\"\\f784\"}.bi-postcard::before{content:\"\\f785\"}.bi-search-heart-fill::before{content:\"\\f786\"}.bi-search-heart::before{content:\"\\f787\"}.bi-sliders2-vertical::before{content:\"\\f788\"}.bi-sliders2::before{content:\"\\f789\"}.bi-trash3-fill::before{content:\"\\f78a\"}.bi-trash3::before{content:\"\\f78b\"}.bi-valentine::before{content:\"\\f78c\"}.bi-valentine2::before{content:\"\\f78d\"}.bi-wrench-adjustable-circle-fill::before{content:\"\\f78e\"}.bi-wrench-adjustable-circle::before{content:\"\\f78f\"}.bi-wrench-adjustable::before{content:\"\\f790\"}.bi-filetype-json::before{content:\"\\f791\"}.bi-filetype-pptx::before{content:\"\\f792\"}.bi-filetype-xlsx::before{content:\"\\f793\"}.bi-1-circle-fill::before{content:\"\\f796\"}.bi-1-circle::before{content:\"\\f797\"}.bi-1-square-fill::before{content:\"\\f798\"}.bi-1-square::before{content:\"\\f799\"}.bi-2-circle-fill::before{content:\"\\f79c\"}.bi-2-circle::before{content:\"\\f79d\"}.bi-2-square-fill::before{content:\"\\f79e\"}.bi-2-square::before{content:\"\\f79f\"}.bi-3-circle-fill::before{content:\"\\f7a2\"}.bi-3-circle::before{content:\"\\f7a3\"}.bi-3-square-fill::before{content:\"\\f7a4\"}.bi-3-square::before{content:\"\\f7a5\"}.bi-4-circle-fill::before{content:\"\\f7a8\"}.bi-4-circle::before{content:\"\\f7a9\"}.bi-4-square-fill::before{content:\"\\f7aa\"}.bi-4-square::before{content:\"\\f7ab\"}.bi-5-circle-fill::before{content:\"\\f7ae\"}.bi-5-circle::before{content:\"\\f7af\"}.bi-5-square-fill::before{content:\"\\f7b0\"}.bi-5-square::before{content:\"\\f7b1\"}.bi-6-circle-fill::before{content:\"\\f7b4\"}.bi-6-circle::before{content:\"\\f7b5\"}.bi-6-square-fill::before{content:\"\\f7b6\"}.bi-6-square::before{content:\"\\f7b7\"}.bi-7-circle-fill::before{content:\"\\f7ba\"}.bi-7-circle::before{content:\"\\f7bb\"}.bi-7-square-fill::before{content:\"\\f7bc\"}.bi-7-square::before{content:\"\\f7bd\"}.bi-8-circle-fill::before{content:\"\\f7c0\"}.bi-8-circle::before{content:\"\\f7c1\"}.bi-8-square-fill::before{content:\"\\f7c2\"}.bi-8-square::before{content:\"\\f7c3\"}.bi-9-circle-fill::before{content:\"\\f7c6\"}.bi-9-circle::before{content:\"\\f7c7\"}.bi-9-square-fill::before{content:\"\\f7c8\"}.bi-9-square::before{content:\"\\f7c9\"}.bi-airplane-engines-fill::before{content:\"\\f7ca\"}.bi-airplane-engines::before{content:\"\\f7cb\"}.bi-airplane-fill::before{content:\"\\f7cc\"}.bi-airplane::before{content:\"\\f7cd\"}.bi-alexa::before{content:\"\\f7ce\"}.bi-alipay::before{content:\"\\f7cf\"}.bi-android::before{content:\"\\f7d0\"}.bi-android2::before{content:\"\\f7d1\"}.bi-box-fill::before{content:\"\\f7d2\"}.bi-box-seam-fill::before{content:\"\\f7d3\"}.bi-browser-chrome::before{content:\"\\f7d4\"}.bi-browser-edge::before{content:\"\\f7d5\"}.bi-browser-firefox::before{content:\"\\f7d6\"}.bi-browser-safari::before{content:\"\\f7d7\"}.bi-c-circle-fill::before{content:\"\\f7da\"}.bi-c-circle::before{content:\"\\f7db\"}.bi-c-square-fill::before{content:\"\\f7dc\"}.bi-c-square::before{content:\"\\f7dd\"}.bi-capsule-pill::before{content:\"\\f7de\"}.bi-capsule::before{content:\"\\f7df\"}.bi-car-front-fill::before{content:\"\\f7e0\"}.bi-car-front::before{content:\"\\f7e1\"}.bi-cassette-fill::before{content:\"\\f7e2\"}.bi-cassette::before{content:\"\\f7e3\"}.bi-cc-circle-fill::before{content:\"\\f7e6\"}.bi-cc-circle::before{content:\"\\f7e7\"}.bi-cc-square-fill::before{content:\"\\f7e8\"}.bi-cc-square::before{content:\"\\f7e9\"}.bi-cup-hot-fill::before{content:\"\\f7ea\"}.bi-cup-hot::before{content:\"\\f7eb\"}.bi-currency-rupee::before{content:\"\\f7ec\"}.bi-dropbox::before{content:\"\\f7ed\"}.bi-escape::before{content:\"\\f7ee\"}.bi-fast-forward-btn-fill::before{content:\"\\f7ef\"}.bi-fast-forward-btn::before{content:\"\\f7f0\"}.bi-fast-forward-circle-fill::before{content:\"\\f7f1\"}.bi-fast-forward-circle::before{content:\"\\f7f2\"}.bi-fast-forward-fill::before{content:\"\\f7f3\"}.bi-fast-forward::before{content:\"\\f7f4\"}.bi-filetype-sql::before{content:\"\\f7f5\"}.bi-fire::before{content:\"\\f7f6\"}.bi-google-play::before{content:\"\\f7f7\"}.bi-h-circle-fill::before{content:\"\\f7fa\"}.bi-h-circle::before{content:\"\\f7fb\"}.bi-h-square-fill::before{content:\"\\f7fc\"}.bi-h-square::before{content:\"\\f7fd\"}.bi-indent::before{content:\"\\f7fe\"}.bi-lungs-fill::before{content:\"\\f7ff\"}.bi-lungs::before{content:\"\\f800\"}.bi-microsoft-teams::before{content:\"\\f801\"}.bi-p-circle-fill::before{content:\"\\f804\"}.bi-p-circle::before{content:\"\\f805\"}.bi-p-square-fill::before{content:\"\\f806\"}.bi-p-square::before{content:\"\\f807\"}.bi-pass-fill::before{content:\"\\f808\"}.bi-pass::before{content:\"\\f809\"}.bi-prescription::before{content:\"\\f80a\"}.bi-prescription2::before{content:\"\\f80b\"}.bi-r-circle-fill::before{content:\"\\f80e\"}.bi-r-circle::before{content:\"\\f80f\"}.bi-r-square-fill::before{content:\"\\f810\"}.bi-r-square::before{content:\"\\f811\"}.bi-repeat-1::before{content:\"\\f812\"}.bi-repeat::before{content:\"\\f813\"}.bi-rewind-btn-fill::before{content:\"\\f814\"}.bi-rewind-btn::before{content:\"\\f815\"}.bi-rewind-circle-fill::before{content:\"\\f816\"}.bi-rewind-circle::before{content:\"\\f817\"}.bi-rewind-fill::before{content:\"\\f818\"}.bi-rewind::before{content:\"\\f819\"}.bi-train-freight-front-fill::before{content:\"\\f81a\"}.bi-train-freight-front::before{content:\"\\f81b\"}.bi-train-front-fill::before{content:\"\\f81c\"}.bi-train-front::before{content:\"\\f81d\"}.bi-train-lightrail-front-fill::before{content:\"\\f81e\"}.bi-train-lightrail-front::before{content:\"\\f81f\"}.bi-truck-front-fill::before{content:\"\\f820\"}.bi-truck-front::before{content:\"\\f821\"}.bi-ubuntu::before{content:\"\\f822\"}.bi-unindent::before{content:\"\\f823\"}.bi-unity::before{content:\"\\f824\"}.bi-universal-access-circle::before{content:\"\\f825\"}.bi-universal-access::before{content:\"\\f826\"}.bi-virus::before{content:\"\\f827\"}.bi-virus2::before{content:\"\\f828\"}.bi-wechat::before{content:\"\\f829\"}.bi-yelp::before{content:\"\\f82a\"}.bi-sign-stop-fill::before{content:\"\\f82b\"}.bi-sign-stop-lights-fill::before{content:\"\\f82c\"}.bi-sign-stop-lights::before{content:\"\\f82d\"}.bi-sign-stop::before{content:\"\\f82e\"}.bi-sign-turn-left-fill::before{content:\"\\f82f\"}.bi-sign-turn-left::before{content:\"\\f830\"}.bi-sign-turn-right-fill::before{content:\"\\f831\"}.bi-sign-turn-right::before{content:\"\\f832\"}.bi-sign-turn-slight-left-fill::before{content:\"\\f833\"}.bi-sign-turn-slight-left::before{content:\"\\f834\"}.bi-sign-turn-slight-right-fill::before{content:\"\\f835\"}.bi-sign-turn-slight-right::before{content:\"\\f836\"}.bi-sign-yield-fill::before{content:\"\\f837\"}.bi-sign-yield::before{content:\"\\f838\"}.bi-ev-station-fill::before{content:\"\\f839\"}.bi-ev-station::before{content:\"\\f83a\"}.bi-fuel-pump-diesel-fill::before{content:\"\\f83b\"}.bi-fuel-pump-diesel::before{content:\"\\f83c\"}.bi-fuel-pump-fill::before{content:\"\\f83d\"}.bi-fuel-pump::before{content:\"\\f83e\"}.bi-0-circle-fill::before{content:\"\\f83f\"}.bi-0-circle::before{content:\"\\f840\"}.bi-0-square-fill::before{content:\"\\f841\"}.bi-0-square::before{content:\"\\f842\"}.bi-rocket-fill::before{content:\"\\f843\"}.bi-rocket-takeoff-fill::before{content:\"\\f844\"}.bi-rocket-takeoff::before{content:\"\\f845\"}.bi-rocket::before{content:\"\\f846\"}.bi-stripe::before{content:\"\\f847\"}.bi-subscript::before{content:\"\\f848\"}.bi-superscript::before{content:\"\\f849\"}.bi-trello::before{content:\"\\f84a\"}.bi-envelope-at-fill::before{content:\"\\f84b\"}.bi-envelope-at::before{content:\"\\f84c\"}.bi-regex::before{content:\"\\f84d\"}.bi-text-wrap::before{content:\"\\f84e\"}.bi-sign-dead-end-fill::before{content:\"\\f84f\"}.bi-sign-dead-end::before{content:\"\\f850\"}.bi-sign-do-not-enter-fill::before{content:\"\\f851\"}.bi-sign-do-not-enter::before{content:\"\\f852\"}.bi-sign-intersection-fill::before{content:\"\\f853\"}.bi-sign-intersection-side-fill::before{content:\"\\f854\"}.bi-sign-intersection-side::before{content:\"\\f855\"}.bi-sign-intersection-t-fill::before{content:\"\\f856\"}.bi-sign-intersection-t::before{content:\"\\f857\"}.bi-sign-intersection-y-fill::before{content:\"\\f858\"}.bi-sign-intersection-y::before{content:\"\\f859\"}.bi-sign-intersection::before{content:\"\\f85a\"}.bi-sign-merge-left-fill::before{content:\"\\f85b\"}.bi-sign-merge-left::before{content:\"\\f85c\"}.bi-sign-merge-right-fill::before{content:\"\\f85d\"}.bi-sign-merge-right::before{content:\"\\f85e\"}.bi-sign-no-left-turn-fill::before{content:\"\\f85f\"}.bi-sign-no-left-turn::before{content:\"\\f860\"}.bi-sign-no-parking-fill::before{content:\"\\f861\"}.bi-sign-no-parking::before{content:\"\\f862\"}.bi-sign-no-right-turn-fill::before{content:\"\\f863\"}.bi-sign-no-right-turn::before{content:\"\\f864\"}.bi-sign-railroad-fill::before{content:\"\\f865\"}.bi-sign-railroad::before{content:\"\\f866\"}.bi-building-add::before{content:\"\\f867\"}.bi-building-check::before{content:\"\\f868\"}.bi-building-dash::before{content:\"\\f869\"}.bi-building-down::before{content:\"\\f86a\"}.bi-building-exclamation::before{content:\"\\f86b\"}.bi-building-fill-add::before{content:\"\\f86c\"}.bi-building-fill-check::before{content:\"\\f86d\"}.bi-building-fill-dash::before{content:\"\\f86e\"}.bi-building-fill-down::before{content:\"\\f86f\"}.bi-building-fill-exclamation::before{content:\"\\f870\"}.bi-building-fill-gear::before{content:\"\\f871\"}.bi-building-fill-lock::before{content:\"\\f872\"}.bi-building-fill-slash::before{content:\"\\f873\"}.bi-building-fill-up::before{content:\"\\f874\"}.bi-building-fill-x::before{content:\"\\f875\"}.bi-building-fill::before{content:\"\\f876\"}.bi-building-gear::before{content:\"\\f877\"}.bi-building-lock::before{content:\"\\f878\"}.bi-building-slash::before{content:\"\\f879\"}.bi-building-up::before{content:\"\\f87a\"}.bi-building-x::before{content:\"\\f87b\"}.bi-buildings-fill::before{content:\"\\f87c\"}.bi-buildings::before{content:\"\\f87d\"}.bi-bus-front-fill::before{content:\"\\f87e\"}.bi-bus-front::before{content:\"\\f87f\"}.bi-ev-front-fill::before{content:\"\\f880\"}.bi-ev-front::before{content:\"\\f881\"}.bi-globe-americas::before{content:\"\\f882\"}.bi-globe-asia-australia::before{content:\"\\f883\"}.bi-globe-central-south-asia::before{content:\"\\f884\"}.bi-globe-europe-africa::before{content:\"\\f885\"}.bi-house-add-fill::before{content:\"\\f886\"}.bi-house-add::before{content:\"\\f887\"}.bi-house-check-fill::before{content:\"\\f888\"}.bi-house-check::before{content:\"\\f889\"}.bi-house-dash-fill::before{content:\"\\f88a\"}.bi-house-dash::before{content:\"\\f88b\"}.bi-house-down-fill::before{content:\"\\f88c\"}.bi-house-down::before{content:\"\\f88d\"}.bi-house-exclamation-fill::before{content:\"\\f88e\"}.bi-house-exclamation::before{content:\"\\f88f\"}.bi-house-gear-fill::before{content:\"\\f890\"}.bi-house-gear::before{content:\"\\f891\"}.bi-house-lock-fill::before{content:\"\\f892\"}.bi-house-lock::before{content:\"\\f893\"}.bi-house-slash-fill::before{content:\"\\f894\"}.bi-house-slash::before{content:\"\\f895\"}.bi-house-up-fill::before{content:\"\\f896\"}.bi-house-up::before{content:\"\\f897\"}.bi-house-x-fill::before{content:\"\\f898\"}.bi-house-x::before{content:\"\\f899\"}.bi-person-add::before{content:\"\\f89a\"}.bi-person-down::before{content:\"\\f89b\"}.bi-person-exclamation::before{content:\"\\f89c\"}.bi-person-fill-add::before{content:\"\\f89d\"}.bi-person-fill-check::before{content:\"\\f89e\"}.bi-person-fill-dash::before{content:\"\\f89f\"}.bi-person-fill-down::before{content:\"\\f8a0\"}.bi-person-fill-exclamation::before{content:\"\\f8a1\"}.bi-person-fill-gear::before{content:\"\\f8a2\"}.bi-person-fill-lock::before{content:\"\\f8a3\"}.bi-person-fill-slash::before{content:\"\\f8a4\"}.bi-person-fill-up::before{content:\"\\f8a5\"}.bi-person-fill-x::before{content:\"\\f8a6\"}.bi-person-gear::before{content:\"\\f8a7\"}.bi-person-lock::before{content:\"\\f8a8\"}.bi-person-slash::before{content:\"\\f8a9\"}.bi-person-up::before{content:\"\\f8aa\"}.bi-scooter::before{content:\"\\f8ab\"}.bi-taxi-front-fill::before{content:\"\\f8ac\"}.bi-taxi-front::before{content:\"\\f8ad\"}.bi-amd::before{content:\"\\f8ae\"}.bi-database-add::before{content:\"\\f8af\"}.bi-database-check::before{content:\"\\f8b0\"}.bi-database-dash::before{content:\"\\f8b1\"}.bi-database-down::before{content:\"\\f8b2\"}.bi-database-exclamation::before{content:\"\\f8b3\"}.bi-database-fill-add::before{content:\"\\f8b4\"}.bi-database-fill-check::before{content:\"\\f8b5\"}.bi-database-fill-dash::before{content:\"\\f8b6\"}.bi-database-fill-down::before{content:\"\\f8b7\"}.bi-database-fill-exclamation::before{content:\"\\f8b8\"}.bi-database-fill-gear::before{content:\"\\f8b9\"}.bi-database-fill-lock::before{content:\"\\f8ba\"}.bi-database-fill-slash::before{content:\"\\f8bb\"}.bi-database-fill-up::before{content:\"\\f8bc\"}.bi-database-fill-x::before{content:\"\\f8bd\"}.bi-database-fill::before{content:\"\\f8be\"}.bi-database-gear::before{content:\"\\f8bf\"}.bi-database-lock::before{content:\"\\f8c0\"}.bi-database-slash::before{content:\"\\f8c1\"}.bi-database-up::before{content:\"\\f8c2\"}.bi-database-x::before{content:\"\\f8c3\"}.bi-database::before{content:\"\\f8c4\"}.bi-houses-fill::before{content:\"\\f8c5\"}.bi-houses::before{content:\"\\f8c6\"}.bi-nvidia::before{content:\"\\f8c7\"}.bi-person-vcard-fill::before{content:\"\\f8c8\"}.bi-person-vcard::before{content:\"\\f8c9\"}.bi-sina-weibo::before{content:\"\\f8ca\"}.bi-tencent-qq::before{content:\"\\f8cb\"}.bi-wikipedia::before{content:\"\\f8cc\"}.bi-alphabet-uppercase::before{content:\"\\f2a5\"}.bi-alphabet::before{content:\"\\f68a\"}.bi-amazon::before{content:\"\\f68d\"}.bi-arrows-collapse-vertical::before{content:\"\\f690\"}.bi-arrows-expand-vertical::before{content:\"\\f695\"}.bi-arrows-vertical::before{content:\"\\f698\"}.bi-arrows::before{content:\"\\f6a2\"}.bi-ban-fill::before{content:\"\\f6a3\"}.bi-ban::before{content:\"\\f6b6\"}.bi-bing::before{content:\"\\f6c2\"}.bi-cake::before{content:\"\\f6e0\"}.bi-cake2::before{content:\"\\f6ed\"}.bi-cookie::before{content:\"\\f6ee\"}.bi-copy::before{content:\"\\f759\"}.bi-crosshair::before{content:\"\\f769\"}.bi-crosshair2::before{content:\"\\f794\"}.bi-emoji-astonished-fill::before{content:\"\\f795\"}.bi-emoji-astonished::before{content:\"\\f79a\"}.bi-emoji-grimace-fill::before{content:\"\\f79b\"}.bi-emoji-grimace::before{content:\"\\f7a0\"}.bi-emoji-grin-fill::before{content:\"\\f7a1\"}.bi-emoji-grin::before{content:\"\\f7a6\"}.bi-emoji-surprise-fill::before{content:\"\\f7a7\"}.bi-emoji-surprise::before{content:\"\\f7ac\"}.bi-emoji-tear-fill::before{content:\"\\f7ad\"}.bi-emoji-tear::before{content:\"\\f7b2\"}.bi-envelope-arrow-down-fill::before{content:\"\\f7b3\"}.bi-envelope-arrow-down::before{content:\"\\f7b8\"}.bi-envelope-arrow-up-fill::before{content:\"\\f7b9\"}.bi-envelope-arrow-up::before{content:\"\\f7be\"}.bi-feather::before{content:\"\\f7bf\"}.bi-feather2::before{content:\"\\f7c4\"}.bi-floppy-fill::before{content:\"\\f7c5\"}.bi-floppy::before{content:\"\\f7d8\"}.bi-floppy2-fill::before{content:\"\\f7d9\"}.bi-floppy2::before{content:\"\\f7e4\"}.bi-gitlab::before{content:\"\\f7e5\"}.bi-highlighter::before{content:\"\\f7f8\"}.bi-marker-tip::before{content:\"\\f802\"}.bi-nvme-fill::before{content:\"\\f803\"}.bi-nvme::before{content:\"\\f80c\"}.bi-opencollective::before{content:\"\\f80d\"}.bi-pci-card-network::before{content:\"\\f8cd\"}.bi-pci-card-sound::before{content:\"\\f8ce\"}.bi-radar::before{content:\"\\f8cf\"}.bi-send-arrow-down-fill::before{content:\"\\f8d0\"}.bi-send-arrow-down::before{content:\"\\f8d1\"}.bi-send-arrow-up-fill::before{content:\"\\f8d2\"}.bi-send-arrow-up::before{content:\"\\f8d3\"}.bi-sim-slash-fill::before{content:\"\\f8d4\"}.bi-sim-slash::before{content:\"\\f8d5\"}.bi-sourceforge::before{content:\"\\f8d6\"}.bi-substack::before{content:\"\\f8d7\"}.bi-threads-fill::before{content:\"\\f8d8\"}.bi-threads::before{content:\"\\f8d9\"}.bi-transparency::before{content:\"\\f8da\"}.bi-twitter-x::before{content:\"\\f8db\"}.bi-type-h4::before{content:\"\\f8dc\"}.bi-type-h5::before{content:\"\\f8dd\"}.bi-type-h6::before{content:\"\\f8de\"}.bi-backpack-fill::before{content:\"\\f8df\"}.bi-backpack::before{content:\"\\f8e0\"}.bi-backpack2-fill::before{content:\"\\f8e1\"}.bi-backpack2::before{content:\"\\f8e2\"}.bi-backpack3-fill::before{content:\"\\f8e3\"}.bi-backpack3::before{content:\"\\f8e4\"}.bi-backpack4-fill::before{content:\"\\f8e5\"}.bi-backpack4::before{content:\"\\f8e6\"}.bi-brilliance::before{content:\"\\f8e7\"}.bi-cake-fill::before{content:\"\\f8e8\"}.bi-cake2-fill::before{content:\"\\f8e9\"}.bi-duffle-fill::before{content:\"\\f8ea\"}.bi-duffle::before{content:\"\\f8eb\"}.bi-exposure::before{content:\"\\f8ec\"}.bi-gender-neuter::before{content:\"\\f8ed\"}.bi-highlights::before{content:\"\\f8ee\"}.bi-luggage-fill::before{content:\"\\f8ef\"}.bi-luggage::before{content:\"\\f8f0\"}.bi-mailbox-flag::before{content:\"\\f8f1\"}.bi-mailbox2-flag::before{content:\"\\f8f2\"}.bi-noise-reduction::before{content:\"\\f8f3\"}.bi-passport-fill::before{content:\"\\f8f4\"}.bi-passport::before{content:\"\\f8f5\"}.bi-person-arms-up::before{content:\"\\f8f6\"}.bi-person-raised-hand::before{content:\"\\f8f7\"}.bi-person-standing-dress::before{content:\"\\f8f8\"}.bi-person-standing::before{content:\"\\f8f9\"}.bi-person-walking::before{content:\"\\f8fa\"}.bi-person-wheelchair::before{content:\"\\f8fb\"}.bi-shadows::before{content:\"\\f8fc\"}.bi-suitcase-fill::before{content:\"\\f8fd\"}.bi-suitcase-lg-fill::before{content:\"\\f8fe\"}.bi-suitcase-lg::before{content:\"\\f8ff\"}.bi-suitcase::before{content:\"\\f900\"}.bi-suitcase2-fill::before{content:\"\\f901\"}.bi-suitcase2::before{content:\"\\f902\"}.bi-vignette::before{content:\"\\f903\"}";

    var ft1 = "data:font/woff2;base64,";

    var leisButtonCss = ":root{\r\n    --leis-primary-cl: #2c7be5;\r\n    --leis-primary-hover-cl: #1457b0;\r\n    --leis-primary-focus-bx-sh: 0 0 0 3px #007bff80;\r\n    --leis-primary-bd-hv-cl: #0062cc;\r\n    --leis-primary-bd-cl: #007bff;\r\n    --leis-primary-bd-fc-cl: #98caff;\r\n\r\n    --leis-secondary-cl: #868e96;\r\n    --leis-secondary-hover-cl: #717171;\r\n    --leis-primary-bd-cl: #868e96;\r\n    --leis-secondary-focus-bx-sh: 0 0 0 3px #a4acb5;\r\n    --leis-secondary-bd-hv-cl: #b0b6bc;\r\n    --leis-secondary-bd-fc-cl: #e4ecf5;\r\n\r\n    --leis-success-cl: #28a745;\r\n    --leis-success-hover-cl: #25933e;\r\n    --leis-success-bd-cl: #28a745;\r\n    --leis-success-focus-bx-sh: 0 0 0 3px #39c55a;\r\n    --leis-seccess-bd-hv-cl: #39da5e;\r\n\r\n\r\n    --leis-custom-success-cl: #2e443d;\r\n    --leis-custom-success-bd-cl: #83c89b;\r\n    --leis-custom-success-text-cl: #45875b;\r\n\r\n    --leis-warning-cl: #ffc107;\r\n    --leis-warning-hover-cl: #f0c648;\r\n    --leis-warning-bd-cl: #ffc107;\r\n    --leis-warning-focus-bx-sh: 0 0 0 3px #ffd24d;\r\n    --leis-warning-bd-hv-cl: #e5ba3b;\r\n\r\n    --leis-danger-cl: #dc3545;\r\n    --leis-danger-hover-cl: #ce2c3c;\r\n    --leis-danger-bd-cl: #dc3545;\r\n    --leis-danger-focus-bx-sh: 0 0 0 3px #f3384a;\r\n    --leis-danger-bd-hv-cl: #f3384a;\r\n\r\n    --leis-info-cl: #abdde5;\r\n    --leis-info-hover-cl: #89cdd7;\r\n    --leis-info-bd-cl: #abdde5;\r\n    --leis-info-focus-bx-sh: 0 0 0 3px #c6f5fc;\r\n    --leis-info-bd-hv-cl: #c6f5fc;\r\n\r\n    --leis-light-cl: #fefeff;\r\n    --leis-light-hover-cl: #dddde2;\r\n    --leis-light-bd-cl: #d8d8de;\r\n    --leis-light-focus-bx-sh: 0 0 0 3px #dffafd;\r\n    --leis-light-bd-hv-cl: #dffafd;\r\n\r\n    --leis-dark-cl: #23272b;\r\n    --leis-dark-hover-cl: #485157;\r\n    --leis-dark-bd-cl: #424950;\r\n    --leis-dark-focus-bx-sh: 0 0 0 3px #48525b;\r\n    --leis-dark-bd-hv-cl: #515960;\r\n\r\n    --leis-btn-bos-sh : 0 0 0 3px  var(--leis-baseColor);\r\n}\r\n\r\n\r\n\r\n\r\n.leis-btn,\r\n.leis-dropBtn {\r\n    outline: none;\r\n    border: 1px solid #1c7230ec;;\r\n    background-color: inherit;\r\n    cursor: pointer;\r\n    padding: 4px 16px;\r\n    appearance: none;\r\n    border-radius: 6px;\r\n    display: inline-block;\r\n    position: relative;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;\r\n    -moz-user-select: none;\r\n    touch-action: manipulation;\r\n    vertical-align: middle;\r\n    white-space: nowrap;\r\n    font-size: 1rem;\r\n    font-family: inherit;\r\n    word-wrap: break-word;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    transition: color .15s ease, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;\r\n}\r\n\r\n.leis-btn:focus{\r\n    -webkit-box-shadow: var(--leis-btn-bos-sh);\r\n    box-shadow: var(--leis-btn-bos-sh);\r\n    border-color: transparent;\r\n\r\n}\r\n\r\n.leis-btn-close {\r\n    border: 2px solid #dddddd90;\r\n    outline: none;\r\n    background-color: inherit;\r\n    cursor: pointer;\r\n    font-size: 1.5rem;\r\n    padding-left: 8px;\r\n    padding-right: 8px;\r\n    padding-bottom: 2px;\r\n    border-radius: 8px;\r\n}\r\n\r\n\r\n.leis-dropBtn {\r\n    gap: 10px;\r\n}\r\n\r\n\r\n\r\n.leis-btn-primary,\r\n.leis-dropBtn-primary {\r\n    background-color: var(--leis-primary-cl);\r\n    color: #fff !important;\r\n    border-radius: 6px;\r\n    border-width: 0.5px;\r\n    border-color: var(--leis-primary-bd-cl);\r\n}\r\n\r\n.leis-btn-primary:hover,    \r\n.leis-dropBtn-primary:hover {\r\n    background-color: var(--leis-primary-hover-cl);\r\n    color: #fff;\r\n\r\n}\r\n\r\n.leis-btn-primary:focus,\r\n.leis-dropBtn-primary:focus,\r\n.leis-btn-primary.focus,\r\n.leis-dropBtn-primary.focus {\r\n    -webkit-box-shadow: var(--leis-primary-focus-bx-sh);\r\n    -o-box-shadow: var(--leis-primary-focus-bx-sh);\r\n    box-shadow: var(--leis-primary-focus-bx-sh);\r\n}\r\n\r\n.leis-btn-primary:focus:hover {\r\n    border: 1px solid var(--leis-primary-bd-fc-cl);\r\n}\r\n\r\n.leis-btn-secondary,\r\n.leis-dropBtn-secondary {\r\n    background-color: var(--leis-secondary-cl);\r\n    color: #fff !important;\r\n    border-radius: 6px;\r\n    border: 0.5px solid var(--leis-secondary-bd-cl);\r\n}\r\n\r\n.leis-btn-secondary:hover,\r\n.leis-dropBtn-secondary:hover {\r\n    background-color: var(--leis-secondary-hover-cl);\r\n\r\n}\r\n\r\n.leis-btn-secondary:focus,\r\n.leis-btn-secondary.focus,\r\n.leis-dropBtn-secondary:focus,\r\n.leis-dropBtn-secondary.focus,\r\n.leis-btn-close:focus {\r\n    -webkit-box-shadow: var(--leis-secondary-focus-bx-sh);\r\n    -o-box-shadow: var(--leis-secondary-focus-bx-sh);\r\n    box-shadow: var(--leis-secondary-focus-bx-sh);\r\n    border: 1px solid var(--leis-secondary-bd-cl);\r\n    transition: .2s ease-in;\r\n}\r\n\r\n\r\n.leis-btn-secondary:focus:hover {\r\n    border: 1px solid var(--leis-secondary-bd-fc-cl);\r\n\r\n}\r\n\r\n.leis-btn-success,\r\n.leis-dropBtn-success {\r\n    background-color: var(--leis-success-cl);\r\n    color: #fff !important;\r\n    border-radius: 6px;\r\n    border-width: 0.5px;\r\n    border-color: var(--leis-success-bd-cl);\r\n}\r\n\r\n.leis-btn-success:hover,\r\n.leis-dropBtn-success:hover {\r\n    background-color: var(--leis-success-hover-cl);\r\n\r\n}\r\n\r\n.leis-btn-success:focus,\r\n.leis-btn-success.focus,\r\n.leis-dropBtn-success:focus,\r\n.leis-dropBtn-success.focus {\r\n    -webkit-box-shadow: var(--leis-success-focus-bx-sh);\r\n    -o-box-shadow: var(--leis-success-focus-bx-sh);\r\n    box-shadow: var(--leis-success-focus-bx-sh);\r\n}\r\n\r\n.leis-btn-success:focus:hover {\r\n    border: 1px solid var(--leis-custom-success-bd-cl);\r\n}\r\n\r\n.leis-btn-warning,\r\n.leis-dropBtn-warning {\r\n    background-color: var(--leis-warning-cl);\r\n    color: black !important;\r\n    border-radius: 6px;\r\n    border-width: 0.5px;\r\n    border-color: var(--leis-warning-bd-cl);\r\n}\r\n\r\n.leis-btn-warning:hover,\r\n.leis-dropBtn-warning:hover {\r\n    background-color: var(--leis-warning-hover-cl);\r\n    border-color: var(--leis-warning-bd-hv-cl)\r\n}\r\n\r\n.leis-btn-warning:focus,\r\n.leis-btn-warning.focus,\r\n.leis-dropBtn-warning:focus,\r\n.leis-dropBtn-warning.focus {\r\n    -webkit-box-shadow: var(--leis-warning-focus-bx-sh);\r\n    -o-box-shadow: var(--leis-warning-focus-bx-sh);\r\n    box-shadow: var(--leis-warning-focus-bx-sh);\r\n}\r\n\r\n.leis-btn-danger,\r\n.leis-dropBtn-danger {\r\n    background-color: var(--leis-danger-cl);\r\n    color: white !important;\r\n    border-radius: 6px;\r\n    border-width: 0.5px;\r\n    border-color: var(--leis-danger-bd-cl);\r\n}\r\n\r\n.leis-btn-danger:hover,\r\n.leis-dropBtn-danger:hover {\r\n    background-color: var(--leis-danger-hover-cl);\r\n    border-color: var(--leis-danger-bd-hv-cl)\r\n}\r\n\r\n.leis-btn-danger:focus,\r\n.leis-btn-danger.focus,\r\n.leis-dropBtn-danger:focus,\r\n.leis-dropBtn-danger.focus {\r\n    -webkit-box-shadow: var(--leis-danger-focus-bx-sh);\r\n    -o-box-shadow: var(--leis-danger-focus-bx-sh);\r\n    box-shadow: var(--leis-danger-focus-bx-sh);\r\n}\r\n\r\n.leis-btn-info,\r\n.leis-dropBtn-info {\r\n    background-color: var(--leis-info-cl);\r\n    color: black !important;\r\n    border-radius: 6px;\r\n    border-width: 0.5px;\r\n    border-color: var(--leis-info-bd-cl);\r\n}\r\n\r\n.leis-btn-info:hover,\r\n.leis-dropBtn-info:hover {\r\n    background-color: var(--leis-info-hover-cl);\r\n    border-color: var(--leis-info-bd-hv-cl)\r\n}\r\n\r\n.leis-btn-info:focus,\r\n.leis-btn-info.focus,\r\n.leis-dropBtn-info:focus,\r\n.leis-dropBtn-info.focus {\r\n    -webkit-box-shadow: var(--leis-info-focus-bx-sh);\r\n    -o-box-shadow: var(--leis-info-focus-bx-sh);\r\n    box-shadow: var(--leis-info-focus-bx-sh);\r\n}\r\n\r\n.leis-btn-light,\r\n.leis-dropBtn-light {\r\n    background-color: var(--leis-light-cl);\r\n    color: black !important;\r\n    border-radius: 6px;\r\n    border-width: 0.5px;\r\n    border-color: var(--leis-light-bd-cl);\r\n}\r\n\r\n.leis-btn-light:hover,\r\n.leis-dropBtn-light:hover {\r\n    background-color: var(--leis-light-hover-cl);\r\n    border-color: var(--leis-light-bd-hv-cl)\r\n}\r\n\r\n.leis-btn-light:focus,\r\n.leis-btn-light.focus,\r\n.leis-dropBtn-light:focus,\r\n.leis-dropBtn-light.focus {\r\n    -webkit-box-shadow: var(--leis-light-focus-bx-sh);\r\n    -o-box-shadow: var(--leis-light-focus-bx-sh);\r\n    box-shadow: var(--leis-light-focus-bx-sh);\r\n}\r\n\r\n.leis-btn-dark,\r\n.leis-dropBtn-dark {\r\n    background-color: var(--leis-dark-cl);\r\n    color: #ddd !important;\r\n    border-radius: 6px;\r\n    border-width: 0.5px;\r\n    border-color: var(--leis-dark-bd-cl);\r\n}\r\n\r\n.leis-btn-dark:hover,\r\n.leis-dropBtn-dark:hover {\r\n    background-color: var(--leis-dark-hover-cl);\r\n    border-color: var(--leis-dark-bd-hv-cl)\r\n}\r\n\r\n.leis-btn-dark:focus,\r\n.leis-btn-dark.focus,\r\n.leis-dropBtn-dark:focus {\r\n    -webkit-box-shadow: var(--leis-dark-focus-bx-sh);\r\n    -o-box-shadow: var(--leis-dark-focus-bx-sh);\r\n    box-shadow: var(--leis-dark-focus-bx-sh);\r\n}\r\n\r\n.leis-outline-btn-primary {\r\n    border-color: var(--leis-primary-cl);\r\n    background-color: transparent !important;\r\n    color: var(--leis-primary-cl) !important;\r\n    -webkit-box-shadow: var(--leis-primary-cl) 0 0 2px inset;\r\n    box-shadow: var(--leis-primary-cl) 0 0 2px inset;\r\n}\r\n\r\n.leis-outline-btn-primary:hover,\r\n.leis-outline-btn-primary.focus,\r\n.leis-outline-btn-primary:focus {\r\n    color: #fff !important;\r\n    background-color: var(--leis-primary-cl) !important;\r\n}\r\n\r\n.leis-outline-btn-secondary {\r\n    border-color: var(--leis-secondary-cl);\r\n    background-color: transparent !important;\r\n    color: var(--leis-secondary-cl) !important;\r\n    -webkit-box-shadow: var(--leis-secondary-cl) 0 0 3px inset;\r\n    box-shadow: var(--leis-secondary-cl) 0 0 2px inset;\r\n}\r\n\r\n.leis-outline-btn-secondary:hover,\r\n.leis-outline-btn-secondary.focus,\r\n.leis-outline-btn-secondary:focus {\r\n    color: #fff !important;\r\n    background-color: var(--leis-secondary-cl) !important;\r\n}\r\n\r\n.leis-outline-btn-dark {\r\n    border-color: var(--leis-dark-cl);\r\n    background-color: transparent !important;\r\n    color: #9c9999 !important;\r\n    -webkit-box-shadow: var(--leis-dark-cl) 0 0 3px inset;\r\n    box-shadow: var(--leis-dark-cl) 0 0 2px inset;\r\n}\r\n\r\n.leis-outline-btn-dark:hover,\r\n.leis-outline-btn-dark.focus,\r\n.leis-outline-btn-dark:focus {\r\n    color: #fff !important;\r\n    background-color: var(--leis-dark-cl) !important;\r\n}\r\n\r\n.leis-outline-btn-light {\r\n    border-color: var(--leis-light-cl);\r\n    background-color: transparent !important;\r\n    color: var(--leis-primary-bd-hv-cl) !important;\r\n    -webkit-box-shadow: #ccc 0 0 3px inset;\r\n    box-shadow: #ccc 0 0 2px inset;\r\n}\r\n\r\n.leis-outline-btn-light:hover,\r\n.leis-outline-btn-light.focus,\r\n.leis-outline-btn-light:focus {\r\n    color: var(--leis-primary-bd-hv-cl) !important;\r\n    background-color: var(--leis-light-cl) !important;\r\n}\r\n\r\n.leis-outline-btn-success {\r\n    border-color: var(--leis-success-cl);\r\n    background-color: transparent !important;\r\n    color: var(--leis-success-cl) !important;\r\n    -webkit-box-shadow: var(--leis-success-cl) 0 0 3px inset;\r\n    box-shadow: var(--leis-success-cl) 0 0 2px inset;\r\n}\r\n\r\n.leis-outline-btn-success:hover,\r\n.leis-outline-btn-success.focus,\r\n.leis-outline-btn-success:focus {\r\n    color: #fff !important;\r\n    background-color: var(--leis-success-cl) !important;\r\n}\r\n\r\n.leis-outline-btn-info {\r\n    border-color: var(--leis-info-cl);\r\n    background-color: transparent !important;\r\n    color: var(--leis-info-hover-cl) !important;\r\n    -webkit-box-shadow: var(--leis-info-cl) 0 0 3px inset;\r\n    box-shadow: var(--leis-info-cl) 0 0 2px inset;\r\n}\r\n\r\n.leis-outline-btn-info:hover,\r\n.leis-outline-btn-info.focus,\r\n.leis-outline-btn-info:focus {\r\n    color: black !important;\r\n    background-color: var(--leis-info-cl) !important;\r\n}\r\n\r\n.leis-outline-btn-warning {\r\n    border-color: var(--leis-warning-cl);\r\n    background-color: transparent !important;\r\n    color: var(--leis-warning-cl) !important;\r\n    -webkit-box-shadow: var(--leis-warning-cl) 0 0 3px inset;\r\n    box-shadow: var(--leis-warning-cl) 0 0 2px inset;\r\n}\r\n\r\n.leis-outline-btn-warning:hover,\r\n.leis-outline-btn-warning.focus,\r\n.leis-outline-btn-warning:focus {\r\n    color: black !important;\r\n    background-color: var(--leis-warning-cl) !important;\r\n}\r\n\r\n.leis-outline-btn-danger {\r\n    border-color: var(--leis-danger-cl);\r\n    background-color: transparent !important;\r\n    color: var(--leis-danger-cl) !important;\r\n    -webkit-box-shadow: var(--leis-danger-cl) 0 0 3px inset;\r\n    box-shadow: var(--leis-danger-cl) 0 0 2px inset;\r\n}\r\n\r\n.leis-outline-btn-danger:hover,\r\n.leis-outline-btn-danger.focus,\r\n.leis-outline-btn-danger:focus {\r\n    color: #fff !important;\r\n    background-color: var(--leis-danger-cl) !important;\r\n}\r\n\r\n.leis-btn.leis-btn-small,\r\n.leis-btn-primary.leis-btn-small,\r\n.leis-btn-secondary.leis-btn-small,\r\n.leis-btn-success.leis-btn-small,\r\n.leis-btn-info.leis-btn-small,\r\n.leis-btn-danger.leis-btn-small,\r\n.leis-btn-warning.leis-btn-small,\r\n.leis-btn-light.leis-btn-small,\r\n.leis-btn-dark.leis-btn-small {\r\n    padding: 2px 10px;\r\n    font-size: 1rem;\r\n}\r\n\r\n.leis-btn.leis-btn-large,\r\n.leis-btn-primary.leis-btn-large,\r\n.leis-btn-secondary.leis-btn-large,\r\n.leis-btn-success.leis-btn-large,\r\n.leis-btn-info.leis-btn-large,\r\n.leis-btn-danger.leis-btn-large,\r\n.leis-btn-warning.leis-btn-large,\r\n.leis-btn-light.leis-btn-large,\r\n.leis-btn-dark.leis-btn-large {\r\n    padding: 0.555rem 16px;\r\n    font-size: 1.22rem;\r\n    font-weight: inherit;\r\n    min-width: 140px;\r\n}\r\n\r\n.leis-btn-icon {\r\n    font-size: inherit;\r\n    color: inherit;\r\n    font-weight: inherit;\r\n}\r\n\r\n.leis-btn-w-icon {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n}\r\n";

    let init = false;
    let leisButton = () => {
        if (!init) {
            init = true;
            return leisButtonCss
        }
        return null
    };

    function CloseBtn(parent) {
        return leistrap.create("button", {
            content: [leistrap.create('span', { innerHTML: "&times" })],
            className: 'leis-btn-close',
            parent
        })
    }

    var modalCss = "";

    leistrap.addCss(leisButton());
    leistrap.addCss(modalCss);

    function leisModal(titleText) {
       const event =  _EventEmitter();
       let closable = true;

        const container = leistrap.create('div', {
            parent: "main",
            className: "leis-modal-container",
            onclick: function (e) {
                if (e.target == this._conf) hide();
            }
        });
        const dialog = leistrap.create("div", {
            parent: container,
            className: "leis-modal-dialog modal-transform",

        });
        const content = leistrap.create("div", {
            parent: dialog,
            className: "leis-modal-content"
        });

        const header = leistrap.create("div", {
            parent: content,
            className: "leis-modal-header"
        });
        const body = leistrap.create("div", {
            parent: content,
            className: "leis-modal-body"
        });
        const footer = leistrap.create("div", {
            parent: content,
            className: 'leis-modal-footer'
        });

        const title = leistrap.create("h3", {
            text: titleText,
            className: 'leis-modal-title',
            parent: header
        });
        const closeBtn = CloseBtn(header).addEvent("click", e => hide());


        const footerCard = leistrap.create("div", {
            parent: footer,
            className: 'leis-modal-footer-card',
            content: [
                leistrap.create('button', {
                    type: "button",
                    text: "Close",
                    className: 'leis-btn leis-btn-secondary',
                    onclick: e => hide()
                }),
                leistrap.create('button', {
                    type: "button",
                    text: "save data",
                    className: 'leis-btn leis-btn-primary'
                })
            ]
        });


        function show() {
            container.setClassName("show");
            if(has("show", event.eventsList())){
                event.invoke('show');
            }
        }
        function hide() {
            if(Modal.closable){
                
                container.removeClassName("show");
            }
            else {
                dialog.setStyleSheet({ opacity : "0.1", left : "-5px"});
                setTimeout(function(){
                    dialog.setStyleSheet({opacity : "1",    left : "50%"});
                }, 500);
            }
           
        }
        function setSize(width, height) {
            if (height) dialog.setStyleSheet({ height });
            if (width) dialog.setStyleSheet({ width });

        }
        const Modal = {
            container, dialog, content, header,
            body, footer, title, closeBtn, footerCard, setSize,
            show, hide, event, closable
        };
        return Modal
    }

    var tabCSS = "/* tabs */\r\n\r\n.leis-tabs-card {\r\n    position: relative;\r\n    -webkit-display: flex;\r\n    -moz-display: flex;\r\n    -o-display: flex;\r\n    -ms-display: flex;\r\n    display: flex;\r\n    gap: 0.5em;\r\n    white-space: nowrap;\r\n    overflow-x:  auto;\r\n    background-color: inherit;\r\n    font-size: inherit;\r\n}\r\n\r\n.leis-tabs-btn {\r\n    position: relative;\r\n    display: -moz-box;\r\n    display: -webkit-box;\r\n    display: block;\r\n    background-color: inherit;\r\n    outline: none;\r\n    border: none;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    list-style: none;\r\n    overflow: visible;\r\n    text-overflow: inherit;\r\n}\r\n\r\n\r\n.leis-tab-txt {\r\n    padding: 0.5rem;\r\n}\r\n\r\n.leis-tab-content {\r\n    position: relative;\r\n    display: -webkit-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    display: none;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-box-direction: normal;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n    min-width: 0;\r\n    word-wrap: break-word;\r\n    background-color: inherit;\r\n    animation: fade-content 1s ease-in-out;\r\n}\r\n\r\n.leis-tab-content.active {\r\n    display: block;\r\n    background-color: inherit;\r\n    font-size: inherit;\r\n    font-weight: inherit;\r\n}\r\n\r\n.leis-tabs-btn.active {\r\n    background-color: #ddd;\r\n} \r\n\r\n@keyframes fade-content {\r\n    from {\r\n        opacity: 0;\r\n    }\r\n\r\n    to {\r\n        opacity: 1;\r\n    }\r\n}\r\n";

    /**
     * 
     * @param {{
     * btnParent : leistrap.Leistrap<HTMLElement>,
     * contentParent : leistrap.Leistrap<HTMLElement> 
     * }} option 
     */

    function leisTab(option) {

        let event = _EventEmitter();
        // the default tabButton tag
        let TAG_NAME = "button";

        if (!option) option = {};
        leistrap.addCss(tabCSS);

        // contains all tabs
        let tabMap = {};

        const buttonsContainer = leistrap.create("div",
            {
                className: "leis-tabs-card",
                parent: option.btnParent
            });

        const contentContainer = leistrap.create('div',
            {
                parent: option.contentParent,
                className: "leis-mainContentTab"
            });

        /**
         * crate the tab button  and its content
         * @param {string} btnName  the tabButton name , this must be unique
         * @param {leistrap.Leistrap<HTMLElement>} content  tab content to show 
         * once the button is clicked
         * @param {{
         * createButton?:boolean,
         * buttonText ; string
         * }} options 
         * @returns {leistrap.Leistrap<HTMLButtonElement> | null}
         */
        function define(btnName, content, options) {
            let result = null;
            let btn = null;
            if (!options) options = {};

            if (!has(btnName, tabMap)) {
                content.setClassName("leis-tab-content");
                if (options.createButton) {
                    btn = generateId(3, 7);
                    result = createButton(btnName, options, btn);
                }
                tabMap[btnName] = { content, btn };
                contentContainer.add(content);
            }
            else { DisplayError('UniqueType', "uniqueTypeError", "tabName," + btnName); }
            return result
        }

        function createButton(btnName, option, id) {
            return leistrap.create(TAG_NAME,
                {
                    text: option.buttonText || "leisButton",
                    onclick: () => invoke(btnName),
                    parent: buttonsContainer,
                    data: { id },
                    type: "button"
                }
            )
        }


        /**
         * call and show tab by its btnName
         * @param {string} btnName 
         */
        function invoke(btnName) {
            if (has(btnName, tabMap)) {
                loopObject(tabMap).forEach(item => {
                    item.content.hide();
                    item.content.removeClassName("active");
                    if (item.btn) {
                        leistrap.get(item.btn, "removeClassName", "active");
                    }
                });

                const current = tabMap[btnName];
                current.content.show();
                current.content.setClassName("active");
                event.invoke(btnName);
                if (current.btn) {
                    leistrap.get(current.btn, "setClassName", "active");
                }
                TAB.current = btnName;
                if(typeof TAB.trackAll == "function")TAB.trackAll(current);
            }
        }
        /**
         * 
         * @param {keyof HTMLElementTagNameMap} tagName_ 
         * @returns void
         */
        const useElement = tagName_ => TAG_NAME = tagName_;
        /**
         * removes a particular tab to the component
         * @param {string} TabName 
         */
        function remove(TabName) {
            if (has(TabName, tabMap)) {

                // destroy the tab content
                tabMap[TabName].content.destroy();
                if (tabMap[TabName]) {
                    leistrap.get(tabMap[TabName].btn, "destroy")
                        .then(elem => delete tabMap[TabName]);
                }
                else { delete tabMap[tabName]; }
            }
        }
        /** destroy the tab component */
        function destroy() {
            // clear the tabMap object
            loopObject(tabMap, (value, key) => delete tabMap[key]);
            // clear the TAB object 
            loopObject(TAB, (value, key) => delete TAB[key]);
            buttonsContainer.destroy();
            contentContainer.destroy();
            event.clear();
            TAG_NAME = null;
        }

        const TAB = {
            buttonsContainer,
            contentContainer,
            define,
            invoke,
            useElement,
            destroy,
            remove,
            event,
            trackAll : null
        };

        return TAB
    }

    var inputCss = "\r\n:root{\r\n    --leis-focus : #007bff;\r\n    --leis-focus-bx : rgba(13, 110, 253, .25);\r\n}\r\n.leis-card-radioBtns-container,\r\n.leis-card-checkboxBtns-container,\r\n.leis-card-switchboxBtns-container {\r\n    position: relative;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    margin-bottom: 0.2rem;\r\n    gap: 0.255rem;\r\n}\r\n\r\n.leis-card-radioBtns-container *>label,\r\n.leis-card-checkboxBtns-container *>label,\r\n.leis-card-switchboxBtns-container *>label,\r\n.leis-textboxinput-container *>label {\r\n    font-size: inherit;\r\n    font-weight: inherit;\r\n}\r\n\r\n.leis-radioBtns-card,\r\n.leis-checkboxBtns-card,\r\n.leis-switchboxBtns-card {\r\n    position: relative;\r\n    width: auto;\r\n    display: flex;\r\n    flex-direction: row;\r\n    text-overflow: ellipsis;\r\n    justify-content: start;\r\n    flex-wrap: wrap;\r\n    gap: 0.255rem;\r\n}\r\n\r\n.leis-radioBtn,\r\n.leis-checkboxtBtn,\r\n.leis-switchboxtBtn {\r\n    appearance: none;\r\n    font-size: inherit;\r\n    font-weight: inherit;\r\n}\r\n\r\n\r\n\r\n.leis-radioBtn::after,\r\n.leis-checkboxtBtn,\r\n.leis-switchboxtBtn {\r\n    display: inline-block;\r\n    content: \"\";\r\n    width: 15px;\r\n    height: 15px;\r\n    background-color: inherit;\r\n    border-radius: 50%;\r\n    border: 1px solid #aaa;\r\n\r\n}\r\n\r\n.leis-checkboxtBtn {\r\n    top: 5px;\r\n    border: 1px solid #aaa;\r\n    outline: none;\r\n    border-radius: 0.222em;\r\n}\r\n\r\n.leis-switchboxtBtn {\r\n    top: 7px;\r\n    height: 15px;\r\n    width: 30px;\r\n    outline: none;\r\n    border-radius: 7px;\r\n}\r\n\r\n.leis-switchboxtBtn::after {\r\n    content: \"\";\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 10px;\r\n    height: 10px;\r\n    top: 15%;\r\n    left: 8%;\r\n    border-radius: 50%;\r\n    background-color: #aaa;\r\n    transition: left .3s ease;\r\n}\r\n\r\n.leis-checkboxtBtn:checked,\r\n.leis-switchboxtBtn:checked {\r\n    outline: none;\r\n    background-color:  var(--leis-focus);\r\n    filter: brightness(100%);\r\n}\r\n\r\n.leis-switchboxtBtn:checked::after {\r\n    left: 52%;\r\n    background-color: #fff;\r\n}\r\n\r\n.leis-checkboxtBtn:focus,\r\n.leis-switchboxtBtn:focus {\r\n    box-shadow: 0 0 0 .25rem var(--leis-focus-bx);\r\n}\r\n\r\n.leis-checkboxtBtn:checked::after {\r\n    content: \"\";\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 8px;\r\n    height: 5px;\r\n    left: calc(50% - 5px);\r\n    top: 20%;\r\n    border-left: 2px solid #fff;\r\n    border-bottom: 2px solid #fff;\r\n    transform: rotateZ(-60deg);\r\n\r\n}\r\n\r\n.leis-radioBtn:checked::after {\r\n    border: 0.333em solid var(--leis-focus);\r\n    filter: brightness(100%);\r\n}\r\n\r\n.leis-radioBtn:focus::after {\r\n    outline: none;\r\n    box-shadow: 0 0 0 .25rem var(--leis-focus-bx)\r\n}\r\n\r\n\r\n.leis-textboxinput-container {\r\n    width: 100%;\r\n    height: auto;\r\n    padding: none;\r\n    margin: 0;\r\n    margin-bottom: 0.2rem;\r\n    padding-top: 0.5rem;\r\n}\r\n\r\n.leis-textbox-card {\r\n    position: relative;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    justify-content: start;\r\n    flex-wrap: wrap-reverse;\r\n    gap: 0.5rem;\r\n    margin-bottom: 0.5rem;\r\n}\r\n\r\n.leis-textbox-card label {\r\n    display: flex;\r\n    justify-content: start;\r\n    align-content: center;\r\n}\r\n";

    leistrap.addCss(inputCss);


    // leistrap text Type inputs
    function setTextInputType(type, inputClass, cdClass, parent, label, textArea) {
        const container = leistrap.create("div", { parent, className: cdClass });
        const labelText = leistrap.create("label", { text: label, parent: container });
        const input = leistrap.create("input",
            { parent: container }).setClassName(inputClass);

        input.addAttr({type});
        labelText.addAttr('for', input.key);

        // destroying the component
        function destroy() {
            container.removeAll();
            container.destroy();
            loopObject(TEXT, function (value, key) {
                delete TEXT[key];
            });
        }
        const TEXT = {
            label: labelText,
            container,
            input,
            destroy
        };

        return TEXT
    }

    /**
     *  leistrap textBix component
     * @param {leistrap.Leistrap<HTMLInputElement>} parent 
     * @param {string} label 
     */
    function textBox(parent, label) {
        return setTextInputType(
            "text",
            "leis-textinput",
            "leis-textbox-card",
            parent,
            label
        )
    }

    var mainCss = "\r\n*{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\ni{\r\n    font-size: 1.5rem;\r\n}\r\nbody{\r\n    width: 100vw;\r\n    height: 100vh;\r\n    overflow: auto;\r\n}\r\n:root{\r\n    --bg : #fff;\r\n    --bd-color : #ddd;\r\n    --select-color : #ddddddc4;\r\n}\r\n.container{\r\n    width: 100%;\r\n    height: 100vh;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n\r\n.container .side{\r\n    width: 20%;\r\n    height: 100%;\r\n    background-color: var(--bg);\r\n    border-right: 1px solid var(--bd-color);\r\n    overflow: hidden;\r\n    padding: 10px;\r\n\r\n}\r\n\r\n\r\n.container .content{\r\n    width: 80%;\r\n    height: 100%;\r\n    background-color: var(--bg);\r\n    overflow: hidden;\r\n    overflow-y: auto;\r\n   \r\n}\r\n\r\n.book-cd{\r\n    width: 100%;\r\n    height: 90%;\r\n    overflow: hidden;\r\n    overflow-y: auto;\r\n}\r\n\r\n.book-list{\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n    list-style: none;\r\n}\r\n\r\n.book-list li,\r\n.note-list li{\r\n    padding: 8px 12px;\r\n    cursor: pointer;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.book-list li:hover,\r\n.note-list li:hover,\r\n.book-list li.active{\r\n    background-color: var(--select-color) !important;\r\n}\r\n\r\n.cd-b{\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    padding: 10px;\r\n}\r\n.n-b{\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 5px;\r\n    z-index: 1;\r\n}\r\n\r\n.n-b.cb{\r\n    right:  -50px;\r\n}\r\n.note-list{\r\n    list-style: none;\r\n    padding: 20px;\r\n}\r\n.note-list li{\r\n    border-bottom: 1px solid var(--bd-color);\r\n}\r\n\r\n.cell-editor{\r\n    resize: none;\r\n    width: 100%;\r\n    min-height: 100%;\r\n    padding: 10px;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 8px;\r\n    background: #dddddd33;\r\n    font-family: monospace !important;\r\n\r\n}\r\n\r\n.header{\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    height: 40px;\r\n    width: 100%;\r\n    padding: 10px;\r\n    justify-content: start;\r\n    align-items: center;\r\n    border-bottom: 1px solid var(--bd-color);\r\n    display: none;\r\n}\r\n\r\n.mk{\r\n    padding: 20px;\r\n}\r\n@media screen and (max-width : 1000px) {\r\n    \r\n    .header{\r\n        display: flex;\r\n    }\r\n\r\n    .container .content{\r\n       width: 100%;\r\n       padding: 0;\r\n       margin-top: 40px;\r\n       height: calc(100% - 40px);\r\n       \r\n    }\r\n    .container .side{\r\n        display: none;\r\n        width: 90%;\r\n        height: 100%;\r\n    }\r\n    .container .side._show{\r\n        display: flex;\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 100;\r\n        \r\n    }\r\n    .n-b.cb{\r\n        right: 8px;\r\n        top: calc(100% - 50px);\r\n        background-color: black;\r\n        color: #fff;\r\n    }\r\n\r\n    .cell-editor{\r\n        width: calc(100% - 10px);\r\n        background-color: inherit;\r\n    }\r\n    .dia-editor{\r\n        width: 100% !important;\r\n        height: 100% !important;\r\n    }\r\n    .note-list{\r\n        padding: 20px 0px;\r\n    }\r\n    .cd-b{\r\n        padding: 0;\r\n    }\r\n}\r\n";

    function marked_(){
        /**
     * marked v16.0.0 - a markdown parser
     * Copyright (c) 2011-2025, Christopher Jeffrey. (MIT Licensed)
     * https://github.com/markedjs/marked
     */

    /**
     * DO NOT EDIT THIS FILE
     * The code in this file is generated from files in ./src/
     */
    (function(g,f){if(typeof exports=="object"&&typeof module<"u"){module.exports=f();}else if("function"==typeof define && define.amd){define("marked",f);}else {g["marked"]=f();}}(typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : this,function(){var exports={};var __exports=exports;var module={exports};
    var H=Object.defineProperty;var be=Object.getOwnPropertyDescriptor;var Te=Object.getOwnPropertyNames;var we=Object.prototype.hasOwnProperty;var ye=(l,e)=>{for(var t in e)H(l,t,{get:e[t],enumerable:!0});},Re=(l,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of Te(e))!we.call(l,s)&&s!==t&&H(l,s,{get:()=>e[s],enumerable:!(n=be(e,s))||n.enumerable});return l};var Se=l=>Re(H({},"__esModule",{value:!0}),l);var kt={};ye(kt,{Hooks:()=>L,Lexer:()=>x,Marked:()=>E,Parser:()=>b,Renderer:()=>$,TextRenderer:()=>_,Tokenizer:()=>S,defaults:()=>w,getDefaults:()=>z,lexer:()=>ht,marked:()=>k,options:()=>it,parse:()=>pt,parseInline:()=>ct,parser:()=>ut,setOptions:()=>ot,use:()=>lt,walkTokens:()=>at});module.exports=Se(kt);function z(){return {async:!1,breaks:!1,extensions:null,gfm:!0,hooks:null,pedantic:!1,renderer:null,silent:!1,tokenizer:null,walkTokens:null}}var w=z();function N(l){w=l;}var I={exec:()=>null};function h(l,e=""){let t=typeof l=="string"?l:l.source,n={replace:(s,i)=>{let r=typeof i=="string"?i:i.source;return r=r.replace(m.caret,"$1"),t=t.replace(s,r),n},getRegex:()=>new RegExp(t,e)};return n}var m={codeRemoveIndent:/^(?: {1,4}| {0,3}\t)/gm,outputLinkReplace:/\\([\[\]])/g,indentCodeCompensation:/^(\s+)(?:```)/,beginningSpace:/^\s+/,endingHash:/#$/,startingSpaceChar:/^ /,endingSpaceChar:/ $/,nonSpaceChar:/[^ ]/,newLineCharGlobal:/\n/g,tabCharGlobal:/\t/g,multipleSpaceGlobal:/\s+/g,blankLine:/^[ \t]*$/,doubleBlankLine:/\n[ \t]*\n[ \t]*$/,blockquoteStart:/^ {0,3}>/,blockquoteSetextReplace:/\n {0,3}((?:=+|-+) *)(?=\n|$)/g,blockquoteSetextReplace2:/^ {0,3}>[ \t]?/gm,listReplaceTabs:/^\t+/,listReplaceNesting:/^ {1,4}(?=( {4})*[^ ])/g,listIsTask:/^\[[ xX]\] /,listReplaceTask:/^\[[ xX]\] +/,anyLine:/\n.*\n/,hrefBrackets:/^<(.*)>$/,tableDelimiter:/[:|]/,tableAlignChars:/^\||\| *$/g,tableRowBlankLine:/\n[ \t]*$/,tableAlignRight:/^ *-+: *$/,tableAlignCenter:/^ *:-+: *$/,tableAlignLeft:/^ *:-+ *$/,startATag:/^<a /i,endATag:/^<\/a>/i,startPreScriptTag:/^<(pre|code|kbd|script)(\s|>)/i,endPreScriptTag:/^<\/(pre|code|kbd|script)(\s|>)/i,startAngleBracket:/^</,endAngleBracket:/>$/,pedanticHrefTitle:/^([^'"]*[^\s])\s+(['"])(.*)\2/,unicodeAlphaNumeric:/[\p{L}\p{N}]/u,escapeTest:/[&<>"']/,escapeReplace:/[&<>"']/g,escapeTestNoEncode:/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,escapeReplaceNoEncode:/[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/g,unescapeTest:/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig,caret:/(^|[^\[])\^/g,percentDecode:/%25/g,findPipe:/\|/g,splitPipe:/ \|/,slashPipe:/\\\|/g,carriageReturn:/\r\n|\r/g,spaceLine:/^ +$/gm,notSpaceStart:/^\S*/,endingNewline:/\n$/,listItemRegex:l=>new RegExp(`^( {0,3}${l})((?:[	 ][^\\n]*)?(?:\\n|$))`),nextBulletRegex:l=>new RegExp(`^ {0,${Math.min(3,l-1)}}(?:[*+-]|\\d{1,9}[.)])((?:[ 	][^\\n]*)?(?:\\n|$))`),hrRegex:l=>new RegExp(`^ {0,${Math.min(3,l-1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`),fencesBeginRegex:l=>new RegExp(`^ {0,${Math.min(3,l-1)}}(?:\`\`\`|~~~)`),headingBeginRegex:l=>new RegExp(`^ {0,${Math.min(3,l-1)}}#`),htmlBeginRegex:l=>new RegExp(`^ {0,${Math.min(3,l-1)}}<(?:[a-z].*>|!--)`,"i")},$e=/^(?:[ \t]*(?:\n|$))+/,_e=/^((?: {4}| {0,3}\t)[^\n]+(?:\n(?:[ \t]*(?:\n|$))*)?)+/,Le=/^ {0,3}(`{3,}(?=[^`\n]*(?:\n|$))|~{3,})([^\n]*)(?:\n|$)(?:|([\s\S]*?)(?:\n|$))(?: {0,3}\1[~`]* *(?=\n|$)|$)/,O=/^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,ze=/^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,F=/(?:[*+-]|\d{1,9}[.)])/,ie=/^(?!bull |blockCode|fences|blockquote|heading|html|table)((?:.|\n(?!\s*?\n|bull |blockCode|fences|blockquote|heading|html|table))+?)\n {0,3}(=+|-+) *(?:\n+|$)/,oe=h(ie).replace(/bull/g,F).replace(/blockCode/g,/(?: {4}| {0,3}\t)/).replace(/fences/g,/ {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g,/ {0,3}>/).replace(/heading/g,/ {0,3}#{1,6}/).replace(/html/g,/ {0,3}<[^\n>]+>\n/).replace(/\|table/g,"").getRegex(),Me=h(ie).replace(/bull/g,F).replace(/blockCode/g,/(?: {4}| {0,3}\t)/).replace(/fences/g,/ {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g,/ {0,3}>/).replace(/heading/g,/ {0,3}#{1,6}/).replace(/html/g,/ {0,3}<[^\n>]+>\n/).replace(/table/g,/ {0,3}\|?(?:[:\- ]*\|)+[\:\- ]*\n/).getRegex(),Q=/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,Pe=/^[^\n]+/,U=/(?!\s*\])(?:\\.|[^\[\]\\])+/,Ae=h(/^ {0,3}\[(label)\]: *(?:\n[ \t]*)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n[ \t]*)?| *\n[ \t]*)(title))? *(?:\n+|$)/).replace("label",U).replace("title",/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/).getRegex(),Ee=h(/^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/).replace(/bull/g,F).getRegex(),v="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",K=/<!--(?:-?>|[\s\S]*?(?:-->|$))/,Ce=h("^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n[ 	]*)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n[ 	]*)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n[ 	]*)+\\n|$))","i").replace("comment",K).replace("tag",v).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),le=h(Q).replace("hr",O).replace("heading"," {0,3}#{1,6}(?:\\s|$)").replace("|lheading","").replace("|table","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",v).getRegex(),Ie=h(/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/).replace("paragraph",le).getRegex(),X={blockquote:Ie,code:_e,def:Ae,fences:Le,heading:ze,hr:O,html:Ce,lheading:oe,list:Ee,newline:$e,paragraph:le,table:I,text:Pe},re=h("^ *([^\\n ].*)\\n {0,3}((?:\\| *)?:?-+:? *(?:\\| *:?-+:? *)*(?:\\| *)?)(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)").replace("hr",O).replace("heading"," {0,3}#{1,6}(?:\\s|$)").replace("blockquote"," {0,3}>").replace("code","(?: {4}| {0,3}	)[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",v).getRegex(),Oe={...X,lheading:Me,table:re,paragraph:h(Q).replace("hr",O).replace("heading"," {0,3}#{1,6}(?:\\s|$)").replace("|lheading","").replace("table",re).replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",v).getRegex()},Be={...X,html:h(`^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`).replace("comment",K).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^(#{1,6})(.*)(?:\n+|$)/,fences:I,lheading:/^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,paragraph:h(Q).replace("hr",O).replace("heading",` *#{1,6} *[^
]`).replace("lheading",oe).replace("|table","").replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").replace("|tag","").getRegex()},qe=/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,ve=/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,ae=/^( {2,}|\\)\n(?!\s*$)/,De=/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,D=/[\p{P}\p{S}]/u,W=/[\s\p{P}\p{S}]/u,ce=/[^\s\p{P}\p{S}]/u,Ze=h(/^((?![*_])punctSpace)/,"u").replace(/punctSpace/g,W).getRegex(),pe=/(?!~)[\p{P}\p{S}]/u,Ge=/(?!~)[\s\p{P}\p{S}]/u,He=/(?:[^\s\p{P}\p{S}]|~)/u,Ne=/\[[^[\]]*?\]\((?:\\.|[^\\\(\)]|\((?:\\.|[^\\\(\)])*\))*\)|`[^`]*?`|<[^<>]*?>/g,ue=/^(?:\*+(?:((?!\*)punct)|[^\s*]))|^_+(?:((?!_)punct)|([^\s_]))/,je=h(ue,"u").replace(/punct/g,D).getRegex(),Fe=h(ue,"u").replace(/punct/g,pe).getRegex(),he="^[^_*]*?__[^_*]*?\\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\\*)punct(\\*+)(?=[\\s]|$)|notPunctSpace(\\*+)(?!\\*)(?=punctSpace|$)|(?!\\*)punctSpace(\\*+)(?=notPunctSpace)|[\\s](\\*+)(?!\\*)(?=punct)|(?!\\*)punct(\\*+)(?!\\*)(?=punct)|notPunctSpace(\\*+)(?=notPunctSpace)",Qe=h(he,"gu").replace(/notPunctSpace/g,ce).replace(/punctSpace/g,W).replace(/punct/g,D).getRegex(),Ue=h(he,"gu").replace(/notPunctSpace/g,He).replace(/punctSpace/g,Ge).replace(/punct/g,pe).getRegex(),Ke=h("^[^_*]*?\\*\\*[^_*]*?_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|(?!_)punct(_+)(?=[\\s]|$)|notPunctSpace(_+)(?!_)(?=punctSpace|$)|(?!_)punctSpace(_+)(?=notPunctSpace)|[\\s](_+)(?!_)(?=punct)|(?!_)punct(_+)(?!_)(?=punct)","gu").replace(/notPunctSpace/g,ce).replace(/punctSpace/g,W).replace(/punct/g,D).getRegex(),Xe=h(/\\(punct)/,"gu").replace(/punct/g,D).getRegex(),We=h(/^<(scheme:[^\s\x00-\x1f<>]*|email)>/).replace("scheme",/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/).replace("email",/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/).getRegex(),Je=h(K).replace("(?:-->|$)","-->").getRegex(),Ve=h("^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>").replace("comment",Je).replace("attribute",/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/).getRegex(),q=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,Ye=h(/^!?\[(label)\]\(\s*(href)(?:(?:[ \t]*(?:\n[ \t]*)?)(title))?\s*\)/).replace("label",q).replace("href",/<(?:\\.|[^\n<>\\])+>|[^ \t\n\x00-\x1f]*/).replace("title",/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/).getRegex(),ke=h(/^!?\[(label)\]\[(ref)\]/).replace("label",q).replace("ref",U).getRegex(),ge=h(/^!?\[(ref)\](?:\[\])?/).replace("ref",U).getRegex(),et=h("reflink|nolink(?!\\()","g").replace("reflink",ke).replace("nolink",ge).getRegex(),J={_backpedal:I,anyPunctuation:Xe,autolink:We,blockSkip:Ne,br:ae,code:ve,del:I,emStrongLDelim:je,emStrongRDelimAst:Qe,emStrongRDelimUnd:Ke,escape:qe,link:Ye,nolink:ge,punctuation:Ze,reflink:ke,reflinkSearch:et,tag:Ve,text:De,url:I},tt={...J,link:h(/^!?\[(label)\]\((.*?)\)/).replace("label",q).getRegex(),reflink:h(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",q).getRegex()},j={...J,emStrongRDelimAst:Ue,emStrongLDelim:Fe,url:h(/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,"i").replace("email",/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/).getRegex(),_backpedal:/(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])((?:\\.|[^\\])*?(?:\\.|[^\s~\\]))\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/},nt={...j,br:h(ae).replace("{2,}","*").getRegex(),text:h(j.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()},B={normal:X,gfm:Oe,pedantic:Be},P={normal:J,gfm:j,breaks:nt,pedantic:tt};var st={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},fe=l=>st[l];function R(l,e){if(e){if(m.escapeTest.test(l))return l.replace(m.escapeReplace,fe)}else if(m.escapeTestNoEncode.test(l))return l.replace(m.escapeReplaceNoEncode,fe);return l}function V(l){try{l=encodeURI(l).replace(m.percentDecode,"%");}catch{return null}return l}function Y(l,e){let t=l.replace(m.findPipe,(i,r,o)=>{let a=!1,c=r;for(;--c>=0&&o[c]==="\\";)a=!a;return a?"|":" |"}),n=t.split(m.splitPipe),s=0;if(n[0].trim()||n.shift(),n.length>0&&!n.at(-1)?.trim()&&n.pop(),e)if(n.length>e)n.splice(e);else for(;n.length<e;)n.push("");for(;s<n.length;s++)n[s]=n[s].trim().replace(m.slashPipe,"|");return n}function A(l,e,t){let n=l.length;if(n===0)return "";let s=0;for(;s<n;){let i=l.charAt(n-s-1);if(i===e&&!t)s++;else if(i!==e&&t)s++;else break}return l.slice(0,n-s)}function de(l,e){if(l.indexOf(e[1])===-1)return -1;let t=0;for(let n=0;n<l.length;n++)if(l[n]==="\\")n++;else if(l[n]===e[0])t++;else if(l[n]===e[1]&&(t--,t<0))return n;return t>0?-2:-1}function me(l,e,t,n,s){let i=e.href,r=e.title||null,o=l[1].replace(s.other.outputLinkReplace,"$1");n.state.inLink=!0;let a={type:l[0].charAt(0)==="!"?"image":"link",raw:t,href:i,title:r,text:o,tokens:n.inlineTokens(o)};return n.state.inLink=!1,a}function rt(l,e,t){let n=l.match(t.other.indentCodeCompensation);if(n===null)return e;let s=n[1];return e.split(`
`).map(i=>{let r=i.match(t.other.beginningSpace);if(r===null)return i;let[o]=r;return o.length>=s.length?i.slice(s.length):i}).join(`
`)}var S=class{options;rules;lexer;constructor(e){this.options=e||w;}space(e){let t=this.rules.block.newline.exec(e);if(t&&t[0].length>0)return {type:"space",raw:t[0]}}code(e){let t=this.rules.block.code.exec(e);if(t){let n=t[0].replace(this.rules.other.codeRemoveIndent,"");return {type:"code",raw:t[0],codeBlockStyle:"indented",text:this.options.pedantic?n:A(n,`
`)}}}fences(e){let t=this.rules.block.fences.exec(e);if(t){let n=t[0],s=rt(n,t[3]||"",this.rules);return {type:"code",raw:n,lang:t[2]?t[2].trim().replace(this.rules.inline.anyPunctuation,"$1"):t[2],text:s}}}heading(e){let t=this.rules.block.heading.exec(e);if(t){let n=t[2].trim();if(this.rules.other.endingHash.test(n)){let s=A(n,"#");(this.options.pedantic||!s||this.rules.other.endingSpaceChar.test(s))&&(n=s.trim());}return {type:"heading",raw:t[0],depth:t[1].length,text:n,tokens:this.lexer.inline(n)}}}hr(e){let t=this.rules.block.hr.exec(e);if(t)return {type:"hr",raw:A(t[0],`
`)}}blockquote(e){let t=this.rules.block.blockquote.exec(e);if(t){let n=A(t[0],`
`).split(`
`),s="",i="",r=[];for(;n.length>0;){let o=!1,a=[],c;for(c=0;c<n.length;c++)if(this.rules.other.blockquoteStart.test(n[c]))a.push(n[c]),o=!0;else if(!o)a.push(n[c]);else break;n=n.slice(c);let p=a.join(`
`),u=p.replace(this.rules.other.blockquoteSetextReplace,`
    $1`).replace(this.rules.other.blockquoteSetextReplace2,"");s=s?`${s}
${p}`:p,i=i?`${i}
${u}`:u;let d=this.lexer.state.top;if(this.lexer.state.top=!0,this.lexer.blockTokens(u,r,!0),this.lexer.state.top=d,n.length===0)break;let g=r.at(-1);if(g?.type==="code")break;if(g?.type==="blockquote"){let T=g,f=T.raw+`
`+n.join(`
`),y=this.blockquote(f);r[r.length-1]=y,s=s.substring(0,s.length-T.raw.length)+y.raw,i=i.substring(0,i.length-T.text.length)+y.text;break}else if(g?.type==="list"){let T=g,f=T.raw+`
`+n.join(`
`),y=this.list(f);r[r.length-1]=y,s=s.substring(0,s.length-g.raw.length)+y.raw,i=i.substring(0,i.length-T.raw.length)+y.raw,n=f.substring(r.at(-1).raw.length).split(`
`);continue}}return {type:"blockquote",raw:s,tokens:r,text:i}}}list(e){let t=this.rules.block.list.exec(e);if(t){let n=t[1].trim(),s=n.length>1,i={type:"list",raw:"",ordered:s,start:s?+n.slice(0,-1):"",loose:!1,items:[]};n=s?`\\d{1,9}\\${n.slice(-1)}`:`\\${n}`,this.options.pedantic&&(n=s?n:"[*+-]");let r=this.rules.other.listItemRegex(n),o=!1;for(;e;){let c=!1,p="",u="";if(!(t=r.exec(e))||this.rules.block.hr.test(e))break;p=t[0],e=e.substring(p.length);let d=t[2].split(`
`,1)[0].replace(this.rules.other.listReplaceTabs,Z=>" ".repeat(3*Z.length)),g=e.split(`
`,1)[0],T=!d.trim(),f=0;if(this.options.pedantic?(f=2,u=d.trimStart()):T?f=t[1].length+1:(f=t[2].search(this.rules.other.nonSpaceChar),f=f>4?1:f,u=d.slice(f),f+=t[1].length),T&&this.rules.other.blankLine.test(g)&&(p+=g+`
`,e=e.substring(g.length+1),c=!0),!c){let Z=this.rules.other.nextBulletRegex(f),te=this.rules.other.hrRegex(f),ne=this.rules.other.fencesBeginRegex(f),se=this.rules.other.headingBeginRegex(f),xe=this.rules.other.htmlBeginRegex(f);for(;e;){let G=e.split(`
`,1)[0],C;if(g=G,this.options.pedantic?(g=g.replace(this.rules.other.listReplaceNesting,"  "),C=g):C=g.replace(this.rules.other.tabCharGlobal,"    "),ne.test(g)||se.test(g)||xe.test(g)||Z.test(g)||te.test(g))break;if(C.search(this.rules.other.nonSpaceChar)>=f||!g.trim())u+=`
`+C.slice(f);else {if(T||d.replace(this.rules.other.tabCharGlobal,"    ").search(this.rules.other.nonSpaceChar)>=4||ne.test(d)||se.test(d)||te.test(d))break;u+=`
`+g;}!T&&!g.trim()&&(T=!0),p+=G+`
`,e=e.substring(G.length+1),d=C.slice(f);}}i.loose||(o?i.loose=!0:this.rules.other.doubleBlankLine.test(p)&&(o=!0));let y=null,ee;this.options.gfm&&(y=this.rules.other.listIsTask.exec(u),y&&(ee=y[0]!=="[ ] ",u=u.replace(this.rules.other.listReplaceTask,""))),i.items.push({type:"list_item",raw:p,task:!!y,checked:ee,loose:!1,text:u,tokens:[]}),i.raw+=p;}let a=i.items.at(-1);if(a)a.raw=a.raw.trimEnd(),a.text=a.text.trimEnd();else return;i.raw=i.raw.trimEnd();for(let c=0;c<i.items.length;c++)if(this.lexer.state.top=!1,i.items[c].tokens=this.lexer.blockTokens(i.items[c].text,[]),!i.loose){let p=i.items[c].tokens.filter(d=>d.type==="space"),u=p.length>0&&p.some(d=>this.rules.other.anyLine.test(d.raw));i.loose=u;}if(i.loose)for(let c=0;c<i.items.length;c++)i.items[c].loose=!0;return i}}html(e){let t=this.rules.block.html.exec(e);if(t)return {type:"html",block:!0,raw:t[0],pre:t[1]==="pre"||t[1]==="script"||t[1]==="style",text:t[0]}}def(e){let t=this.rules.block.def.exec(e);if(t){let n=t[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal," "),s=t[2]?t[2].replace(this.rules.other.hrefBrackets,"$1").replace(this.rules.inline.anyPunctuation,"$1"):"",i=t[3]?t[3].substring(1,t[3].length-1).replace(this.rules.inline.anyPunctuation,"$1"):t[3];return {type:"def",tag:n,raw:t[0],href:s,title:i}}}table(e){let t=this.rules.block.table.exec(e);if(!t||!this.rules.other.tableDelimiter.test(t[2]))return;let n=Y(t[1]),s=t[2].replace(this.rules.other.tableAlignChars,"").split("|"),i=t[3]?.trim()?t[3].replace(this.rules.other.tableRowBlankLine,"").split(`
`):[],r={type:"table",raw:t[0],header:[],align:[],rows:[]};if(n.length===s.length){for(let o of s)this.rules.other.tableAlignRight.test(o)?r.align.push("right"):this.rules.other.tableAlignCenter.test(o)?r.align.push("center"):this.rules.other.tableAlignLeft.test(o)?r.align.push("left"):r.align.push(null);for(let o=0;o<n.length;o++)r.header.push({text:n[o],tokens:this.lexer.inline(n[o]),header:!0,align:r.align[o]});for(let o of i)r.rows.push(Y(o,r.header.length).map((a,c)=>({text:a,tokens:this.lexer.inline(a),header:!1,align:r.align[c]})));return r}}lheading(e){let t=this.rules.block.lheading.exec(e);if(t)return {type:"heading",raw:t[0],depth:t[2].charAt(0)==="="?1:2,text:t[1],tokens:this.lexer.inline(t[1])}}paragraph(e){let t=this.rules.block.paragraph.exec(e);if(t){let n=t[1].charAt(t[1].length-1)===`
`?t[1].slice(0,-1):t[1];return {type:"paragraph",raw:t[0],text:n,tokens:this.lexer.inline(n)}}}text(e){let t=this.rules.block.text.exec(e);if(t)return {type:"text",raw:t[0],text:t[0],tokens:this.lexer.inline(t[0])}}escape(e){let t=this.rules.inline.escape.exec(e);if(t)return {type:"escape",raw:t[0],text:t[1]}}tag(e){let t=this.rules.inline.tag.exec(e);if(t)return !this.lexer.state.inLink&&this.rules.other.startATag.test(t[0])?this.lexer.state.inLink=!0:this.lexer.state.inLink&&this.rules.other.endATag.test(t[0])&&(this.lexer.state.inLink=!1),!this.lexer.state.inRawBlock&&this.rules.other.startPreScriptTag.test(t[0])?this.lexer.state.inRawBlock=!0:this.lexer.state.inRawBlock&&this.rules.other.endPreScriptTag.test(t[0])&&(this.lexer.state.inRawBlock=!1),{type:"html",raw:t[0],inLink:this.lexer.state.inLink,inRawBlock:this.lexer.state.inRawBlock,block:!1,text:t[0]}}link(e){let t=this.rules.inline.link.exec(e);if(t){let n=t[2].trim();if(!this.options.pedantic&&this.rules.other.startAngleBracket.test(n)){if(!this.rules.other.endAngleBracket.test(n))return;let r=A(n.slice(0,-1),"\\");if((n.length-r.length)%2===0)return}else {let r=de(t[2],"()");if(r===-2)return;if(r>-1){let a=(t[0].indexOf("!")===0?5:4)+t[1].length+r;t[2]=t[2].substring(0,r),t[0]=t[0].substring(0,a).trim(),t[3]="";}}let s=t[2],i="";if(this.options.pedantic){let r=this.rules.other.pedanticHrefTitle.exec(s);r&&(s=r[1],i=r[3]);}else i=t[3]?t[3].slice(1,-1):"";return s=s.trim(),this.rules.other.startAngleBracket.test(s)&&(this.options.pedantic&&!this.rules.other.endAngleBracket.test(n)?s=s.slice(1):s=s.slice(1,-1)),me(t,{href:s&&s.replace(this.rules.inline.anyPunctuation,"$1"),title:i&&i.replace(this.rules.inline.anyPunctuation,"$1")},t[0],this.lexer,this.rules)}}reflink(e,t){let n;if((n=this.rules.inline.reflink.exec(e))||(n=this.rules.inline.nolink.exec(e))){let s=(n[2]||n[1]).replace(this.rules.other.multipleSpaceGlobal," "),i=t[s.toLowerCase()];if(!i){let r=n[0].charAt(0);return {type:"text",raw:r,text:r}}return me(n,i,n[0],this.lexer,this.rules)}}emStrong(e,t,n=""){let s=this.rules.inline.emStrongLDelim.exec(e);if(!s||s[3]&&n.match(this.rules.other.unicodeAlphaNumeric))return;if(!(s[1]||s[2]||"")||!n||this.rules.inline.punctuation.exec(n)){let r=[...s[0]].length-1,o,a,c=r,p=0,u=s[0][0]==="*"?this.rules.inline.emStrongRDelimAst:this.rules.inline.emStrongRDelimUnd;for(u.lastIndex=0,t=t.slice(-1*e.length+r);(s=u.exec(t))!=null;){if(o=s[1]||s[2]||s[3]||s[4]||s[5]||s[6],!o)continue;if(a=[...o].length,s[3]||s[4]){c+=a;continue}else if((s[5]||s[6])&&r%3&&!((r+a)%3)){p+=a;continue}if(c-=a,c>0)continue;a=Math.min(a,a+c+p);let d=[...s[0]][0].length,g=e.slice(0,r+s.index+d+a);if(Math.min(r,a)%2){let f=g.slice(1,-1);return {type:"em",raw:g,text:f,tokens:this.lexer.inlineTokens(f)}}let T=g.slice(2,-2);return {type:"strong",raw:g,text:T,tokens:this.lexer.inlineTokens(T)}}}}codespan(e){let t=this.rules.inline.code.exec(e);if(t){let n=t[2].replace(this.rules.other.newLineCharGlobal," "),s=this.rules.other.nonSpaceChar.test(n),i=this.rules.other.startingSpaceChar.test(n)&&this.rules.other.endingSpaceChar.test(n);return s&&i&&(n=n.substring(1,n.length-1)),{type:"codespan",raw:t[0],text:n}}}br(e){let t=this.rules.inline.br.exec(e);if(t)return {type:"br",raw:t[0]}}del(e){let t=this.rules.inline.del.exec(e);if(t)return {type:"del",raw:t[0],text:t[2],tokens:this.lexer.inlineTokens(t[2])}}autolink(e){let t=this.rules.inline.autolink.exec(e);if(t){let n,s;return t[2]==="@"?(n=t[1],s="mailto:"+n):(n=t[1],s=n),{type:"link",raw:t[0],text:n,href:s,tokens:[{type:"text",raw:n,text:n}]}}}url(e){let t;if(t=this.rules.inline.url.exec(e)){let n,s;if(t[2]==="@")n=t[0],s="mailto:"+n;else {let i;do i=t[0],t[0]=this.rules.inline._backpedal.exec(t[0])?.[0]??"";while(i!==t[0]);n=t[0],t[1]==="www."?s="http://"+t[0]:s=t[0];}return {type:"link",raw:t[0],text:n,href:s,tokens:[{type:"text",raw:n,text:n}]}}}inlineText(e){let t=this.rules.inline.text.exec(e);if(t){let n=this.lexer.state.inRawBlock;return {type:"text",raw:t[0],text:t[0],escaped:n}}}};var x=class l{tokens;options;state;tokenizer;inlineQueue;constructor(e){this.tokens=[],this.tokens.links=Object.create(null),this.options=e||w,this.options.tokenizer=this.options.tokenizer||new S,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options,this.tokenizer.lexer=this,this.inlineQueue=[],this.state={inLink:!1,inRawBlock:!1,top:!0};let t={other:m,block:B.normal,inline:P.normal};this.options.pedantic?(t.block=B.pedantic,t.inline=P.pedantic):this.options.gfm&&(t.block=B.gfm,this.options.breaks?t.inline=P.breaks:t.inline=P.gfm),this.tokenizer.rules=t;}static get rules(){return {block:B,inline:P}}static lex(e,t){return new l(t).lex(e)}static lexInline(e,t){return new l(t).inlineTokens(e)}lex(e){e=e.replace(m.carriageReturn,`
`),this.blockTokens(e,this.tokens);for(let t=0;t<this.inlineQueue.length;t++){let n=this.inlineQueue[t];this.inlineTokens(n.src,n.tokens);}return this.inlineQueue=[],this.tokens}blockTokens(e,t=[],n=!1){for(this.options.pedantic&&(e=e.replace(m.tabCharGlobal,"    ").replace(m.spaceLine,""));e;){let s;if(this.options.extensions?.block?.some(r=>(s=r.call({lexer:this},e,t))?(e=e.substring(s.raw.length),t.push(s),!0):!1))continue;if(s=this.tokenizer.space(e)){e=e.substring(s.raw.length);let r=t.at(-1);s.raw.length===1&&r!==void 0?r.raw+=`
`:t.push(s);continue}if(s=this.tokenizer.code(e)){e=e.substring(s.raw.length);let r=t.at(-1);r?.type==="paragraph"||r?.type==="text"?(r.raw+=`
`+s.raw,r.text+=`
`+s.text,this.inlineQueue.at(-1).src=r.text):t.push(s);continue}if(s=this.tokenizer.fences(e)){e=e.substring(s.raw.length),t.push(s);continue}if(s=this.tokenizer.heading(e)){e=e.substring(s.raw.length),t.push(s);continue}if(s=this.tokenizer.hr(e)){e=e.substring(s.raw.length),t.push(s);continue}if(s=this.tokenizer.blockquote(e)){e=e.substring(s.raw.length),t.push(s);continue}if(s=this.tokenizer.list(e)){e=e.substring(s.raw.length),t.push(s);continue}if(s=this.tokenizer.html(e)){e=e.substring(s.raw.length),t.push(s);continue}if(s=this.tokenizer.def(e)){e=e.substring(s.raw.length);let r=t.at(-1);r?.type==="paragraph"||r?.type==="text"?(r.raw+=`
`+s.raw,r.text+=`
`+s.raw,this.inlineQueue.at(-1).src=r.text):this.tokens.links[s.tag]||(this.tokens.links[s.tag]={href:s.href,title:s.title});continue}if(s=this.tokenizer.table(e)){e=e.substring(s.raw.length),t.push(s);continue}if(s=this.tokenizer.lheading(e)){e=e.substring(s.raw.length),t.push(s);continue}let i=e;if(this.options.extensions?.startBlock){let r=1/0,o=e.slice(1),a;this.options.extensions.startBlock.forEach(c=>{a=c.call({lexer:this},o),typeof a=="number"&&a>=0&&(r=Math.min(r,a));}),r<1/0&&r>=0&&(i=e.substring(0,r+1));}if(this.state.top&&(s=this.tokenizer.paragraph(i))){let r=t.at(-1);n&&r?.type==="paragraph"?(r.raw+=`
`+s.raw,r.text+=`
`+s.text,this.inlineQueue.pop(),this.inlineQueue.at(-1).src=r.text):t.push(s),n=i.length!==e.length,e=e.substring(s.raw.length);continue}if(s=this.tokenizer.text(e)){e=e.substring(s.raw.length);let r=t.at(-1);r?.type==="text"?(r.raw+=`
`+s.raw,r.text+=`
`+s.text,this.inlineQueue.pop(),this.inlineQueue.at(-1).src=r.text):t.push(s);continue}if(e){let r="Infinite loop on byte: "+e.charCodeAt(0);if(this.options.silent){console.error(r);break}else throw new Error(r)}}return this.state.top=!0,t}inline(e,t=[]){return this.inlineQueue.push({src:e,tokens:t}),t}inlineTokens(e,t=[]){let n=e,s=null;if(this.tokens.links){let o=Object.keys(this.tokens.links);if(o.length>0)for(;(s=this.tokenizer.rules.inline.reflinkSearch.exec(n))!=null;)o.includes(s[0].slice(s[0].lastIndexOf("[")+1,-1))&&(n=n.slice(0,s.index)+"["+"a".repeat(s[0].length-2)+"]"+n.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex));}for(;(s=this.tokenizer.rules.inline.anyPunctuation.exec(n))!=null;)n=n.slice(0,s.index)+"++"+n.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);for(;(s=this.tokenizer.rules.inline.blockSkip.exec(n))!=null;)n=n.slice(0,s.index)+"["+"a".repeat(s[0].length-2)+"]"+n.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);let i=!1,r="";for(;e;){i||(r=""),i=!1;let o;if(this.options.extensions?.inline?.some(c=>(o=c.call({lexer:this},e,t))?(e=e.substring(o.raw.length),t.push(o),!0):!1))continue;if(o=this.tokenizer.escape(e)){e=e.substring(o.raw.length),t.push(o);continue}if(o=this.tokenizer.tag(e)){e=e.substring(o.raw.length),t.push(o);continue}if(o=this.tokenizer.link(e)){e=e.substring(o.raw.length),t.push(o);continue}if(o=this.tokenizer.reflink(e,this.tokens.links)){e=e.substring(o.raw.length);let c=t.at(-1);o.type==="text"&&c?.type==="text"?(c.raw+=o.raw,c.text+=o.text):t.push(o);continue}if(o=this.tokenizer.emStrong(e,n,r)){e=e.substring(o.raw.length),t.push(o);continue}if(o=this.tokenizer.codespan(e)){e=e.substring(o.raw.length),t.push(o);continue}if(o=this.tokenizer.br(e)){e=e.substring(o.raw.length),t.push(o);continue}if(o=this.tokenizer.del(e)){e=e.substring(o.raw.length),t.push(o);continue}if(o=this.tokenizer.autolink(e)){e=e.substring(o.raw.length),t.push(o);continue}if(!this.state.inLink&&(o=this.tokenizer.url(e))){e=e.substring(o.raw.length),t.push(o);continue}let a=e;if(this.options.extensions?.startInline){let c=1/0,p=e.slice(1),u;this.options.extensions.startInline.forEach(d=>{u=d.call({lexer:this},p),typeof u=="number"&&u>=0&&(c=Math.min(c,u));}),c<1/0&&c>=0&&(a=e.substring(0,c+1));}if(o=this.tokenizer.inlineText(a)){e=e.substring(o.raw.length),o.raw.slice(-1)!=="_"&&(r=o.raw.slice(-1)),i=!0;let c=t.at(-1);c?.type==="text"?(c.raw+=o.raw,c.text+=o.text):t.push(o);continue}if(e){let c="Infinite loop on byte: "+e.charCodeAt(0);if(this.options.silent){console.error(c);break}else throw new Error(c)}}return t}};var $=class{options;parser;constructor(e){this.options=e||w;}space(e){return ""}code({text:e,lang:t,escaped:n}){let s=(t||"").match(m.notSpaceStart)?.[0],i=e.replace(m.endingNewline,"")+`
`;return s?'<pre><code class="language-'+R(s)+'">'+(n?i:R(i,!0))+`</code></pre>
`:"<pre><code>"+(n?i:R(i,!0))+`</code></pre>
`}blockquote({tokens:e}){return `<blockquote>
${this.parser.parse(e)}</blockquote>
`}html({text:e}){return e}heading({tokens:e,depth:t}){return `<h${t}>${this.parser.parseInline(e)}</h${t}>
`}hr(e){return `<hr>
`}list(e){let t=e.ordered,n=e.start,s="";for(let o=0;o<e.items.length;o++){let a=e.items[o];s+=this.listitem(a);}let i=t?"ol":"ul",r=t&&n!==1?' start="'+n+'"':"";return "<"+i+r+`>
`+s+"</"+i+`>
`}listitem(e){let t="";if(e.task){let n=this.checkbox({checked:!!e.checked});e.loose?e.tokens[0]?.type==="paragraph"?(e.tokens[0].text=n+" "+e.tokens[0].text,e.tokens[0].tokens&&e.tokens[0].tokens.length>0&&e.tokens[0].tokens[0].type==="text"&&(e.tokens[0].tokens[0].text=n+" "+R(e.tokens[0].tokens[0].text),e.tokens[0].tokens[0].escaped=!0)):e.tokens.unshift({type:"text",raw:n+" ",text:n+" ",escaped:!0}):t+=n+" ";}return t+=this.parser.parse(e.tokens,!!e.loose),`<li>${t}</li>
`}checkbox({checked:e}){return "<input "+(e?'checked="" ':"")+'disabled="" type="checkbox">'}paragraph({tokens:e}){return `<p>${this.parser.parseInline(e)}</p>
`}table(e){let t="",n="";for(let i=0;i<e.header.length;i++)n+=this.tablecell(e.header[i]);t+=this.tablerow({text:n});let s="";for(let i=0;i<e.rows.length;i++){let r=e.rows[i];n="";for(let o=0;o<r.length;o++)n+=this.tablecell(r[o]);s+=this.tablerow({text:n});}return s&&(s=`<tbody>${s}</tbody>`),`<table>
<thead>
`+t+`</thead>
`+s+`</table>
`}tablerow({text:e}){return `<tr>
${e}</tr>
`}tablecell(e){let t=this.parser.parseInline(e.tokens),n=e.header?"th":"td";return (e.align?`<${n} align="${e.align}">`:`<${n}>`)+t+`</${n}>
`}strong({tokens:e}){return `<strong>${this.parser.parseInline(e)}</strong>`}em({tokens:e}){return `<em>${this.parser.parseInline(e)}</em>`}codespan({text:e}){return `<code>${R(e,!0)}</code>`}br(e){return "<br>"}del({tokens:e}){return `<del>${this.parser.parseInline(e)}</del>`}link({href:e,title:t,tokens:n}){let s=this.parser.parseInline(n),i=V(e);if(i===null)return s;e=i;let r='<a href="'+e+'"';return t&&(r+=' title="'+R(t)+'"'),r+=">"+s+"</a>",r}image({href:e,title:t,text:n,tokens:s}){s&&(n=this.parser.parseInline(s,this.parser.textRenderer));let i=V(e);if(i===null)return R(n);e=i;let r=`<img src="${e}" alt="${n}"`;return t&&(r+=` title="${R(t)}"`),r+=">",r}text(e){return "tokens"in e&&e.tokens?this.parser.parseInline(e.tokens):"escaped"in e&&e.escaped?e.text:R(e.text)}};var _=class{strong({text:e}){return e}em({text:e}){return e}codespan({text:e}){return e}del({text:e}){return e}html({text:e}){return e}text({text:e}){return e}link({text:e}){return ""+e}image({text:e}){return ""+e}br(){return ""}};var b=class l{options;renderer;textRenderer;constructor(e){this.options=e||w,this.options.renderer=this.options.renderer||new $,this.renderer=this.options.renderer,this.renderer.options=this.options,this.renderer.parser=this,this.textRenderer=new _;}static parse(e,t){return new l(t).parse(e)}static parseInline(e,t){return new l(t).parseInline(e)}parse(e,t=!0){let n="";for(let s=0;s<e.length;s++){let i=e[s];if(this.options.extensions?.renderers?.[i.type]){let o=i,a=this.options.extensions.renderers[o.type].call({parser:this},o);if(a!==!1||!["space","hr","heading","code","table","blockquote","list","html","paragraph","text"].includes(o.type)){n+=a||"";continue}}let r=i;switch(r.type){case"space":{n+=this.renderer.space(r);continue}case"hr":{n+=this.renderer.hr(r);continue}case"heading":{n+=this.renderer.heading(r);continue}case"code":{n+=this.renderer.code(r);continue}case"table":{n+=this.renderer.table(r);continue}case"blockquote":{n+=this.renderer.blockquote(r);continue}case"list":{n+=this.renderer.list(r);continue}case"html":{n+=this.renderer.html(r);continue}case"paragraph":{n+=this.renderer.paragraph(r);continue}case"text":{let o=r,a=this.renderer.text(o);for(;s+1<e.length&&e[s+1].type==="text";)o=e[++s],a+=`
`+this.renderer.text(o);t?n+=this.renderer.paragraph({type:"paragraph",raw:a,text:a,tokens:[{type:"text",raw:a,text:a,escaped:!0}]}):n+=a;continue}default:{let o='Token with "'+r.type+'" type was not found.';if(this.options.silent)return console.error(o),"";throw new Error(o)}}}return n}parseInline(e,t=this.renderer){let n="";for(let s=0;s<e.length;s++){let i=e[s];if(this.options.extensions?.renderers?.[i.type]){let o=this.options.extensions.renderers[i.type].call({parser:this},i);if(o!==!1||!["escape","html","link","image","strong","em","codespan","br","del","text"].includes(i.type)){n+=o||"";continue}}let r=i;switch(r.type){case"escape":{n+=t.text(r);break}case"html":{n+=t.html(r);break}case"link":{n+=t.link(r);break}case"image":{n+=t.image(r);break}case"strong":{n+=t.strong(r);break}case"em":{n+=t.em(r);break}case"codespan":{n+=t.codespan(r);break}case"br":{n+=t.br(r);break}case"del":{n+=t.del(r);break}case"text":{n+=t.text(r);break}default:{let o='Token with "'+r.type+'" type was not found.';if(this.options.silent)return console.error(o),"";throw new Error(o)}}}return n}};var L=class{options;block;constructor(e){this.options=e||w;}static passThroughHooks=new Set(["preprocess","postprocess","processAllTokens"]);preprocess(e){return e}postprocess(e){return e}processAllTokens(e){return e}provideLexer(){return this.block?x.lex:x.lexInline}provideParser(){return this.block?b.parse:b.parseInline}};var E=class{defaults=z();options=this.setOptions;parse=this.parseMarkdown(!0);parseInline=this.parseMarkdown(!1);Parser=b;Renderer=$;TextRenderer=_;Lexer=x;Tokenizer=S;Hooks=L;constructor(...e){this.use(...e);}walkTokens(e,t){let n=[];for(let s of e)switch(n=n.concat(t.call(this,s)),s.type){case"table":{let i=s;for(let r of i.header)n=n.concat(this.walkTokens(r.tokens,t));for(let r of i.rows)for(let o of r)n=n.concat(this.walkTokens(o.tokens,t));break}case"list":{let i=s;n=n.concat(this.walkTokens(i.items,t));break}default:{let i=s;this.defaults.extensions?.childTokens?.[i.type]?this.defaults.extensions.childTokens[i.type].forEach(r=>{let o=i[r].flat(1/0);n=n.concat(this.walkTokens(o,t));}):i.tokens&&(n=n.concat(this.walkTokens(i.tokens,t)));}}return n}use(...e){let t=this.defaults.extensions||{renderers:{},childTokens:{}};return e.forEach(n=>{let s={...n};if(s.async=this.defaults.async||s.async||!1,n.extensions&&(n.extensions.forEach(i=>{if(!i.name)throw new Error("extension name required");if("renderer"in i){let r=t.renderers[i.name];r?t.renderers[i.name]=function(...o){let a=i.renderer.apply(this,o);return a===!1&&(a=r.apply(this,o)),a}:t.renderers[i.name]=i.renderer;}if("tokenizer"in i){if(!i.level||i.level!=="block"&&i.level!=="inline")throw new Error("extension level must be 'block' or 'inline'");let r=t[i.level];r?r.unshift(i.tokenizer):t[i.level]=[i.tokenizer],i.start&&(i.level==="block"?t.startBlock?t.startBlock.push(i.start):t.startBlock=[i.start]:i.level==="inline"&&(t.startInline?t.startInline.push(i.start):t.startInline=[i.start]));}"childTokens"in i&&i.childTokens&&(t.childTokens[i.name]=i.childTokens);}),s.extensions=t),n.renderer){let i=this.defaults.renderer||new $(this.defaults);for(let r in n.renderer){if(!(r in i))throw new Error(`renderer '${r}' does not exist`);if(["options","parser"].includes(r))continue;let o=r,a=n.renderer[o],c=i[o];i[o]=(...p)=>{let u=a.apply(i,p);return u===!1&&(u=c.apply(i,p)),u||""};}s.renderer=i;}if(n.tokenizer){let i=this.defaults.tokenizer||new S(this.defaults);for(let r in n.tokenizer){if(!(r in i))throw new Error(`tokenizer '${r}' does not exist`);if(["options","rules","lexer"].includes(r))continue;let o=r,a=n.tokenizer[o],c=i[o];i[o]=(...p)=>{let u=a.apply(i,p);return u===!1&&(u=c.apply(i,p)),u};}s.tokenizer=i;}if(n.hooks){let i=this.defaults.hooks||new L;for(let r in n.hooks){if(!(r in i))throw new Error(`hook '${r}' does not exist`);if(["options","block"].includes(r))continue;let o=r,a=n.hooks[o],c=i[o];L.passThroughHooks.has(r)?i[o]=p=>{if(this.defaults.async)return Promise.resolve(a.call(i,p)).then(d=>c.call(i,d));let u=a.call(i,p);return c.call(i,u)}:i[o]=(...p)=>{let u=a.apply(i,p);return u===!1&&(u=c.apply(i,p)),u};}s.hooks=i;}if(n.walkTokens){let i=this.defaults.walkTokens,r=n.walkTokens;s.walkTokens=function(o){let a=[];return a.push(r.call(this,o)),i&&(a=a.concat(i.call(this,o))),a};}this.defaults={...this.defaults,...s};}),this}setOptions(e){return this.defaults={...this.defaults,...e},this}lexer(e,t){return x.lex(e,t??this.defaults)}parser(e,t){return b.parse(e,t??this.defaults)}parseMarkdown(e){return (n,s)=>{let i={...s},r={...this.defaults,...i},o=this.onError(!!r.silent,!!r.async);if(this.defaults.async===!0&&i.async===!1)return o(new Error("marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise."));if(typeof n>"u"||n===null)return o(new Error("marked(): input parameter is undefined or null"));if(typeof n!="string")return o(new Error("marked(): input parameter is of type "+Object.prototype.toString.call(n)+", string expected"));r.hooks&&(r.hooks.options=r,r.hooks.block=e);let a=r.hooks?r.hooks.provideLexer():e?x.lex:x.lexInline,c=r.hooks?r.hooks.provideParser():e?b.parse:b.parseInline;if(r.async)return Promise.resolve(r.hooks?r.hooks.preprocess(n):n).then(p=>a(p,r)).then(p=>r.hooks?r.hooks.processAllTokens(p):p).then(p=>r.walkTokens?Promise.all(this.walkTokens(p,r.walkTokens)).then(()=>p):p).then(p=>c(p,r)).then(p=>r.hooks?r.hooks.postprocess(p):p).catch(o);try{r.hooks&&(n=r.hooks.preprocess(n));let p=a(n,r);r.hooks&&(p=r.hooks.processAllTokens(p)),r.walkTokens&&this.walkTokens(p,r.walkTokens);let u=c(p,r);return r.hooks&&(u=r.hooks.postprocess(u)),u}catch(p){return o(p)}}}onError(e,t){return n=>{if(n.message+=`
Please report this to https://github.com/markedjs/marked.`,e){let s="<p>An error occurred:</p><pre>"+R(n.message+"",!0)+"</pre>";return t?Promise.resolve(s):s}if(t)return Promise.reject(n);throw n}}};var M=new E;function k(l,e){return M.parse(l,e)}k.options=k.setOptions=function(l){return M.setOptions(l),k.defaults=M.defaults,N(k.defaults),k};k.getDefaults=z;k.defaults=w;k.use=function(...l){return M.use(...l),k.defaults=M.defaults,N(k.defaults),k};k.walkTokens=function(l,e){return M.walkTokens(l,e)};k.parseInline=M.parseInline;k.Parser=b;k.parser=b.parse;k.Renderer=$;k.TextRenderer=_;k.Lexer=x;k.lexer=x.lex;k.Tokenizer=S;k.Hooks=L;k.parse=k;var it=k.options,ot=k.setOptions,lt=k.use,at=k.walkTokens,ct=k.parseInline,pt=k,ut=b.parse,ht=x.lex;

    if(__exports != exports)module.exports = exports;return module.exports}));

    }

    var githubMarkdownCss = ".markdown-body {\r\n  --base-size-4: 0.25rem;\r\n  --base-size-8: 0.5rem;\r\n  --base-size-16: 1rem;\r\n  --base-size-24: 1.5rem;\r\n  --base-size-40: 2.5rem;\r\n  --base-text-weight-normal: 400;\r\n  --base-text-weight-medium: 500;\r\n  --base-text-weight-semibold: 600;\r\n  --fontStack-monospace: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;\r\n  --fgColor-accent: Highlight;\r\n}\r\n@media (prefers-color-scheme: dark) {\r\n  .markdown-body, [data-theme=\"dark\"] {\r\n    /* dark */\r\n    color-scheme: dark;\r\n    --focus-outlineColor: #1f6feb;\r\n    --fgColor-default: #f0f6fc;\r\n    --fgColor-muted: #9198a1;\r\n    --fgColor-accent: #4493f8;\r\n    --fgColor-success: #3fb950;\r\n    --fgColor-attention: #d29922;\r\n    --fgColor-danger: #f85149;\r\n    --fgColor-done: #ab7df8;\r\n    --bgColor-default: #0d1117;\r\n    --bgColor-muted: #151b23;\r\n    --bgColor-neutral-muted: #656c7633;\r\n    --bgColor-attention-muted: #bb800926;\r\n    --borderColor-default: #3d444d;\r\n    --borderColor-muted: #3d444db3;\r\n    --borderColor-neutral-muted: #3d444db3;\r\n    --borderColor-accent-emphasis: #1f6feb;\r\n    --borderColor-success-emphasis: #238636;\r\n    --borderColor-attention-emphasis: #9e6a03;\r\n    --borderColor-danger-emphasis: #da3633;\r\n    --borderColor-done-emphasis: #8957e5;\r\n    --color-prettylights-syntax-comment: #9198a1;\r\n    --color-prettylights-syntax-constant: #79c0ff;\r\n    --color-prettylights-syntax-constant-other-reference-link: #a5d6ff;\r\n    --color-prettylights-syntax-entity: #d2a8ff;\r\n    --color-prettylights-syntax-storage-modifier-import: #f0f6fc;\r\n    --color-prettylights-syntax-entity-tag: #7ee787;\r\n    --color-prettylights-syntax-keyword: #ff7b72;\r\n    --color-prettylights-syntax-string: #a5d6ff;\r\n    --color-prettylights-syntax-variable: #ffa657;\r\n    --color-prettylights-syntax-brackethighlighter-unmatched: #f85149;\r\n    --color-prettylights-syntax-brackethighlighter-angle: #9198a1;\r\n    --color-prettylights-syntax-invalid-illegal-text: #f0f6fc;\r\n    --color-prettylights-syntax-invalid-illegal-bg: #8e1519;\r\n    --color-prettylights-syntax-carriage-return-text: #f0f6fc;\r\n    --color-prettylights-syntax-carriage-return-bg: #b62324;\r\n    --color-prettylights-syntax-string-regexp: #7ee787;\r\n    --color-prettylights-syntax-markup-list: #f2cc60;\r\n    --color-prettylights-syntax-markup-heading: #1f6feb;\r\n    --color-prettylights-syntax-markup-italic: #f0f6fc;\r\n    --color-prettylights-syntax-markup-bold: #f0f6fc;\r\n    --color-prettylights-syntax-markup-deleted-text: #ffdcd7;\r\n    --color-prettylights-syntax-markup-deleted-bg: #67060c;\r\n    --color-prettylights-syntax-markup-inserted-text: #aff5b4;\r\n    --color-prettylights-syntax-markup-inserted-bg: #033a16;\r\n    --color-prettylights-syntax-markup-changed-text: #ffdfb6;\r\n    --color-prettylights-syntax-markup-changed-bg: #5a1e02;\r\n    --color-prettylights-syntax-markup-ignored-text: #f0f6fc;\r\n    --color-prettylights-syntax-markup-ignored-bg: #1158c7;\r\n    --color-prettylights-syntax-meta-diff-range: #d2a8ff;\r\n    --color-prettylights-syntax-sublimelinter-gutter-mark: #3d444d;\r\n  }\r\n}\r\n@media (prefers-color-scheme: light) {\r\n  .markdown-body, [data-theme=\"light\"] {\r\n    /* light */\r\n    color-scheme: light;\r\n    --focus-outlineColor: #0969da;\r\n    --fgColor-default: #1f2328;\r\n    --fgColor-muted: #59636e;\r\n    --fgColor-accent: #0969da;\r\n    --fgColor-success: #1a7f37;\r\n    --fgColor-attention: #9a6700;\r\n    --fgColor-danger: #d1242f;\r\n    --fgColor-done: #8250df;\r\n    --bgColor-default: #ffffff;\r\n    --bgColor-muted: #f6f8fa;\r\n    --bgColor-neutral-muted: #818b981f;\r\n    --bgColor-attention-muted: #fff8c5;\r\n    --borderColor-default: #d1d9e0;\r\n    --borderColor-muted: #d1d9e0b3;\r\n    --borderColor-neutral-muted: #d1d9e0b3;\r\n    --borderColor-accent-emphasis: #0969da;\r\n    --borderColor-success-emphasis: #1a7f37;\r\n    --borderColor-attention-emphasis: #9a6700;\r\n    --borderColor-danger-emphasis: #cf222e;\r\n    --borderColor-done-emphasis: #8250df;\r\n    --color-prettylights-syntax-comment: #59636e;\r\n    --color-prettylights-syntax-constant: #0550ae;\r\n    --color-prettylights-syntax-constant-other-reference-link: #0a3069;\r\n    --color-prettylights-syntax-entity: #6639ba;\r\n    --color-prettylights-syntax-storage-modifier-import: #1f2328;\r\n    --color-prettylights-syntax-entity-tag: #0550ae;\r\n    --color-prettylights-syntax-keyword: #cf222e;\r\n    --color-prettylights-syntax-string: #0a3069;\r\n    --color-prettylights-syntax-variable: #953800;\r\n    --color-prettylights-syntax-brackethighlighter-unmatched: #82071e;\r\n    --color-prettylights-syntax-brackethighlighter-angle: #59636e;\r\n    --color-prettylights-syntax-invalid-illegal-text: #f6f8fa;\r\n    --color-prettylights-syntax-invalid-illegal-bg: #82071e;\r\n    --color-prettylights-syntax-carriage-return-text: #f6f8fa;\r\n    --color-prettylights-syntax-carriage-return-bg: #cf222e;\r\n    --color-prettylights-syntax-string-regexp: #116329;\r\n    --color-prettylights-syntax-markup-list: #3b2300;\r\n    --color-prettylights-syntax-markup-heading: #0550ae;\r\n    --color-prettylights-syntax-markup-italic: #1f2328;\r\n    --color-prettylights-syntax-markup-bold: #1f2328;\r\n    --color-prettylights-syntax-markup-deleted-text: #82071e;\r\n    --color-prettylights-syntax-markup-deleted-bg: #ffebe9;\r\n    --color-prettylights-syntax-markup-inserted-text: #116329;\r\n    --color-prettylights-syntax-markup-inserted-bg: #dafbe1;\r\n    --color-prettylights-syntax-markup-changed-text: #953800;\r\n    --color-prettylights-syntax-markup-changed-bg: #ffd8b5;\r\n    --color-prettylights-syntax-markup-ignored-text: #d1d9e0;\r\n    --color-prettylights-syntax-markup-ignored-bg: #0550ae;\r\n    --color-prettylights-syntax-meta-diff-range: #8250df;\r\n    --color-prettylights-syntax-sublimelinter-gutter-mark: #818b98;\r\n  }\r\n}\r\n\r\n.markdown-body {\r\n  -ms-text-size-adjust: 100%;\r\n  -webkit-text-size-adjust: 100%;\r\n  margin: 0;\r\n  color: var(--fgColor-default);\r\n  background-color: var(--bgColor-default);\r\n  font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",\"Noto Sans\",Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\";\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  word-wrap: break-word;\r\n}\r\n\r\n.markdown-body .octicon {\r\n  display: inline-block;\r\n  fill: currentColor;\r\n  vertical-align: text-bottom;\r\n}\r\n\r\n.markdown-body h1:hover .anchor .octicon-link:before,\r\n.markdown-body h2:hover .anchor .octicon-link:before,\r\n.markdown-body h3:hover .anchor .octicon-link:before,\r\n.markdown-body h4:hover .anchor .octicon-link:before,\r\n.markdown-body h5:hover .anchor .octicon-link:before,\r\n.markdown-body h6:hover .anchor .octicon-link:before {\r\n  width: 16px;\r\n  height: 16px;\r\n  content: ' ';\r\n  display: inline-block;\r\n  background-color: currentColor;\r\n  -webkit-mask-image: url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' version='1.1' aria-hidden='true'><path fill-rule='evenodd' d='M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z'></path></svg>\");\r\n  mask-image: url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' version='1.1' aria-hidden='true'><path fill-rule='evenodd' d='M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z'></path></svg>\");\r\n}\r\n\r\n.markdown-body details,\r\n.markdown-body figcaption,\r\n.markdown-body figure {\r\n  display: block;\r\n}\r\n\r\n.markdown-body summary {\r\n  display: list-item;\r\n}\r\n\r\n.markdown-body [hidden] {\r\n  display: none !important;\r\n}\r\n\r\n.markdown-body a {\r\n  background-color: transparent;\r\n  color: var(--fgColor-accent);\r\n  text-decoration: none;\r\n}\r\n\r\n.markdown-body abbr[title] {\r\n  border-bottom: none;\r\n  -webkit-text-decoration: underline dotted;\r\n  text-decoration: underline dotted;\r\n}\r\n\r\n.markdown-body b,\r\n.markdown-body strong {\r\n  font-weight: var(--base-text-weight-semibold, 600);\r\n}\r\n\r\n.markdown-body dfn {\r\n  font-style: italic;\r\n}\r\n\r\n.markdown-body h1 {\r\n  margin: .67em 0;\r\n  font-weight: var(--base-text-weight-semibold, 600);\r\n  padding-bottom: .3em;\r\n  font-size: 2em;\r\n  border-bottom: 1px solid var(--borderColor-muted);\r\n}\r\n\r\n.markdown-body mark {\r\n  background-color: var(--bgColor-attention-muted);\r\n  color: var(--fgColor-default);\r\n}\r\n\r\n.markdown-body small {\r\n  font-size: 90%;\r\n}\r\n\r\n.markdown-body sub,\r\n.markdown-body sup {\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  position: relative;\r\n  vertical-align: baseline;\r\n}\r\n\r\n.markdown-body sub {\r\n  bottom: -0.25em;\r\n}\r\n\r\n.markdown-body sup {\r\n  top: -0.5em;\r\n}\r\n\r\n.markdown-body img {\r\n  border-style: none;\r\n  max-width: 100%;\r\n  box-sizing: content-box;\r\n}\r\n\r\n.markdown-body code,\r\n.markdown-body kbd,\r\n.markdown-body pre,\r\n.markdown-body samp {\r\n  font-family: monospace;\r\n  font-size: 1em;\r\n}\r\n\r\n.markdown-body figure {\r\n  margin: 1em var(--base-size-40);\r\n}\r\n\r\n.markdown-body hr {\r\n  box-sizing: content-box;\r\n  overflow: hidden;\r\n  background: transparent;\r\n  border-bottom: 1px solid var(--borderColor-muted);\r\n  height: .25em;\r\n  padding: 0;\r\n  margin: var(--base-size-24) 0;\r\n  background-color: var(--borderColor-default);\r\n  border: 0;\r\n}\r\n\r\n.markdown-body input {\r\n  font: inherit;\r\n  margin: 0;\r\n  overflow: visible;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  line-height: inherit;\r\n}\r\n\r\n.markdown-body [type=button],\r\n.markdown-body [type=reset],\r\n.markdown-body [type=submit] {\r\n  -webkit-appearance: button;\r\n  appearance: button;\r\n}\r\n\r\n.markdown-body [type=checkbox],\r\n.markdown-body [type=radio] {\r\n  box-sizing: border-box;\r\n  padding: 0;\r\n}\r\n\r\n.markdown-body [type=number]::-webkit-inner-spin-button,\r\n.markdown-body [type=number]::-webkit-outer-spin-button {\r\n  height: auto;\r\n}\r\n\r\n.markdown-body [type=search]::-webkit-search-cancel-button,\r\n.markdown-body [type=search]::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n}\r\n\r\n.markdown-body ::-webkit-input-placeholder {\r\n  color: inherit;\r\n  opacity: .54;\r\n}\r\n\r\n.markdown-body ::-webkit-file-upload-button {\r\n  -webkit-appearance: button;\r\n  appearance: button;\r\n  font: inherit;\r\n}\r\n\r\n.markdown-body a:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.markdown-body ::placeholder {\r\n  color: var(--fgColor-muted);\r\n  opacity: 1;\r\n}\r\n\r\n.markdown-body hr::before {\r\n  display: table;\r\n  content: \"\";\r\n}\r\n\r\n.markdown-body hr::after {\r\n  display: table;\r\n  clear: both;\r\n  content: \"\";\r\n}\r\n\r\n.markdown-body table {\r\n  border-spacing: 0;\r\n  border-collapse: collapse;\r\n  display: block;\r\n  width: max-content;\r\n  max-width: 100%;\r\n  overflow: auto;\r\n  font-variant: tabular-nums;\r\n}\r\n\r\n.markdown-body td,\r\n.markdown-body th {\r\n  padding: 0;\r\n}\r\n\r\n.markdown-body details summary {\r\n  cursor: pointer;\r\n}\r\n\r\n.markdown-body a:focus,\r\n.markdown-body [role=button]:focus,\r\n.markdown-body input[type=radio]:focus,\r\n.markdown-body input[type=checkbox]:focus {\r\n  outline: 2px solid var(--focus-outlineColor);\r\n  outline-offset: -2px;\r\n  box-shadow: none;\r\n}\r\n\r\n.markdown-body a:focus:not(:focus-visible),\r\n.markdown-body [role=button]:focus:not(:focus-visible),\r\n.markdown-body input[type=radio]:focus:not(:focus-visible),\r\n.markdown-body input[type=checkbox]:focus:not(:focus-visible) {\r\n  outline: solid 1px transparent;\r\n}\r\n\r\n.markdown-body a:focus-visible,\r\n.markdown-body [role=button]:focus-visible,\r\n.markdown-body input[type=radio]:focus-visible,\r\n.markdown-body input[type=checkbox]:focus-visible {\r\n  outline: 2px solid var(--focus-outlineColor);\r\n  outline-offset: -2px;\r\n  box-shadow: none;\r\n}\r\n\r\n.markdown-body a:not([class]):focus,\r\n.markdown-body a:not([class]):focus-visible,\r\n.markdown-body input[type=radio]:focus,\r\n.markdown-body input[type=radio]:focus-visible,\r\n.markdown-body input[type=checkbox]:focus,\r\n.markdown-body input[type=checkbox]:focus-visible {\r\n  outline-offset: 0;\r\n}\r\n\r\n.markdown-body kbd {\r\n  display: inline-block;\r\n  padding: var(--base-size-4);\r\n  font: 11px var(--fontStack-monospace, ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace);\r\n  line-height: 10px;\r\n  color: var(--fgColor-default);\r\n  vertical-align: middle;\r\n  background-color: var(--bgColor-muted);\r\n  border: solid 1px var(--borderColor-neutral-muted);\r\n  border-bottom-color: var(--borderColor-neutral-muted);\r\n  border-radius: 6px;\r\n  box-shadow: inset 0 -1px 0 var(--borderColor-neutral-muted);\r\n}\r\n\r\n.markdown-body h1,\r\n.markdown-body h2,\r\n.markdown-body h3,\r\n.markdown-body h4,\r\n.markdown-body h5,\r\n.markdown-body h6 {\r\n  margin-top: var(--base-size-24);\r\n  margin-bottom: var(--base-size-16);\r\n  font-weight: var(--base-text-weight-semibold, 600);\r\n  line-height: 1.25;\r\n}\r\n\r\n.markdown-body h2 {\r\n  font-weight: var(--base-text-weight-semibold, 600);\r\n  padding-bottom: .3em;\r\n  font-size: 1.5em;\r\n  border-bottom: 1px solid var(--borderColor-muted);\r\n}\r\n\r\n.markdown-body h3 {\r\n  font-weight: var(--base-text-weight-semibold, 600);\r\n  font-size: 1.25em;\r\n}\r\n\r\n.markdown-body h4 {\r\n  font-weight: var(--base-text-weight-semibold, 600);\r\n  font-size: 1em;\r\n}\r\n\r\n.markdown-body h5 {\r\n  font-weight: var(--base-text-weight-semibold, 600);\r\n  font-size: .875em;\r\n}\r\n\r\n.markdown-body h6 {\r\n  font-weight: var(--base-text-weight-semibold, 600);\r\n  font-size: .85em;\r\n  color: var(--fgColor-muted);\r\n}\r\n\r\n.markdown-body p {\r\n  margin-top: 0;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.markdown-body blockquote {\r\n  margin: 0;\r\n  padding: 0 1em;\r\n  color: var(--fgColor-muted);\r\n  border-left: .25em solid var(--borderColor-default);\r\n}\r\n\r\n.markdown-body ul,\r\n.markdown-body ol {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding-left: 2em;\r\n}\r\n\r\n.markdown-body ol ol,\r\n.markdown-body ul ol {\r\n  list-style-type: lower-roman;\r\n}\r\n\r\n.markdown-body ul ul ol,\r\n.markdown-body ul ol ol,\r\n.markdown-body ol ul ol,\r\n.markdown-body ol ol ol {\r\n  list-style-type: lower-alpha;\r\n}\r\n\r\n.markdown-body dd {\r\n  margin-left: 0;\r\n}\r\n\r\n.markdown-body tt,\r\n.markdown-body code,\r\n.markdown-body samp {\r\n  font-family: var(--fontStack-monospace, ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace);\r\n  font-size: 12px;\r\n}\r\n\r\n.markdown-body pre {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-family: var(--fontStack-monospace, ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace);\r\n  font-size: 12px;\r\n  word-wrap: normal;\r\n}\r\n\r\n.markdown-body .octicon {\r\n  display: inline-block;\r\n  overflow: visible !important;\r\n  vertical-align: text-bottom;\r\n  fill: currentColor;\r\n}\r\n\r\n.markdown-body input::-webkit-outer-spin-button,\r\n.markdown-body input::-webkit-inner-spin-button {\r\n  margin: 0;\r\n  appearance: none;\r\n}\r\n\r\n.markdown-body .mr-2 {\r\n  margin-right: var(--base-size-8, 8px) !important;\r\n}\r\n\r\n.markdown-body::before {\r\n  display: table;\r\n  content: \"\";\r\n}\r\n\r\n.markdown-body::after {\r\n  display: table;\r\n  clear: both;\r\n  content: \"\";\r\n}\r\n\r\n.markdown-body>*:first-child {\r\n  margin-top: 0 !important;\r\n}\r\n\r\n.markdown-body>*:last-child {\r\n  margin-bottom: 0 !important;\r\n}\r\n\r\n.markdown-body a:not([href]) {\r\n  color: inherit;\r\n  text-decoration: none;\r\n}\r\n\r\n.markdown-body .absent {\r\n  color: var(--fgColor-danger);\r\n}\r\n\r\n.markdown-body .anchor {\r\n  float: left;\r\n  padding-right: var(--base-size-4);\r\n  margin-left: -20px;\r\n  line-height: 1;\r\n}\r\n\r\n.markdown-body .anchor:focus {\r\n  outline: none;\r\n}\r\n\r\n.markdown-body p,\r\n.markdown-body blockquote,\r\n.markdown-body ul,\r\n.markdown-body ol,\r\n.markdown-body dl,\r\n.markdown-body table,\r\n.markdown-body pre,\r\n.markdown-body details {\r\n  margin-top: 0;\r\n  margin-bottom: var(--base-size-16);\r\n}\r\n\r\n.markdown-body blockquote>:first-child {\r\n  margin-top: 0;\r\n}\r\n\r\n.markdown-body blockquote>:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.markdown-body h1 .octicon-link,\r\n.markdown-body h2 .octicon-link,\r\n.markdown-body h3 .octicon-link,\r\n.markdown-body h4 .octicon-link,\r\n.markdown-body h5 .octicon-link,\r\n.markdown-body h6 .octicon-link {\r\n  color: var(--fgColor-default);\r\n  vertical-align: middle;\r\n  visibility: hidden;\r\n}\r\n\r\n.markdown-body h1:hover .anchor,\r\n.markdown-body h2:hover .anchor,\r\n.markdown-body h3:hover .anchor,\r\n.markdown-body h4:hover .anchor,\r\n.markdown-body h5:hover .anchor,\r\n.markdown-body h6:hover .anchor {\r\n  text-decoration: none;\r\n}\r\n\r\n.markdown-body h1:hover .anchor .octicon-link,\r\n.markdown-body h2:hover .anchor .octicon-link,\r\n.markdown-body h3:hover .anchor .octicon-link,\r\n.markdown-body h4:hover .anchor .octicon-link,\r\n.markdown-body h5:hover .anchor .octicon-link,\r\n.markdown-body h6:hover .anchor .octicon-link {\r\n  visibility: visible;\r\n}\r\n\r\n.markdown-body h1 tt,\r\n.markdown-body h1 code,\r\n.markdown-body h2 tt,\r\n.markdown-body h2 code,\r\n.markdown-body h3 tt,\r\n.markdown-body h3 code,\r\n.markdown-body h4 tt,\r\n.markdown-body h4 code,\r\n.markdown-body h5 tt,\r\n.markdown-body h5 code,\r\n.markdown-body h6 tt,\r\n.markdown-body h6 code {\r\n  padding: 0 .2em;\r\n  font-size: inherit;\r\n}\r\n\r\n.markdown-body summary h1,\r\n.markdown-body summary h2,\r\n.markdown-body summary h3,\r\n.markdown-body summary h4,\r\n.markdown-body summary h5,\r\n.markdown-body summary h6 {\r\n  display: inline-block;\r\n}\r\n\r\n.markdown-body summary h1 .anchor,\r\n.markdown-body summary h2 .anchor,\r\n.markdown-body summary h3 .anchor,\r\n.markdown-body summary h4 .anchor,\r\n.markdown-body summary h5 .anchor,\r\n.markdown-body summary h6 .anchor {\r\n  margin-left: -40px;\r\n}\r\n\r\n.markdown-body summary h1,\r\n.markdown-body summary h2 {\r\n  padding-bottom: 0;\r\n  border-bottom: 0;\r\n}\r\n\r\n.markdown-body ul.no-list,\r\n.markdown-body ol.no-list {\r\n  padding: 0;\r\n  list-style-type: none;\r\n}\r\n\r\n.markdown-body ol[type=\"a s\"] {\r\n  list-style-type: lower-alpha;\r\n}\r\n\r\n.markdown-body ol[type=\"A s\"] {\r\n  list-style-type: upper-alpha;\r\n}\r\n\r\n.markdown-body ol[type=\"i s\"] {\r\n  list-style-type: lower-roman;\r\n}\r\n\r\n.markdown-body ol[type=\"I s\"] {\r\n  list-style-type: upper-roman;\r\n}\r\n\r\n.markdown-body ol[type=\"1\"] {\r\n  list-style-type: decimal;\r\n}\r\n\r\n.markdown-body div>ol:not([type]) {\r\n  list-style-type: decimal;\r\n}\r\n\r\n.markdown-body ul ul,\r\n.markdown-body ul ol,\r\n.markdown-body ol ol,\r\n.markdown-body ol ul {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n}\r\n\r\n.markdown-body li>p {\r\n  margin-top: var(--base-size-16);\r\n}\r\n\r\n.markdown-body li+li {\r\n  margin-top: .25em;\r\n}\r\n\r\n.markdown-body dl {\r\n  padding: 0;\r\n}\r\n\r\n.markdown-body dl dt {\r\n  padding: 0;\r\n  margin-top: var(--base-size-16);\r\n  font-size: 1em;\r\n  font-style: italic;\r\n  font-weight: var(--base-text-weight-semibold, 600);\r\n}\r\n\r\n.markdown-body dl dd {\r\n  padding: 0 var(--base-size-16);\r\n  margin-bottom: var(--base-size-16);\r\n}\r\n\r\n.markdown-body table th {\r\n  font-weight: var(--base-text-weight-semibold, 600);\r\n}\r\n\r\n.markdown-body table th,\r\n.markdown-body table td {\r\n  padding: 6px 13px;\r\n  border: 1px solid var(--borderColor-default);\r\n}\r\n\r\n.markdown-body table td>:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.markdown-body table tr {\r\n  background-color: var(--bgColor-default);\r\n  border-top: 1px solid var(--borderColor-muted);\r\n}\r\n\r\n.markdown-body table tr:nth-child(2n) {\r\n  background-color: var(--bgColor-muted);\r\n}\r\n\r\n.markdown-body table img {\r\n  background-color: transparent;\r\n}\r\n\r\n.markdown-body img[align=right] {\r\n  padding-left: 20px;\r\n}\r\n\r\n.markdown-body img[align=left] {\r\n  padding-right: 20px;\r\n}\r\n\r\n.markdown-body .emoji {\r\n  max-width: none;\r\n  vertical-align: text-top;\r\n  background-color: transparent;\r\n}\r\n\r\n.markdown-body span.frame {\r\n  display: block;\r\n  overflow: hidden;\r\n}\r\n\r\n.markdown-body span.frame>span {\r\n  display: block;\r\n  float: left;\r\n  width: auto;\r\n  padding: 7px;\r\n  margin: 13px 0 0;\r\n  overflow: hidden;\r\n  border: 1px solid var(--borderColor-default);\r\n}\r\n\r\n.markdown-body span.frame span img {\r\n  display: block;\r\n  float: left;\r\n}\r\n\r\n.markdown-body span.frame span span {\r\n  display: block;\r\n  padding: 5px 0 0;\r\n  clear: both;\r\n  color: var(--fgColor-default);\r\n}\r\n\r\n.markdown-body span.align-center {\r\n  display: block;\r\n  overflow: hidden;\r\n  clear: both;\r\n}\r\n\r\n.markdown-body span.align-center>span {\r\n  display: block;\r\n  margin: 13px auto 0;\r\n  overflow: hidden;\r\n  text-align: center;\r\n}\r\n\r\n.markdown-body span.align-center span img {\r\n  margin: 0 auto;\r\n  text-align: center;\r\n}\r\n\r\n.markdown-body span.align-right {\r\n  display: block;\r\n  overflow: hidden;\r\n  clear: both;\r\n}\r\n\r\n.markdown-body span.align-right>span {\r\n  display: block;\r\n  margin: 13px 0 0;\r\n  overflow: hidden;\r\n  text-align: right;\r\n}\r\n\r\n.markdown-body span.align-right span img {\r\n  margin: 0;\r\n  text-align: right;\r\n}\r\n\r\n.markdown-body span.float-left {\r\n  display: block;\r\n  float: left;\r\n  margin-right: 13px;\r\n  overflow: hidden;\r\n}\r\n\r\n.markdown-body span.float-left span {\r\n  margin: 13px 0 0;\r\n}\r\n\r\n.markdown-body span.float-right {\r\n  display: block;\r\n  float: right;\r\n  margin-left: 13px;\r\n  overflow: hidden;\r\n}\r\n\r\n.markdown-body span.float-right>span {\r\n  display: block;\r\n  margin: 13px auto 0;\r\n  overflow: hidden;\r\n  text-align: right;\r\n}\r\n\r\n.markdown-body code,\r\n.markdown-body tt {\r\n  padding: .2em .4em;\r\n  margin: 0;\r\n  font-size: 85%;\r\n  white-space: break-spaces;\r\n  background-color: var(--bgColor-neutral-muted);\r\n  border-radius: 6px;\r\n}\r\n\r\n.markdown-body code br,\r\n.markdown-body tt br {\r\n  display: none;\r\n}\r\n\r\n.markdown-body del code {\r\n  text-decoration: inherit;\r\n}\r\n\r\n.markdown-body samp {\r\n  font-size: 85%;\r\n}\r\n\r\n.markdown-body pre code {\r\n  font-size: 100%;\r\n}\r\n\r\n.markdown-body pre>code {\r\n  padding: 0;\r\n  margin: 0;\r\n  word-break: normal;\r\n  white-space: pre;\r\n  background: transparent;\r\n  border: 0;\r\n}\r\n\r\n.markdown-body .highlight {\r\n  margin-bottom: var(--base-size-16);\r\n}\r\n\r\n.markdown-body .highlight pre {\r\n  margin-bottom: 0;\r\n  word-break: normal;\r\n}\r\n\r\n.markdown-body .highlight pre,\r\n.markdown-body pre {\r\n  padding: var(--base-size-16);\r\n  overflow: auto;\r\n  font-size: 85%;\r\n  line-height: 1.45;\r\n  color: var(--fgColor-default);\r\n  background-color: var(--bgColor-muted);\r\n  border-radius: 6px;\r\n}\r\n\r\n.markdown-body pre code,\r\n.markdown-body pre tt {\r\n  display: inline;\r\n  max-width: auto;\r\n  padding: 0;\r\n  margin: 0;\r\n  overflow: visible;\r\n  line-height: inherit;\r\n  word-wrap: normal;\r\n  background-color: transparent;\r\n  border: 0;\r\n}\r\n\r\n.markdown-body .csv-data td,\r\n.markdown-body .csv-data th {\r\n  padding: 5px;\r\n  overflow: hidden;\r\n  font-size: 12px;\r\n  line-height: 1;\r\n  text-align: left;\r\n  white-space: nowrap;\r\n}\r\n\r\n.markdown-body .csv-data .blob-num {\r\n  padding: 10px var(--base-size-8) 9px;\r\n  text-align: right;\r\n  background: var(--bgColor-default);\r\n  border: 0;\r\n}\r\n\r\n.markdown-body .csv-data tr {\r\n  border-top: 0;\r\n}\r\n\r\n.markdown-body .csv-data th {\r\n  font-weight: var(--base-text-weight-semibold, 600);\r\n  background: var(--bgColor-muted);\r\n  border-top: 0;\r\n}\r\n\r\n.markdown-body [data-footnote-ref]::before {\r\n  content: \"[\";\r\n}\r\n\r\n.markdown-body [data-footnote-ref]::after {\r\n  content: \"]\";\r\n}\r\n\r\n.markdown-body .footnotes {\r\n  font-size: 12px;\r\n  color: var(--fgColor-muted);\r\n  border-top: 1px solid var(--borderColor-default);\r\n}\r\n\r\n.markdown-body .footnotes ol {\r\n  padding-left: var(--base-size-16);\r\n}\r\n\r\n.markdown-body .footnotes ol ul {\r\n  display: inline-block;\r\n  padding-left: var(--base-size-16);\r\n  margin-top: var(--base-size-16);\r\n}\r\n\r\n.markdown-body .footnotes li {\r\n  position: relative;\r\n}\r\n\r\n.markdown-body .footnotes li:target::before {\r\n  position: absolute;\r\n  top: calc(var(--base-size-8)*-1);\r\n  right: calc(var(--base-size-8)*-1);\r\n  bottom: calc(var(--base-size-8)*-1);\r\n  left: calc(var(--base-size-24)*-1);\r\n  pointer-events: none;\r\n  content: \"\";\r\n  border: 2px solid var(--borderColor-accent-emphasis);\r\n  border-radius: 6px;\r\n}\r\n\r\n.markdown-body .footnotes li:target {\r\n  color: var(--fgColor-default);\r\n}\r\n\r\n.markdown-body .footnotes .data-footnote-backref g-emoji {\r\n  font-family: monospace;\r\n}\r\n\r\n.markdown-body body:has(:modal) {\r\n  padding-right: var(--dialog-scrollgutter) !important;\r\n}\r\n\r\n.markdown-body .pl-c {\r\n  color: var(--color-prettylights-syntax-comment);\r\n}\r\n\r\n.markdown-body .pl-c1,\r\n.markdown-body .pl-s .pl-v {\r\n  color: var(--color-prettylights-syntax-constant);\r\n}\r\n\r\n.markdown-body .pl-e,\r\n.markdown-body .pl-en {\r\n  color: var(--color-prettylights-syntax-entity);\r\n}\r\n\r\n.markdown-body .pl-smi,\r\n.markdown-body .pl-s .pl-s1 {\r\n  color: var(--color-prettylights-syntax-storage-modifier-import);\r\n}\r\n\r\n.markdown-body .pl-ent {\r\n  color: var(--color-prettylights-syntax-entity-tag);\r\n}\r\n\r\n.markdown-body .pl-k {\r\n  color: var(--color-prettylights-syntax-keyword);\r\n}\r\n\r\n.markdown-body .pl-s,\r\n.markdown-body .pl-pds,\r\n.markdown-body .pl-s .pl-pse .pl-s1,\r\n.markdown-body .pl-sr,\r\n.markdown-body .pl-sr .pl-cce,\r\n.markdown-body .pl-sr .pl-sre,\r\n.markdown-body .pl-sr .pl-sra {\r\n  color: var(--color-prettylights-syntax-string);\r\n}\r\n\r\n.markdown-body .pl-v,\r\n.markdown-body .pl-smw {\r\n  color: var(--color-prettylights-syntax-variable);\r\n}\r\n\r\n.markdown-body .pl-bu {\r\n  color: var(--color-prettylights-syntax-brackethighlighter-unmatched);\r\n}\r\n\r\n.markdown-body .pl-ii {\r\n  color: var(--color-prettylights-syntax-invalid-illegal-text);\r\n  background-color: var(--color-prettylights-syntax-invalid-illegal-bg);\r\n}\r\n\r\n.markdown-body .pl-c2 {\r\n  color: var(--color-prettylights-syntax-carriage-return-text);\r\n  background-color: var(--color-prettylights-syntax-carriage-return-bg);\r\n}\r\n\r\n.markdown-body .pl-sr .pl-cce {\r\n  font-weight: bold;\r\n  color: var(--color-prettylights-syntax-string-regexp);\r\n}\r\n\r\n.markdown-body .pl-ml {\r\n  color: var(--color-prettylights-syntax-markup-list);\r\n}\r\n\r\n.markdown-body .pl-mh,\r\n.markdown-body .pl-mh .pl-en,\r\n.markdown-body .pl-ms {\r\n  font-weight: bold;\r\n  color: var(--color-prettylights-syntax-markup-heading);\r\n}\r\n\r\n.markdown-body .pl-mi {\r\n  font-style: italic;\r\n  color: var(--color-prettylights-syntax-markup-italic);\r\n}\r\n\r\n.markdown-body .pl-mb {\r\n  font-weight: bold;\r\n  color: var(--color-prettylights-syntax-markup-bold);\r\n}\r\n\r\n.markdown-body .pl-md {\r\n  color: var(--color-prettylights-syntax-markup-deleted-text);\r\n  background-color: var(--color-prettylights-syntax-markup-deleted-bg);\r\n}\r\n\r\n.markdown-body .pl-mi1 {\r\n  color: var(--color-prettylights-syntax-markup-inserted-text);\r\n  background-color: var(--color-prettylights-syntax-markup-inserted-bg);\r\n}\r\n\r\n.markdown-body .pl-mc {\r\n  color: var(--color-prettylights-syntax-markup-changed-text);\r\n  background-color: var(--color-prettylights-syntax-markup-changed-bg);\r\n}\r\n\r\n.markdown-body .pl-mi2 {\r\n  color: var(--color-prettylights-syntax-markup-ignored-text);\r\n  background-color: var(--color-prettylights-syntax-markup-ignored-bg);\r\n}\r\n\r\n.markdown-body .pl-mdr {\r\n  font-weight: bold;\r\n  color: var(--color-prettylights-syntax-meta-diff-range);\r\n}\r\n\r\n.markdown-body .pl-ba {\r\n  color: var(--color-prettylights-syntax-brackethighlighter-angle);\r\n}\r\n\r\n.markdown-body .pl-sg {\r\n  color: var(--color-prettylights-syntax-sublimelinter-gutter-mark);\r\n}\r\n\r\n.markdown-body .pl-corl {\r\n  text-decoration: underline;\r\n  color: var(--color-prettylights-syntax-constant-other-reference-link);\r\n}\r\n\r\n.markdown-body [role=button]:focus:not(:focus-visible),\r\n.markdown-body [role=tabpanel][tabindex=\"0\"]:focus:not(:focus-visible),\r\n.markdown-body button:focus:not(:focus-visible),\r\n.markdown-body summary:focus:not(:focus-visible),\r\n.markdown-body a:focus:not(:focus-visible) {\r\n  outline: none;\r\n  box-shadow: none;\r\n}\r\n\r\n.markdown-body [tabindex=\"0\"]:focus:not(:focus-visible),\r\n.markdown-body details-dialog:focus:not(:focus-visible) {\r\n  outline: none;\r\n}\r\n\r\n.markdown-body g-emoji {\r\n  display: inline-block;\r\n  min-width: 1ch;\r\n  font-family: \"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";\r\n  font-size: 1em;\r\n  font-style: normal !important;\r\n  font-weight: var(--base-text-weight-normal, 400);\r\n  line-height: 1;\r\n  vertical-align: -0.075em;\r\n}\r\n\r\n.markdown-body g-emoji img {\r\n  width: 1em;\r\n  height: 1em;\r\n}\r\n\r\n.markdown-body .task-list-item {\r\n  list-style-type: none;\r\n}\r\n\r\n.markdown-body .task-list-item label {\r\n  font-weight: var(--base-text-weight-normal, 400);\r\n}\r\n\r\n.markdown-body .task-list-item.enabled label {\r\n  cursor: pointer;\r\n}\r\n\r\n.markdown-body .task-list-item+.task-list-item {\r\n  margin-top: var(--base-size-4);\r\n}\r\n\r\n.markdown-body .task-list-item .handle {\r\n  display: none;\r\n}\r\n\r\n.markdown-body .task-list-item-checkbox {\r\n  margin: 0 .2em .25em -1.4em;\r\n  vertical-align: middle;\r\n}\r\n\r\n.markdown-body ul:dir(rtl) .task-list-item-checkbox {\r\n  margin: 0 -1.6em .25em .2em;\r\n}\r\n\r\n.markdown-body ol:dir(rtl) .task-list-item-checkbox {\r\n  margin: 0 -1.6em .25em .2em;\r\n}\r\n\r\n.markdown-body .contains-task-list:hover .task-list-item-convert-container,\r\n.markdown-body .contains-task-list:focus-within .task-list-item-convert-container {\r\n  display: block;\r\n  width: auto;\r\n  height: 24px;\r\n  overflow: visible;\r\n  clip: auto;\r\n}\r\n\r\n.markdown-body ::-webkit-calendar-picker-indicator {\r\n  filter: invert(50%);\r\n}\r\n\r\n.markdown-body .markdown-alert {\r\n  padding: var(--base-size-8) var(--base-size-16);\r\n  margin-bottom: var(--base-size-16);\r\n  color: inherit;\r\n  border-left: .25em solid var(--borderColor-default);\r\n}\r\n\r\n.markdown-body .markdown-alert>:first-child {\r\n  margin-top: 0;\r\n}\r\n\r\n.markdown-body .markdown-alert>:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.markdown-body .markdown-alert .markdown-alert-title {\r\n  display: flex;\r\n  font-weight: var(--base-text-weight-medium, 500);\r\n  align-items: center;\r\n  line-height: 1;\r\n}\r\n\r\n.markdown-body .markdown-alert.markdown-alert-note {\r\n  border-left-color: var(--borderColor-accent-emphasis);\r\n}\r\n\r\n.markdown-body .markdown-alert.markdown-alert-note .markdown-alert-title {\r\n  color: var(--fgColor-accent);\r\n}\r\n\r\n.markdown-body .markdown-alert.markdown-alert-important {\r\n  border-left-color: var(--borderColor-done-emphasis);\r\n}\r\n\r\n.markdown-body .markdown-alert.markdown-alert-important .markdown-alert-title {\r\n  color: var(--fgColor-done);\r\n}\r\n\r\n.markdown-body .markdown-alert.markdown-alert-warning {\r\n  border-left-color: var(--borderColor-attention-emphasis);\r\n}\r\n\r\n.markdown-body .markdown-alert.markdown-alert-warning .markdown-alert-title {\r\n  color: var(--fgColor-attention);\r\n}\r\n\r\n.markdown-body .markdown-alert.markdown-alert-tip {\r\n  border-left-color: var(--borderColor-success-emphasis);\r\n}\r\n\r\n.markdown-body .markdown-alert.markdown-alert-tip .markdown-alert-title {\r\n  color: var(--fgColor-success);\r\n}\r\n\r\n.markdown-body .markdown-alert.markdown-alert-caution {\r\n  border-left-color: var(--borderColor-danger-emphasis);\r\n}\r\n\r\n.markdown-body .markdown-alert.markdown-alert-caution .markdown-alert-title {\r\n  color: var(--fgColor-danger);\r\n}\r\n\r\n.markdown-body>*:first-child>.heading-element:first-child {\r\n  margin-top: 0 !important;\r\n}\r\n\r\n.markdown-body .highlight pre:has(+.zeroclipboard-container) {\r\n  min-height: 52px;\r\n}\r\n";

    function createDB(dbName){

        let handles = new Map();
        handles.set("ob-creation", []);
        handles.set("ob-list", []);
        let  db = indexedDB.open(dbName, 1);


        function define(tableName, listener ){
            if(!handles.get("dbAPI")) {
                handles.get("ob-creation").push({handle: createObject, arg : [tableName, listener]});
            }
            else createObject(tableName);

            return  _get_(tableName)
        }



        function createObject(tableName, listener){
            const dbAPI = handles.get("dbAPI");
            let tableExist = dbAPI.objectStoreNames.contains(tableName);
            if(tableExist) listener("error : table already exists !");
            else {
                dbAPI.createObjectStore(tableName, { keyPath: "id", autoIncrement : true });
                listener(null);
            }
        }



        db.addEventListener("upgradeneeded",upgrade);
        db.addEventListener("success", onSuccess);


        function upgrade (ev){
            ev.preventDefault();
            handles.set("dbAPI", ev.target.result);
            let obHandles= handles.get("ob-creation");
            obHandles.forEach((item, index) => {
                item.handle(...item.arg);
                if(index == obHandles.length - 1) handles.set("ob-creation", []);
            });
            
        }


        function onSuccess(ev){
            ev.preventDefault();
            if(db.destroyed){
                ev.close();
                indexedDB.deleteDatabase(dbName);
            }
            else {
                handles.set("db", ev.target.result);
                let obList = handles.get("ob-list");
                obList.forEach(function(item, index){
                    item.handle(...item.arg);
                    if(index == obList.length - 1) handles.set("ob-list", []);

                });
            }
        }


        function destroy(){
            indexedDB.deleteDatabase(dbName);
            Object.keys(API).forEach(function(key){
                delete API[key];
            });
            API.destroyed = true;
        }


        function _get_(tableName, tableObject){

            let api =  {
                tableName,
                create : _build_,
                delete : _delete_,
                get : _getObject_,
                getAll : _getAll_,
                update : _update_
            };
            Object.keys(api).forEach(function(key){
                let originalMethod = api[key];
                api[key] = function(...arg){
                    
                    db = indexedDB.open(dbName, 1);
                    db.onsuccess = onSuccess,
                    db.onupgradeneeded = upgrade;
                    handles.get("ob-list").push({arg, handle : originalMethod, tableName});
                };
            });

            return api
        }

        function _build_(data, listener){
            delete data.id;
            getApi(this.tableName, "readwrite", {name : "add", arg : [data]}, listener);
          
        }



        function _delete_(id, listener){
            getApi(this.tableName, "readwrite", {name : "delete", arg : [id]}, listener);
            
        }

        function _getObject_(id, listener){
            getApi(this.tableName, "readonly", {name : "get", arg : [id]}, listener);
        }

        function _getAll_(listener){
            getApi(this.tableName, "readonly", {name : "getAll", arg : []}, listener);

        }

        function _update_(newData, listener){
            getApi(this.tableName, "readwrite", {name : "put", arg : [newData]}, listener);
            
        }
        
        function getApi(tableName, mode="readwrite", method, listener ){
            let api = handles.get("db");
            const transaction = api.transaction([tableName], mode);
            const store = transaction.objectStore(tableName);
            const request = store[method.name](...method.arg);
            request.onsuccess = function(result) { listener(null, result.target.result, result);};
            request.onerror = function(event) { listener(event.target.error, event);};
        }

        const API = {
            define,
            destroy
        };

        return API
    }

    function BookDB(){
        const model  = createDB("book");
        const BOOKS = new Map();

        const books = model.define("books", function(){
            console.log("books model created !");
        });

        function createBook(data={}, callback){    
            books.create(data, function(e,id){
                if(id) { 
                    data.id = id;
                    BOOKS.set(data.key, data);
                    callback(id);
                }
            });
        }

        function addNote(bKey, data){
           const book = BOOKS.get(bKey);
           if(!book) return;
           if(!book.notes) book.notes = {};
           data.cells = {};
           book.notes[data.key] = data;
           updateBook(book);
        }

        function updateCell(cell){
            const book = BOOKS.get(cell.bookKey);
            if(!book) return;
            book.notes[cell.noteKey].cells[cell.key] = cell.text;
            updateBook(book);
            
        }
        function updateBook(data, callback){
            books.update(data, function(e){});
        }

        function getAllBooks(callback){
            books.getAll(function(err, data){
                callback(data);
            });
        }   

       
        return {
            createBook,
            updateBook,
            getAllBooks,
            addNote,
            updateCell,
            BOOKS
        }

        
    }

    leistrap.addCss(mainCss);
    leistrap.addCss(leisButton());
    leistrap.addCss(githubMarkdownCss);
    marked_();

    const model = BookDB();

    function createBookUi(parent){

        const container = leistrap.create("div", {className : "leis-flex leis-row container", parent});
        const side = leistrap.create("div", {parent: container, className : " leis-flex side"});
        const content = leistrap.create("div", {parent: container, className : "content"});
        const header = leistrap.create("div", {className : "leis-flex leis-row header", parent : container});
        const menuBtn = leistrap.create("i", {className : "bi bi-list", parent : header});
        menuBtn.addEvent("click", function(e){ 
            e.stopPropagation();
            side.toggleClassName("_show");        
        });
        
        leistrap.create("button", {
            type : "button",
            className : "leis-btn leis-btn-primary",
            text : "Nouveau cahier",
            parent : side,
            onclick: addNewBook
        });

        const bookCd = leistrap.create("div", {className : "leis-flex book-cd", parent : side});
        const bookList = leistrap.create("ul", {className : "book-list", parent : bookCd});

        const tab = leisTab({
            btnParent : side, 
            contentParent : content
        });


            
        const _modal = (function(){
            const modal = leisModal("");
            const input = textBox(modal.body, "Nom");
            input.container.setStyleSheet({flexDirection : "row"});
            input.input.setStyleSheet({width : "85%"});
            modal.body.setStyleSheet({display : "flex", justifyContent : 'center', alignItems : "center"});
            modal.footer.destroy();

            input.input.addEvent("keyup", function(e){
                if(e.keyCode == 13){
                    const name =    this._conf.value; 
                    if(modal.action) modal.action(name);
                    this._conf.value = "";
                    modal.hide();
                }
            });
            return modal
        })();


        function addNewBook(){
            _modal.show();
            _modal.title.setText("Nouveau cahier");
            _modal.action = function(name){
                const key = generateId(2, 7);
                model.createBook({name, key}, function(id){
                    createBook(name, key);
                });
            };
        }

        function createBook(name, key){
            const book = leistrap.create("li", {text : name});
            book.addEvent("click", function(){tab.invoke(key);});
            bookList.add(book);
            const content = setBookContent(key);
            tab.define(key, content.cnt);
            return content
        }

        function setBookContent(bookKey){
            const cnt = leistrap.create("div", {className:  "b-cnt"});
            const header  = leistrap.create("div", {className : "h-b", parent : cnt});
            const btnNewNote = leistrap.create("button", {text : "Nouvelle note", className : "leis-btn leis-btn-primary n-b", parent: header});
            const _content = leistrap.create("div", {parent : cnt, className : "cd-b"});

            const noteList = leistrap.create("ul", {parent : _content, className : "note-list"});
            btnNewNote.addEvent("click", function(){
                _modal.show();
                _modal.title.setText("Nouvelle note");
                _modal.action = function(name){
                    const key = generateId(2, 7);
                    model.addNote(bookKey, {name, key} );
                    createNote(name, bookKey, key, noteList);
                };
            });
            return {
                noteList,
                cnt
            }
        }

        function createNote(name, bookKey, key, noteList){
            const note = leistrap.create("li", {text : name})
            .addEvent("click", function(){ tab.invoke(key);});
            noteList.add(note);
            const content = setNoteContent(bookKey, key);
            tab.define(key, content);
            return content
        }

        function setNoteContent(bookKey, key){
            const  cnt  = leistrap.create('div', {className : "mk"} );
            leistrap.create("button", {
                className : "leis-btn n-b",
                 parent: cnt,
                 content : [leistrap.create("i", {className : 'bi bi-plus'})],
                 onclick : function(){ addCell(cnt, bookKey, key,  generateId(2, 7));}
            });

            return cnt
        }

        const cellEditor = (function(){
            const modal = leisModal();
            modal.header.destroy();
            modal.setSize("80%", "80vh");
            modal.dialog.setClassName("dia-editor");
            const textEditor =  leistrap.create("textarea", {className : "cell-editor", parent : modal.body});
            modal.body.setStyleSheet({margin : "0", padding : "0", position : "relative", height : "100%", overflow : "hidden"});
            modal.footer.destroy();
            const btnValid = leistrap.create("button", {className : "leis-btn n-b cb", text : "Ok", parent : modal.dialog});
            btnValid.addEvent("click", function(){
               if(modal.cell) {
                    modal.cell._conf.innerHTML = marked.parse(textEditor._conf.value);
                    modal.cell.data.info.text = textEditor._conf.value;
                    model.updateCell( modal.cell.data.info);
               }
                textEditor._conf.value = "";
                modal.hide();
            });
            modal.editor = textEditor;
           
            return modal
        })();

        function addCell(parent, bookKey, noteKey, key){
            cellEditor.editor._conf.value = "";
            cellEditor.show();
            createCell(parent, bookKey, noteKey, key);
        }

        function createCell(parent, bookKey, noteKey, key, text){
            const cell = leistrap.create("div", {parent, className : "markdown-body"});
            cell.data.info = {
                bookKey,
                noteKey,
                key, 
                text
            };
            cellEditor.cell = cell;

            cell.addEvent("dblclick", function(){
                cellEditor.editor._conf.value = this.data.info.text;
                 cellEditor.cell = this;
                cellEditor.show();
            });

            if(text) cell._conf.innerHTML = marked.parse(text);
        }
        
        
        model.getAllBooks(function(data){
            data.forEach(book => {
                model.BOOKS.set(book.key, book);
                const b = createBook(book.name, book.key);
                if(book.notes) loopObject(book.notes, function(note, noteKey){
                    const n = createNote(note.name, book.key,  noteKey,  b.noteList);
                    if(note.cells) loopObject(note.cells, function(text, cellKey){
                        createCell(n, book.key, noteKey, cellKey,  text);
                    });
                });
            });
        });

        window.addEventListener("click", function(){
            if(side._conf.classList.contains("_show")) side.removeClassName("_show");
        });

        return {
            container,
            side, 
            content,
            tab
        }

      
    }

    const fonts = `@font-face{font-display:block;font-family:bootstrap-icons;src:url("${ft1}") format("woff2"),url("${ft1}") format("woff")}`;

    leistrap.whenReady(function(){
        leistrap.addCss(fonts+bsIcon);
        createBookUi(this);
    });

    leistrap.render("main");

})();
